{"ast":null,"code":"// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\nrequire('@./../public/vendor/jointJS/js/lib/rappid.js'); // import { Options, Vue } from 'vue-class-component';\n\n\nexport default {\n  mounted() {\n    var rectangle = new joint.shapes.standard.Rectangle({\n      z: 1,\n      size: {\n        width: 60,\n        height: 60\n      },\n      removable: false,\n      attrs: {\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0'\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 10,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      }\n    });\n    var ellipse = new joint.shapes.standard.Ellipse({\n      z: 2,\n      size: {\n        width: 60,\n        height: 60\n      },\n      removable: false,\n      attrs: {\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0',\n          pointerEvents: 'bounding-box'\n        }\n      },\n      ports: {\n        items: [{\n          id: 'in-port',\n          group: 'in'\n        }],\n        groups: {\n          in: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'left'\n            },\n            attrs: {\n              portBody: {\n                r: 10,\n                magnet: 'passive',\n                fill: '#FFFFFF',\n                stroke: '#187BD3',\n                strokeWidth: 2\n              }\n            }\n          }\n        }\n      }\n    });\n    var stencilShapes = [rectangle.position(20, 10), ellipse.position(120, 10)];\n    var graph = new joint.dia.Graph();\n    this.paper = new joint.dia.Paper({\n      el: document.getElementById('paper'),\n      width: 800,\n      height: 600,\n      model: graph,\n      async: true,\n      sorting: joint.dia.Paper.sorting.APPROX,\n      linkPinning: false,\n      background: {\n        color: '#F3F7F6'\n      },\n      defaultConnectionPoint: {\n        name: 'boundary'\n      },\n      validateConnection: function (view1, _magnet1, view2, _magnet2) {\n        // Do not allow loop links (Element to Link, Element A to Element B is valid).\n        return view1 !== view2;\n      },\n      highlighting: {\n        'default': {\n          name: 'stroke',\n          options: {\n            padding: 8,\n            attrs: {\n              'stroke': '#187BD3',\n              'stroke-width': 3\n            }\n          }\n        }\n      },\n      defaultLink: function () {\n        return new joint.shapes.standard.Link({\n          attrs: {\n            line: {\n              stroke: '#707070'\n            }\n          }\n        });\n      }\n    });\n    var stencil = new joint.ui.Stencil({\n      paper: paper,\n      width: 200,\n      height: 100,\n      dropAnimation: {\n        duration: 200,\n        easing: 'swing'\n      },\n      layout: function (graph) {\n        var elements = graph.getElements().filter(function (el) {\n          return el.get('removable');\n        }); // Automatically layout the removable elements only.\n\n        joint.layout.GridLayout.layout(elements, {\n          marginY: 70,\n          columns: 1,\n          rowHeight: 'compact',\n          dx: 20,\n          dy: 10,\n          centre: false,\n          resizeToFit: false\n        });\n      }\n    });\n    stencil.load(stencilShapes);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["require","mounted","rectangle","joint","shapes","standard","Rectangle","z","size","width","height","removable","attrs","root","magnet","body","fill","stroke","ports","items","id","group","groups","out","markup","tagName","selector","position","name","portBody","r","ellipse","Ellipse","pointerEvents","in","strokeWidth","stencilShapes","graph","dia","Graph","paper","Paper","el","document","getElementById","model","async","sorting","APPROX","linkPinning","background","color","defaultConnectionPoint","validateConnection","view1","_magnet1","view2","_magnet2","highlighting","options","padding","defaultLink","Link","line","stencil","ui","Stencil","dropAnimation","duration","easing","layout","elements","getElements","filter","get","GridLayout","marginY","columns","rowHeight","dx","dy","centre","resizeToFit","load"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["\n<template>\n<h1>Home</h1>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  \n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\n\n// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\n\nrequire('@./../public/vendor/jointJS/js/lib/rappid.js');\n\n\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n    var rectangle = new joint.shapes.standard.Rectangle({\n        z: 1,\n        size: {\n            width: 60,\n            height: 60\n        },\n        removable: false,\n        attrs: {\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0'\n            }\n        },\n        ports: {\n            items: [{\n                id: 'out-port',\n                group: 'out'\n            }],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 10,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    var ellipse = new joint.shapes.standard.Ellipse({\n        z: 2,\n        size: {\n            width: 60,\n            height: 60\n        },\n        removable: false,\n        attrs: {\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                pointerEvents: 'bounding-box'\n            }\n        },\n        ports: {\n            items: [{\n                id: 'in-port',\n                group: 'in'\n            }],\n            groups: {\n                in: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'left'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 10,\n                            magnet: 'passive',\n                            fill: '#FFFFFF',\n                            stroke: '#187BD3',\n                            strokeWidth: 2\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    var stencilShapes = [\n        rectangle.position(20, 10),\n        ellipse.position(120, 10)\n    ];var graph = new joint.dia.Graph;\n\n    this.paper = new joint.dia.Paper({\n        el: document.getElementById('paper'),\n        width: 800,\n        height: 600,\n        model: graph,\n        async: true,\n        sorting: joint.dia.Paper.sorting.APPROX,\n        linkPinning: false,\n        background: { color: '#F3F7F6' },\n        defaultConnectionPoint: { name: 'boundary' },\n        validateConnection: function(view1, _magnet1, view2, _magnet2) {\n            // Do not allow loop links (Element to Link, Element A to Element B is valid).\n            return view1 !== view2;\n        },\n        highlighting: {\n            'default': {\n                name: 'stroke',\n                options: {\n                    padding: 8,\n                    attrs: {\n                        'stroke': '#187BD3',\n                        'stroke-width': 3\n                    }\n                }\n            }\n        },\n        defaultLink: function() {\n            return new joint.shapes.standard.Link({\n                attrs: {\n                    line: {\n                        stroke: '#707070'\n                    }\n                }\n            });\n        }\n    });\n        var stencil = new joint.ui.Stencil({\n        paper: paper,\n        width: 200,\n        height: 100,\n        dropAnimation: { duration: 200, easing: 'swing' },\n        layout: function(graph) {\n            var elements = graph.getElements().filter(function(el) {\n                return el.get('removable');\n            });\n            // Automatically layout the removable elements only.\n            joint.layout.GridLayout.layout(elements, {\n                marginY: 70,\n                columns: 1,\n                rowHeight: 'compact',\n                dx: 20,\n                dy: 10,\n                centre: false,\n                resizeToFit: false\n            });\n        }\n    }); stencil.load(stencilShapes);\n    }\n  }\n\n  \n\n</script>\n\n<style >\n@import \"@/../public/vendor/jointJS/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}