{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport * as g from '../g/index.mjs';\nimport V from '../V/index.mjs';\nimport * as util from '../util/index.mjs';\nimport * as connectionStrategies from '../connectionStrategies/index.mjs';\nimport * as mvc from '../mvc/index.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\n\nfunction getAnchor(coords, view, magnet) {\n  // take advantage of an existing logic inside of the\n  // pin relative connection strategy\n  var end = connectionStrategies.pinRelative.call(this.paper, {}, view, magnet, coords, this.model);\n  return end.anchor;\n}\n\nfunction snapAnchor(coords, view, magnet, type, relatedView, toolView) {\n  var snapRadius = toolView.options.snapRadius;\n  var isSource = type === 'source';\n  var refIndex = isSource ? 0 : -1;\n  var ref = this.model.vertex(refIndex) || this.getEndAnchor(isSource ? 'target' : 'source');\n\n  if (ref) {\n    if (Math.abs(ref.x - coords.x) < snapRadius) coords.x = ref.x;\n    if (Math.abs(ref.y - coords.y) < snapRadius) coords.y = ref.y;\n  }\n\n  return coords;\n}\n\nfunction getViewBBox(view, useModelGeometry) {\n  const {\n    model\n  } = view;\n  if (useModelGeometry) return model.getBBox();\n  return model.isLink() ? view.getConnection().bbox() : view.getNodeUnrotatedBBox(view.el);\n} // Vertex Handles\n\n\nvar VertexHandle = mvc.View.extend({\n  tagName: 'circle',\n  svgElement: true,\n  className: 'marker-vertex',\n  events: {\n    mousedown: 'onPointerDown',\n    touchstart: 'onPointerDown',\n    dblclick: 'onDoubleClick',\n    dbltap: 'onDoubleClick'\n  },\n  documentEvents: {\n    mousemove: 'onPointerMove',\n    touchmove: 'onPointerMove',\n    mouseup: 'onPointerUp',\n    touchend: 'onPointerUp',\n    touchcancel: 'onPointerUp'\n  },\n  attributes: {\n    'r': 6,\n    'fill': '#33334F',\n    'stroke': '#FFFFFF',\n    'stroke-width': 2,\n    'cursor': 'move'\n  },\n  position: function (x, y) {\n    this.vel.attr({\n      cx: x,\n      cy: y\n    });\n  },\n  onPointerDown: function (evt) {\n    if (this.options.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    this.options.paper.undelegateEvents();\n    this.delegateDocumentEvents(null, evt.data);\n    this.trigger('will-change', this, evt);\n  },\n  onPointerMove: function (evt) {\n    this.trigger('changing', this, evt);\n  },\n  onDoubleClick: function (evt) {\n    this.trigger('remove', this, evt);\n  },\n  onPointerUp: function (evt) {\n    this.trigger('changed', this, evt);\n    this.undelegateDocumentEvents();\n    this.options.paper.delegateEvents();\n  }\n});\nvar Vertices = ToolView.extend({\n  name: 'vertices',\n  options: {\n    handleClass: VertexHandle,\n    snapRadius: 20,\n    redundancyRemoval: true,\n    vertexAdding: true,\n    stopPropagation: true\n  },\n  children: [{\n    tagName: 'path',\n    selector: 'connection',\n    className: 'joint-vertices-path',\n    attributes: {\n      'fill': 'none',\n      'stroke': 'transparent',\n      'stroke-width': 10,\n      'cursor': 'cell'\n    }\n  }],\n  handles: null,\n  events: {\n    'mousedown .joint-vertices-path': 'onPathPointerDown',\n    'touchstart .joint-vertices-path': 'onPathPointerDown'\n  },\n  onRender: function () {\n    if (this.options.vertexAdding) {\n      this.renderChildren();\n      this.updatePath();\n    }\n\n    this.resetHandles();\n    this.renderHandles();\n    return this;\n  },\n  update: function () {\n    var relatedView = this.relatedView;\n    var vertices = relatedView.model.vertices();\n\n    if (vertices.length === this.handles.length) {\n      this.updateHandles();\n    } else {\n      this.resetHandles();\n      this.renderHandles();\n    }\n\n    if (this.options.vertexAdding) {\n      this.updatePath();\n    }\n\n    return this;\n  },\n  resetHandles: function () {\n    var handles = this.handles;\n    this.handles = [];\n    this.stopListening();\n    if (!Array.isArray(handles)) return;\n\n    for (var i = 0, n = handles.length; i < n; i++) {\n      handles[i].remove();\n    }\n  },\n  renderHandles: function () {\n    var relatedView = this.relatedView;\n    var vertices = relatedView.model.vertices();\n\n    for (var i = 0, n = vertices.length; i < n; i++) {\n      var vertex = vertices[i];\n      var handle = new this.options.handleClass({\n        index: i,\n        paper: this.paper,\n        guard: evt => this.guard(evt)\n      });\n      handle.render();\n      handle.position(vertex.x, vertex.y);\n      this.simulateRelatedView(handle.el);\n      handle.vel.appendTo(this.el);\n      this.handles.push(handle);\n      this.startHandleListening(handle);\n    }\n  },\n  updateHandles: function () {\n    var relatedView = this.relatedView;\n    var vertices = relatedView.model.vertices();\n\n    for (var i = 0, n = vertices.length; i < n; i++) {\n      var vertex = vertices[i];\n      var handle = this.handles[i];\n      if (!handle) return;\n      handle.position(vertex.x, vertex.y);\n    }\n  },\n  updatePath: function () {\n    var connection = this.childNodes.connection;\n    if (connection) connection.setAttribute('d', this.relatedView.getSerializedConnection());\n  },\n  startHandleListening: function (handle) {\n    var relatedView = this.relatedView;\n\n    if (relatedView.can('vertexMove')) {\n      this.listenTo(handle, 'will-change', this.onHandleWillChange);\n      this.listenTo(handle, 'changing', this.onHandleChanging);\n      this.listenTo(handle, 'changed', this.onHandleChanged);\n    }\n\n    if (relatedView.can('vertexRemove')) {\n      this.listenTo(handle, 'remove', this.onHandleRemove);\n    }\n  },\n  getNeighborPoints: function (index) {\n    var linkView = this.relatedView;\n    var vertices = linkView.model.vertices();\n    var prev = index > 0 ? vertices[index - 1] : linkView.sourceAnchor;\n    var next = index < vertices.length - 1 ? vertices[index + 1] : linkView.targetAnchor;\n    return {\n      prev: new g.Point(prev),\n      next: new g.Point(next)\n    };\n  },\n  onHandleWillChange: function (_handle, evt) {\n    this.focus();\n    const {\n      relatedView,\n      options\n    } = this;\n    relatedView.model.startBatch('vertex-move', {\n      ui: true,\n      tool: this.cid\n    });\n    if (!options.stopPropagation) relatedView.notifyPointerdown(...relatedView.paper.getPointerArgs(evt));\n  },\n  onHandleChanging: function (handle, evt) {\n    const {\n      options,\n      relatedView: linkView\n    } = this;\n    var index = handle.options.index;\n    var [normalizedEvent, x, y] = linkView.paper.getPointerArgs(evt);\n    var vertex = {\n      x,\n      y\n    };\n    this.snapVertex(vertex, index);\n    linkView.model.vertex(index, vertex, {\n      ui: true,\n      tool: this.cid\n    });\n    handle.position(vertex.x, vertex.y);\n    if (!options.stopPropagation) linkView.notifyPointermove(normalizedEvent, x, y);\n  },\n  onHandleChanged: function (_handle, evt) {\n    const {\n      options,\n      relatedView: linkView\n    } = this;\n    if (options.vertexAdding) this.updatePath();\n    if (!options.redundancyRemoval) return;\n    var verticesRemoved = linkView.removeRedundantLinearVertices({\n      ui: true,\n      tool: this.cid\n    });\n    if (verticesRemoved) this.render();\n    this.blur();\n    linkView.model.stopBatch('vertex-move', {\n      ui: true,\n      tool: this.cid\n    });\n\n    if (this.eventData(evt).vertexAdded) {\n      linkView.model.stopBatch('vertex-add', {\n        ui: true,\n        tool: this.cid\n      });\n    }\n\n    var [normalizedEvt, x, y] = linkView.paper.getPointerArgs(evt);\n    if (!options.stopPropagation) linkView.notifyPointerup(normalizedEvt, x, y);\n    linkView.checkMouseleave(normalizedEvt);\n  },\n  snapVertex: function (vertex, index) {\n    var snapRadius = this.options.snapRadius;\n\n    if (snapRadius > 0) {\n      var neighbors = this.getNeighborPoints(index);\n      var prev = neighbors.prev;\n      var next = neighbors.next;\n\n      if (Math.abs(vertex.x - prev.x) < snapRadius) {\n        vertex.x = prev.x;\n      } else if (Math.abs(vertex.x - next.x) < snapRadius) {\n        vertex.x = next.x;\n      }\n\n      if (Math.abs(vertex.y - prev.y) < snapRadius) {\n        vertex.y = neighbors.prev.y;\n      } else if (Math.abs(vertex.y - next.y) < snapRadius) {\n        vertex.y = next.y;\n      }\n    }\n  },\n  onHandleRemove: function (handle, evt) {\n    var index = handle.options.index;\n    var linkView = this.relatedView;\n    linkView.model.removeVertex(index, {\n      ui: true\n    });\n    if (this.options.vertexAdding) this.updatePath();\n    linkView.checkMouseleave(util.normalizeEvent(evt));\n  },\n  onPathPointerDown: function (evt) {\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    var normalizedEvent = util.normalizeEvent(evt);\n    var vertex = this.paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY).toJSON();\n    var relatedView = this.relatedView;\n    relatedView.model.startBatch('vertex-add', {\n      ui: true,\n      tool: this.cid\n    });\n    var index = relatedView.getVertexIndex(vertex.x, vertex.y);\n    this.snapVertex(vertex, index);\n    relatedView.model.insertVertex(index, vertex, {\n      ui: true,\n      tool: this.cid\n    });\n    this.update();\n    var handle = this.handles[index];\n    this.eventData(normalizedEvent, {\n      vertexAdded: true\n    });\n    handle.onPointerDown(normalizedEvent);\n  },\n  onRemove: function () {\n    this.resetHandles();\n  }\n}, {\n  VertexHandle: VertexHandle // keep as class property\n\n});\nvar SegmentHandle = mvc.View.extend({\n  tagName: 'g',\n  svgElement: true,\n  className: 'marker-segment',\n  events: {\n    mousedown: 'onPointerDown',\n    touchstart: 'onPointerDown'\n  },\n  documentEvents: {\n    mousemove: 'onPointerMove',\n    touchmove: 'onPointerMove',\n    mouseup: 'onPointerUp',\n    touchend: 'onPointerUp',\n    touchcancel: 'onPointerUp'\n  },\n  children: [{\n    tagName: 'line',\n    selector: 'line',\n    attributes: {\n      'stroke': '#33334F',\n      'stroke-width': 2,\n      'fill': 'none',\n      'pointer-events': 'none'\n    }\n  }, {\n    tagName: 'rect',\n    selector: 'handle',\n    attributes: {\n      'width': 20,\n      'height': 8,\n      'x': -10,\n      'y': -4,\n      'rx': 4,\n      'ry': 4,\n      'fill': '#33334F',\n      'stroke': '#FFFFFF',\n      'stroke-width': 2\n    }\n  }],\n  onRender: function () {\n    this.renderChildren();\n  },\n  position: function (x, y, angle, view) {\n    var matrix = V.createSVGMatrix().translate(x, y).rotate(angle);\n    var handle = this.childNodes.handle;\n    handle.setAttribute('transform', V.matrixToTransformString(matrix));\n    handle.setAttribute('cursor', angle % 180 === 0 ? 'row-resize' : 'col-resize');\n    var viewPoint = view.getClosestPoint(new g.Point(x, y));\n    var line = this.childNodes.line;\n    line.setAttribute('x1', x);\n    line.setAttribute('y1', y);\n    line.setAttribute('x2', viewPoint.x);\n    line.setAttribute('y2', viewPoint.y);\n  },\n  onPointerDown: function (evt) {\n    if (this.options.guard(evt)) return;\n    this.trigger('change:start', this, evt);\n    evt.stopPropagation();\n    evt.preventDefault();\n    this.options.paper.undelegateEvents();\n    this.delegateDocumentEvents(null, evt.data);\n  },\n  onPointerMove: function (evt) {\n    this.trigger('changing', this, evt);\n  },\n  onPointerUp: function (evt) {\n    this.undelegateDocumentEvents();\n    this.options.paper.delegateEvents();\n    this.trigger('change:end', this, evt);\n  },\n  show: function () {\n    this.el.style.display = '';\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n  }\n});\nvar Segments = ToolView.extend({\n  name: 'segments',\n  precision: .5,\n  options: {\n    handleClass: SegmentHandle,\n    segmentLengthThreshold: 40,\n    redundancyRemoval: true,\n    anchor: getAnchor,\n    snapRadius: 10,\n    snapHandle: true,\n    stopPropagation: true\n  },\n  handles: null,\n  onRender: function () {\n    this.resetHandles();\n    var relatedView = this.relatedView;\n    var vertices = relatedView.model.vertices();\n    vertices.unshift(relatedView.sourcePoint);\n    vertices.push(relatedView.targetPoint);\n\n    for (var i = 0, n = vertices.length; i < n - 1; i++) {\n      var vertex = vertices[i];\n      var nextVertex = vertices[i + 1];\n      var handle = this.renderHandle(vertex, nextVertex);\n      this.simulateRelatedView(handle.el);\n      this.handles.push(handle);\n      handle.options.index = i;\n    }\n\n    return this;\n  },\n  renderHandle: function (vertex, nextVertex) {\n    var handle = new this.options.handleClass({\n      paper: this.paper,\n      guard: evt => this.guard(evt)\n    });\n    handle.render();\n    this.updateHandle(handle, vertex, nextVertex);\n    handle.vel.appendTo(this.el);\n    this.startHandleListening(handle);\n    return handle;\n  },\n  update: function () {\n    this.render();\n    return this;\n  },\n  startHandleListening: function (handle) {\n    this.listenTo(handle, 'change:start', this.onHandleChangeStart);\n    this.listenTo(handle, 'changing', this.onHandleChanging);\n    this.listenTo(handle, 'change:end', this.onHandleChangeEnd);\n  },\n  resetHandles: function () {\n    var handles = this.handles;\n    this.handles = [];\n    this.stopListening();\n    if (!Array.isArray(handles)) return;\n\n    for (var i = 0, n = handles.length; i < n; i++) {\n      handles[i].remove();\n    }\n  },\n  shiftHandleIndexes: function (value) {\n    var handles = this.handles;\n\n    for (var i = 0, n = handles.length; i < n; i++) handles[i].options.index += value;\n  },\n  resetAnchor: function (type, anchor) {\n    var relatedModel = this.relatedView.model;\n\n    if (anchor) {\n      relatedModel.prop([type, 'anchor'], anchor, {\n        rewrite: true,\n        ui: true,\n        tool: this.cid\n      });\n    } else {\n      relatedModel.removeProp([type, 'anchor'], {\n        ui: true,\n        tool: this.cid\n      });\n    }\n  },\n  snapHandle: function (handle, position, data) {\n    var index = handle.options.index;\n    var linkView = this.relatedView;\n    var link = linkView.model;\n    var vertices = link.vertices();\n    var axis = handle.options.axis;\n    var prev = vertices[index - 2] || data.sourceAnchor;\n    var next = vertices[index + 1] || data.targetAnchor;\n    var snapRadius = this.options.snapRadius;\n\n    if (Math.abs(position[axis] - prev[axis]) < snapRadius) {\n      position[axis] = prev[axis];\n    } else if (Math.abs(position[axis] - next[axis]) < snapRadius) {\n      position[axis] = next[axis];\n    }\n\n    return position;\n  },\n  onHandleChanging: function (handle, evt) {\n    const {\n      options\n    } = this;\n    var data = this.eventData(evt);\n    var relatedView = this.relatedView;\n    var paper = relatedView.paper;\n    var index = handle.options.index - 1;\n    var normalizedEvent = util.normalizeEvent(evt);\n    var coords = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n    var position = this.snapHandle(handle, coords.clone(), data);\n    var axis = handle.options.axis;\n    var offset = this.options.snapHandle ? 0 : coords[axis] - position[axis];\n    var link = relatedView.model;\n    var vertices = util.cloneDeep(link.vertices());\n    var vertex = vertices[index];\n    var nextVertex = vertices[index + 1];\n    var anchorFn = this.options.anchor;\n    if (typeof anchorFn !== 'function') anchorFn = null; // First Segment\n\n    var sourceView = relatedView.sourceView;\n    var sourceBBox = relatedView.sourceBBox;\n    var changeSourceAnchor = false;\n    var deleteSourceAnchor = false;\n\n    if (!vertex) {\n      vertex = relatedView.sourceAnchor.toJSON();\n      vertex[axis] = position[axis];\n\n      if (sourceBBox.containsPoint(vertex)) {\n        vertex[axis] = position[axis];\n        changeSourceAnchor = true;\n      } else {\n        // we left the area of the source magnet for the first time\n        vertices.unshift(vertex);\n        this.shiftHandleIndexes(1);\n        deleteSourceAnchor = true;\n      }\n    } else if (index === 0) {\n      if (sourceBBox.containsPoint(vertex)) {\n        vertices.shift();\n        this.shiftHandleIndexes(-1);\n        changeSourceAnchor = true;\n      } else {\n        vertex[axis] = position[axis];\n        deleteSourceAnchor = true;\n      }\n    } else {\n      vertex[axis] = position[axis];\n    }\n\n    if (anchorFn && sourceView) {\n      if (changeSourceAnchor) {\n        var sourceAnchorPosition = data.sourceAnchor.clone();\n        sourceAnchorPosition[axis] = position[axis];\n        var sourceAnchor = anchorFn.call(relatedView, sourceAnchorPosition, sourceView, relatedView.sourceMagnet || sourceView.el, 'source', relatedView);\n        this.resetAnchor('source', sourceAnchor);\n      }\n\n      if (deleteSourceAnchor) {\n        this.resetAnchor('source', data.sourceAnchorDef);\n      }\n    } // Last segment\n\n\n    var targetView = relatedView.targetView;\n    var targetBBox = relatedView.targetBBox;\n    var changeTargetAnchor = false;\n    var deleteTargetAnchor = false;\n\n    if (!nextVertex) {\n      nextVertex = relatedView.targetAnchor.toJSON();\n      nextVertex[axis] = position[axis];\n\n      if (targetBBox.containsPoint(nextVertex)) {\n        changeTargetAnchor = true;\n      } else {\n        // we left the area of the target magnet for the first time\n        vertices.push(nextVertex);\n        deleteTargetAnchor = true;\n      }\n    } else if (index === vertices.length - 2) {\n      if (targetBBox.containsPoint(nextVertex)) {\n        vertices.pop();\n        changeTargetAnchor = true;\n      } else {\n        nextVertex[axis] = position[axis];\n        deleteTargetAnchor = true;\n      }\n    } else {\n      nextVertex[axis] = position[axis];\n    }\n\n    if (anchorFn && targetView) {\n      if (changeTargetAnchor) {\n        var targetAnchorPosition = data.targetAnchor.clone();\n        targetAnchorPosition[axis] = position[axis];\n        var targetAnchor = anchorFn.call(relatedView, targetAnchorPosition, targetView, relatedView.targetMagnet || targetView.el, 'target', relatedView);\n        this.resetAnchor('target', targetAnchor);\n      }\n\n      if (deleteTargetAnchor) {\n        this.resetAnchor('target', data.targetAnchorDef);\n      }\n    }\n\n    link.vertices(vertices, {\n      ui: true,\n      tool: this.cid\n    });\n    this.updateHandle(handle, vertex, nextVertex, offset);\n    if (!options.stopPropagation) relatedView.notifyPointermove(normalizedEvent, coords.x, coords.y);\n  },\n  onHandleChangeStart: function (handle, evt) {\n    const {\n      options,\n      handles,\n      relatedView: linkView\n    } = this;\n    const {\n      model,\n      paper\n    } = linkView;\n    var index = handle.options.index;\n    if (!Array.isArray(handles)) return;\n\n    for (var i = 0, n = handles.length; i < n; i++) {\n      if (i !== index) handles[i].hide();\n    }\n\n    this.focus();\n    this.eventData(evt, {\n      sourceAnchor: linkView.sourceAnchor.clone(),\n      targetAnchor: linkView.targetAnchor.clone(),\n      sourceAnchorDef: util.clone(model.prop(['source', 'anchor'])),\n      targetAnchorDef: util.clone(model.prop(['target', 'anchor']))\n    });\n    model.startBatch('segment-move', {\n      ui: true,\n      tool: this.cid\n    });\n    if (!options.stopPropagation) linkView.notifyPointerdown(...paper.getPointerArgs(evt));\n  },\n  onHandleChangeEnd: function (_handle, evt) {\n    const {\n      options,\n      relatedView: linkView\n    } = this;\n    const {\n      paper,\n      model\n    } = linkView;\n\n    if (options.redundancyRemoval) {\n      linkView.removeRedundantLinearVertices({\n        ui: true,\n        tool: this.cid\n      });\n    }\n\n    const normalizedEvent = util.normalizeEvent(evt);\n    const coords = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n    this.render();\n    this.blur();\n    model.stopBatch('segment-move', {\n      ui: true,\n      tool: this.cid\n    });\n    if (!options.stopPropagation) linkView.notifyPointerup(normalizedEvent, coords.x, coords.y);\n    linkView.checkMouseleave(normalizedEvent);\n  },\n  updateHandle: function (handle, vertex, nextVertex, offset) {\n    var vertical = Math.abs(vertex.x - nextVertex.x) < this.precision;\n    var horizontal = Math.abs(vertex.y - nextVertex.y) < this.precision;\n\n    if (vertical || horizontal) {\n      var segmentLine = new g.Line(vertex, nextVertex);\n      var length = segmentLine.length();\n\n      if (length < this.options.segmentLengthThreshold) {\n        handle.hide();\n      } else {\n        var position = segmentLine.midpoint();\n        var axis = vertical ? 'x' : 'y';\n        position[axis] += offset || 0;\n        var angle = segmentLine.vector().vectorAngle(new g.Point(1, 0));\n        handle.position(position.x, position.y, angle, this.relatedView);\n        handle.show();\n        handle.options.axis = axis;\n      }\n    } else {\n      handle.hide();\n    }\n  },\n  onRemove: function () {\n    this.resetHandles();\n  }\n}, {\n  SegmentHandle: SegmentHandle // keep as class property\n\n}); // End Markers\n\nvar Arrowhead = ToolView.extend({\n  tagName: 'path',\n  xAxisVector: new g.Point(1, 0),\n  events: {\n    mousedown: 'onPointerDown',\n    touchstart: 'onPointerDown'\n  },\n  documentEvents: {\n    mousemove: 'onPointerMove',\n    touchmove: 'onPointerMove',\n    mouseup: 'onPointerUp',\n    touchend: 'onPointerUp',\n    touchcancel: 'onPointerUp'\n  },\n  onRender: function () {\n    this.update();\n  },\n  update: function () {\n    var ratio = this.ratio;\n    var view = this.relatedView;\n    var tangent = view.getTangentAtRatio(ratio);\n    var position, angle;\n\n    if (tangent) {\n      position = tangent.start;\n      angle = tangent.vector().vectorAngle(this.xAxisVector) || 0;\n    } else {\n      position = view.getPointAtRatio(ratio);\n      angle = 0;\n    }\n\n    if (!position) return this;\n    var matrix = V.createSVGMatrix().translate(position.x, position.y).rotate(angle);\n    this.vel.transform(matrix, {\n      absolute: true\n    });\n    return this;\n  },\n  onPointerDown: function (evt) {\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    var relatedView = this.relatedView;\n    relatedView.model.startBatch('arrowhead-move', {\n      ui: true,\n      tool: this.cid\n    });\n\n    if (relatedView.can('arrowheadMove')) {\n      relatedView.startArrowheadMove(this.arrowheadType);\n      this.delegateDocumentEvents();\n      relatedView.paper.undelegateEvents();\n    }\n\n    this.focus();\n    this.el.style.pointerEvents = 'none';\n  },\n  onPointerMove: function (evt) {\n    var normalizedEvent = util.normalizeEvent(evt);\n    var coords = this.paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n    this.relatedView.pointermove(normalizedEvent, coords.x, coords.y);\n  },\n  onPointerUp: function (evt) {\n    this.undelegateDocumentEvents();\n    var relatedView = this.relatedView;\n    var paper = relatedView.paper;\n    var normalizedEvent = util.normalizeEvent(evt);\n    var coords = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n    relatedView.pointerup(normalizedEvent, coords.x, coords.y);\n    paper.delegateEvents();\n    this.blur();\n    this.el.style.pointerEvents = '';\n    relatedView.model.stopBatch('arrowhead-move', {\n      ui: true,\n      tool: this.cid\n    });\n  }\n});\nvar TargetArrowhead = Arrowhead.extend({\n  name: 'target-arrowhead',\n  ratio: 1,\n  arrowheadType: 'target',\n  attributes: {\n    'd': 'M -10 -8 10 0 -10 8 Z',\n    'fill': '#33334F',\n    'stroke': '#FFFFFF',\n    'stroke-width': 2,\n    'cursor': 'move',\n    'class': 'target-arrowhead'\n  }\n});\nvar SourceArrowhead = Arrowhead.extend({\n  name: 'source-arrowhead',\n  ratio: 0,\n  arrowheadType: 'source',\n  attributes: {\n    'd': 'M 10 -8 -10 0 10 8 Z',\n    'fill': '#33334F',\n    'stroke': '#FFFFFF',\n    'stroke-width': 2,\n    'cursor': 'move',\n    'class': 'source-arrowhead'\n  }\n});\nvar Button = ToolView.extend({\n  name: 'button',\n  events: {\n    'mousedown': 'onPointerDown',\n    'touchstart': 'onPointerDown'\n  },\n  options: {\n    distance: 0,\n    offset: 0,\n    rotate: false\n  },\n  onRender: function () {\n    this.renderChildren(this.options.markup);\n    this.update();\n  },\n  update: function () {\n    this.position();\n    return this;\n  },\n  position: function () {\n    const {\n      relatedView: view,\n      vel\n    } = this;\n    const matrix = view.model.isLink() ? this.getLinkMatrix() : this.getElementMatrix();\n    vel.transform(matrix, {\n      absolute: true\n    });\n  },\n\n  getElementMatrix() {\n    const {\n      relatedView: view,\n      options\n    } = this;\n    let {\n      x = 0,\n      y = 0,\n      offset = {},\n      useModelGeometry,\n      rotate\n    } = options;\n    let bbox = getViewBBox(view, useModelGeometry);\n    const angle = view.model.angle();\n    if (!rotate) bbox = bbox.bbox(angle);\n    const {\n      x: offsetX = 0,\n      y: offsetY = 0\n    } = offset;\n\n    if (util.isPercentage(x)) {\n      x = parseFloat(x) / 100 * bbox.width;\n    }\n\n    if (util.isPercentage(y)) {\n      y = parseFloat(y) / 100 * bbox.height;\n    }\n\n    let matrix = V.createSVGMatrix().translate(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2);\n    if (rotate) matrix = matrix.rotate(angle);\n    matrix = matrix.translate(x + offsetX - bbox.width / 2, y + offsetY - bbox.height / 2);\n    return matrix;\n  },\n\n  getLinkMatrix() {\n    const {\n      relatedView: view,\n      options\n    } = this;\n    const {\n      offset = 0,\n      distance = 0,\n      rotate\n    } = options;\n    let tangent, position, angle;\n\n    if (util.isPercentage(distance)) {\n      tangent = view.getTangentAtRatio(parseFloat(distance) / 100);\n    } else {\n      tangent = view.getTangentAtLength(distance);\n    }\n\n    if (tangent) {\n      position = tangent.start;\n      angle = tangent.vector().vectorAngle(new g.Point(1, 0)) || 0;\n    } else {\n      position = view.getConnection().start;\n      angle = 0;\n    }\n\n    let matrix = V.createSVGMatrix().translate(position.x, position.y).rotate(angle).translate(0, offset);\n    if (!rotate) matrix = matrix.rotate(-angle);\n    return matrix;\n  },\n\n  onPointerDown: function (evt) {\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    var actionFn = this.options.action;\n\n    if (typeof actionFn === 'function') {\n      actionFn.call(this.relatedView, evt, this.relatedView, this);\n    }\n  }\n});\nvar Remove = Button.extend({\n  children: [{\n    tagName: 'circle',\n    selector: 'button',\n    attributes: {\n      'r': 7,\n      'fill': '#FF1D00',\n      'cursor': 'pointer'\n    }\n  }, {\n    tagName: 'path',\n    selector: 'icon',\n    attributes: {\n      'd': 'M -3 -3 3 3 M -3 3 3 -3',\n      'fill': 'none',\n      'stroke': '#FFFFFF',\n      'stroke-width': 2,\n      'pointer-events': 'none'\n    }\n  }],\n  options: {\n    distance: 60,\n    offset: 0,\n    action: function (evt, view, tool) {\n      view.model.remove({\n        ui: true,\n        tool: tool.cid\n      });\n    }\n  }\n});\nconst Connect = Button.extend({\n  name: 'connect',\n  documentEvents: {\n    mousemove: 'drag',\n    touchmove: 'drag',\n    mouseup: 'dragend',\n    touchend: 'dragend',\n    touchcancel: 'dragend'\n  },\n  children: [{\n    tagName: 'circle',\n    selector: 'button',\n    attributes: {\n      'r': 7,\n      'fill': '#333333',\n      'cursor': 'pointer'\n    }\n  }, {\n    tagName: 'path',\n    selector: 'icon',\n    attributes: {\n      'd': 'M -4 -1 L 0 -1 L 0 -4 L 4 0 L 0 4 0 1 -4 1 z',\n      'fill': '#FFFFFF',\n      'stroke': 'none',\n      'stroke-width': 2,\n      'pointer-events': 'none'\n    }\n  }],\n  options: {\n    distance: 80,\n    offset: 0,\n    magnet: view => view.el,\n    action: (evt, _view, tool) => tool.dragstart(evt)\n  },\n  getMagnetNode: function () {\n    const {\n      options,\n      relatedView\n    } = this;\n    const {\n      magnet\n    } = options;\n    let magnetNode;\n\n    switch (typeof magnet) {\n      case 'function':\n        {\n          magnetNode = magnet.call(this, relatedView, this);\n          break;\n        }\n\n      case 'string':\n        {\n          [magnetNode] = relatedView.findBySelector(magnet);\n          break;\n        }\n\n      default:\n        {\n          magnetNode = magnet;\n          break;\n        }\n    }\n\n    if (!magnetNode) magnetNode = relatedView.el;\n    if (magnetNode instanceof SVGElement) return magnetNode;\n    throw new Error('Connect: magnet must be an SVGElement');\n  },\n  dragstart: function (evt) {\n    const {\n      paper,\n      relatedView\n    } = this;\n    const normalizedEvent = util.normalizeEvent(evt);\n    const {\n      x,\n      y\n    } = paper.clientToLocalPoint(normalizedEvent.clientX, normalizedEvent.clientY);\n    relatedView.dragLinkStart(normalizedEvent, this.getMagnetNode(), x, y);\n    paper.undelegateEvents();\n    this.delegateDocumentEvents(null, evt.data);\n    this.focus();\n  },\n  drag: function (evt) {\n    const {\n      paper,\n      relatedView\n    } = this;\n    const normalizedEvent = util.normalizeEvent(evt);\n    const {\n      x,\n      y\n    } = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n    relatedView.dragLink(normalizedEvent, x, y);\n  },\n  dragend: function (evt) {\n    const {\n      paper,\n      relatedView\n    } = this;\n    const normalizedEvent = util.normalizeEvent(evt);\n    const {\n      x,\n      y\n    } = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n    relatedView.dragLinkEnd(normalizedEvent, x, y);\n    this.undelegateDocumentEvents();\n    paper.delegateEvents();\n    this.blur();\n    relatedView.checkMouseleave(normalizedEvent);\n  }\n});\nvar Boundary = ToolView.extend({\n  name: 'boundary',\n  tagName: 'rect',\n  options: {\n    padding: 10,\n    useModelGeometry: false\n  },\n  attributes: {\n    'fill': 'none',\n    'stroke': '#33334F',\n    'stroke-width': .5,\n    'stroke-dasharray': '5, 5',\n    'pointer-events': 'none'\n  },\n  onRender: function () {\n    this.update();\n  },\n  update: function () {\n    const {\n      relatedView: view,\n      options,\n      vel\n    } = this;\n    const {\n      useModelGeometry,\n      rotate\n    } = options;\n    const padding = util.normalizeSides(options.padding);\n    let bbox = getViewBBox(view, useModelGeometry).moveAndExpand({\n      x: -padding.left,\n      y: -padding.top,\n      width: padding.left + padding.right,\n      height: padding.top + padding.bottom\n    });\n    var model = view.model;\n\n    if (model.isElement()) {\n      var angle = model.angle();\n\n      if (angle) {\n        if (rotate) {\n          var origin = model.getBBox().center();\n          vel.rotate(angle, origin.x, origin.y, {\n            absolute: true\n          });\n        } else {\n          bbox = bbox.bbox(angle);\n        }\n      }\n    }\n\n    vel.attr(bbox.toJSON());\n    return this;\n  }\n});\nvar Anchor = ToolView.extend({\n  tagName: 'g',\n  type: null,\n  children: [{\n    tagName: 'circle',\n    selector: 'anchor',\n    attributes: {\n      'cursor': 'pointer'\n    }\n  }, {\n    tagName: 'rect',\n    selector: 'area',\n    attributes: {\n      'pointer-events': 'none',\n      'fill': 'none',\n      'stroke': '#33334F',\n      'stroke-dasharray': '2,4',\n      'rx': 5,\n      'ry': 5\n    }\n  }],\n  events: {\n    mousedown: 'onPointerDown',\n    touchstart: 'onPointerDown',\n    dblclick: 'onPointerDblClick',\n    dbltap: 'onPointerDblClick'\n  },\n  documentEvents: {\n    mousemove: 'onPointerMove',\n    touchmove: 'onPointerMove',\n    mouseup: 'onPointerUp',\n    touchend: 'onPointerUp',\n    touchcancel: 'onPointerUp'\n  },\n  options: {\n    snap: snapAnchor,\n    anchor: getAnchor,\n    resetAnchor: true,\n    customAnchorAttributes: {\n      'stroke-width': 4,\n      'stroke': '#33334F',\n      'fill': '#FFFFFF',\n      'r': 5\n    },\n    defaultAnchorAttributes: {\n      'stroke-width': 2,\n      'stroke': '#FFFFFF',\n      'fill': '#33334F',\n      'r': 6\n    },\n    areaPadding: 6,\n    snapRadius: 10,\n    restrictArea: true,\n    redundancyRemoval: true\n  },\n  onRender: function () {\n    this.renderChildren();\n    this.toggleArea(false);\n    this.update();\n  },\n  update: function () {\n    var type = this.type;\n    var relatedView = this.relatedView;\n    var view = relatedView.getEndView(type);\n\n    if (view) {\n      this.updateAnchor();\n      this.updateArea();\n      this.el.style.display = '';\n    } else {\n      this.el.style.display = 'none';\n    }\n\n    return this;\n  },\n  updateAnchor: function () {\n    var childNodes = this.childNodes;\n    if (!childNodes) return;\n    var anchorNode = childNodes.anchor;\n    if (!anchorNode) return;\n    var relatedView = this.relatedView;\n    var type = this.type;\n    var position = relatedView.getEndAnchor(type);\n    var options = this.options;\n    var customAnchor = relatedView.model.prop([type, 'anchor']);\n    anchorNode.setAttribute('transform', 'translate(' + position.x + ',' + position.y + ')');\n    var anchorAttributes = customAnchor ? options.customAnchorAttributes : options.defaultAnchorAttributes;\n\n    for (var attrName in anchorAttributes) {\n      anchorNode.setAttribute(attrName, anchorAttributes[attrName]);\n    }\n  },\n  updateArea: function () {\n    var childNodes = this.childNodes;\n    if (!childNodes) return;\n    var areaNode = childNodes.area;\n    if (!areaNode) return;\n    var relatedView = this.relatedView;\n    var type = this.type;\n    var view = relatedView.getEndView(type);\n    var model = view.model;\n    var magnet = relatedView.getEndMagnet(type);\n    var padding = this.options.areaPadding;\n    if (!isFinite(padding)) padding = 0;\n    var bbox, angle, center;\n\n    if (view.isNodeConnection(magnet)) {\n      bbox = view.getBBox();\n      angle = 0;\n      center = bbox.center();\n    } else {\n      bbox = view.getNodeUnrotatedBBox(magnet);\n      angle = model.angle();\n      center = bbox.center();\n      if (angle) center.rotate(model.getBBox().center(), -angle); // TODO: get the link's magnet rotation into account\n    }\n\n    bbox.inflate(padding);\n    areaNode.setAttribute('x', -bbox.width / 2);\n    areaNode.setAttribute('y', -bbox.height / 2);\n    areaNode.setAttribute('width', bbox.width);\n    areaNode.setAttribute('height', bbox.height);\n    areaNode.setAttribute('transform', 'translate(' + center.x + ',' + center.y + ') rotate(' + angle + ')');\n  },\n  toggleArea: function (visible) {\n    this.childNodes.area.style.display = visible ? '' : 'none';\n  },\n  onPointerDown: function (evt) {\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    this.paper.undelegateEvents();\n    this.delegateDocumentEvents();\n    this.focus();\n    this.toggleArea(this.options.restrictArea);\n    this.relatedView.model.startBatch('anchor-move', {\n      ui: true,\n      tool: this.cid\n    });\n  },\n  resetAnchor: function (anchor) {\n    var type = this.type;\n    var relatedModel = this.relatedView.model;\n\n    if (anchor) {\n      relatedModel.prop([type, 'anchor'], anchor, {\n        rewrite: true,\n        ui: true,\n        tool: this.cid\n      });\n    } else {\n      relatedModel.removeProp([type, 'anchor'], {\n        ui: true,\n        tool: this.cid\n      });\n    }\n  },\n  onPointerMove: function (evt) {\n    var relatedView = this.relatedView;\n    var type = this.type;\n    var view = relatedView.getEndView(type);\n    var model = view.model;\n    var magnet = relatedView.getEndMagnet(type);\n    var normalizedEvent = util.normalizeEvent(evt);\n    var coords = this.paper.clientToLocalPoint(normalizedEvent.clientX, normalizedEvent.clientY);\n    var snapFn = this.options.snap;\n\n    if (typeof snapFn === 'function') {\n      coords = snapFn.call(relatedView, coords, view, magnet, type, relatedView, this);\n      coords = new g.Point(coords);\n    }\n\n    if (this.options.restrictArea) {\n      if (view.isNodeConnection(magnet)) {\n        // snap coords to the link's connection\n        var pointAtConnection = view.getClosestPoint(coords);\n        if (pointAtConnection) coords = pointAtConnection;\n      } else {\n        // snap coords within node bbox\n        var bbox = view.getNodeUnrotatedBBox(magnet);\n        var angle = model.angle();\n        var origin = model.getBBox().center();\n        var rotatedCoords = coords.clone().rotate(origin, angle);\n\n        if (!bbox.containsPoint(rotatedCoords)) {\n          coords = bbox.pointNearestToPoint(rotatedCoords).rotate(origin, -angle);\n        }\n      }\n    }\n\n    var anchor;\n    var anchorFn = this.options.anchor;\n\n    if (typeof anchorFn === 'function') {\n      anchor = anchorFn.call(relatedView, coords, view, magnet, type, relatedView);\n    }\n\n    this.resetAnchor(anchor);\n    this.update();\n  },\n  onPointerUp: function (evt) {\n    this.paper.delegateEvents();\n    this.undelegateDocumentEvents();\n    this.blur();\n    this.toggleArea(false);\n    var linkView = this.relatedView;\n    if (this.options.redundancyRemoval) linkView.removeRedundantLinearVertices({\n      ui: true,\n      tool: this.cid\n    });\n    linkView.model.stopBatch('anchor-move', {\n      ui: true,\n      tool: this.cid\n    });\n  },\n  onPointerDblClick: function () {\n    var anchor = this.options.resetAnchor;\n    if (anchor === false) return; // reset anchor disabled\n\n    if (anchor === true) anchor = null; // remove the current anchor\n\n    this.resetAnchor(util.cloneDeep(anchor));\n    this.update();\n  }\n});\nvar SourceAnchor = Anchor.extend({\n  name: 'source-anchor',\n  type: 'source'\n});\nvar TargetAnchor = Anchor.extend({\n  name: 'target-anchor',\n  type: 'target'\n});\nexport { Vertices, Segments, SourceArrowhead, TargetArrowhead, SourceAnchor, TargetAnchor, Button, Remove, Connect, Boundary };","map":{"version":3,"names":["g","V","util","connectionStrategies","mvc","ToolView","getAnchor","coords","view","magnet","end","pinRelative","call","paper","model","anchor","snapAnchor","type","relatedView","toolView","snapRadius","options","isSource","refIndex","ref","vertex","getEndAnchor","Math","abs","x","y","getViewBBox","useModelGeometry","getBBox","isLink","getConnection","bbox","getNodeUnrotatedBBox","el","VertexHandle","View","extend","tagName","svgElement","className","events","mousedown","touchstart","dblclick","dbltap","documentEvents","mousemove","touchmove","mouseup","touchend","touchcancel","attributes","position","vel","attr","cx","cy","onPointerDown","evt","guard","stopPropagation","preventDefault","undelegateEvents","delegateDocumentEvents","data","trigger","onPointerMove","onDoubleClick","onPointerUp","undelegateDocumentEvents","delegateEvents","Vertices","name","handleClass","redundancyRemoval","vertexAdding","children","selector","handles","onRender","renderChildren","updatePath","resetHandles","renderHandles","update","vertices","length","updateHandles","stopListening","Array","isArray","i","n","remove","handle","index","render","simulateRelatedView","appendTo","push","startHandleListening","connection","childNodes","setAttribute","getSerializedConnection","can","listenTo","onHandleWillChange","onHandleChanging","onHandleChanged","onHandleRemove","getNeighborPoints","linkView","prev","sourceAnchor","next","targetAnchor","Point","_handle","focus","startBatch","ui","tool","cid","notifyPointerdown","getPointerArgs","normalizedEvent","snapVertex","notifyPointermove","verticesRemoved","removeRedundantLinearVertices","blur","stopBatch","eventData","vertexAdded","normalizedEvt","notifyPointerup","checkMouseleave","neighbors","removeVertex","normalizeEvent","onPathPointerDown","snapToGrid","clientX","clientY","toJSON","getVertexIndex","insertVertex","onRemove","SegmentHandle","angle","matrix","createSVGMatrix","translate","rotate","matrixToTransformString","viewPoint","getClosestPoint","line","show","style","display","hide","Segments","precision","segmentLengthThreshold","snapHandle","unshift","sourcePoint","targetPoint","nextVertex","renderHandle","updateHandle","onHandleChangeStart","onHandleChangeEnd","shiftHandleIndexes","value","resetAnchor","relatedModel","prop","rewrite","removeProp","link","axis","clone","offset","cloneDeep","anchorFn","sourceView","sourceBBox","changeSourceAnchor","deleteSourceAnchor","containsPoint","shift","sourceAnchorPosition","sourceMagnet","sourceAnchorDef","targetView","targetBBox","changeTargetAnchor","deleteTargetAnchor","pop","targetAnchorPosition","targetMagnet","targetAnchorDef","vertical","horizontal","segmentLine","Line","midpoint","vector","vectorAngle","Arrowhead","xAxisVector","ratio","tangent","getTangentAtRatio","start","getPointAtRatio","transform","absolute","startArrowheadMove","arrowheadType","pointerEvents","pointermove","pointerup","TargetArrowhead","SourceArrowhead","Button","distance","markup","getLinkMatrix","getElementMatrix","offsetX","offsetY","isPercentage","parseFloat","width","height","getTangentAtLength","actionFn","action","Remove","Connect","_view","dragstart","getMagnetNode","magnetNode","findBySelector","SVGElement","Error","clientToLocalPoint","dragLinkStart","drag","dragLink","dragend","dragLinkEnd","Boundary","padding","normalizeSides","moveAndExpand","left","top","right","bottom","isElement","origin","center","Anchor","snap","customAnchorAttributes","defaultAnchorAttributes","areaPadding","restrictArea","toggleArea","getEndView","updateAnchor","updateArea","anchorNode","customAnchor","anchorAttributes","attrName","areaNode","area","getEndMagnet","isFinite","isNodeConnection","inflate","visible","snapFn","pointAtConnection","rotatedCoords","pointNearestToPoint","onPointerDblClick","SourceAnchor","TargetAnchor"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/linkTools/index.mjs"],"sourcesContent":["import * as g from '../g/index.mjs';\nimport V from '../V/index.mjs';\nimport * as util from '../util/index.mjs';\nimport * as connectionStrategies from '../connectionStrategies/index.mjs';\nimport * as mvc from '../mvc/index.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\n\nfunction getAnchor(coords, view, magnet) {\n    // take advantage of an existing logic inside of the\n    // pin relative connection strategy\n    var end = connectionStrategies.pinRelative.call(\n        this.paper,\n        {},\n        view,\n        magnet,\n        coords,\n        this.model\n    );\n    return end.anchor;\n}\n\nfunction snapAnchor(coords, view, magnet, type, relatedView, toolView) {\n    var snapRadius = toolView.options.snapRadius;\n    var isSource = (type === 'source');\n    var refIndex = (isSource ? 0 : -1);\n    var ref = this.model.vertex(refIndex) || this.getEndAnchor(isSource ? 'target' : 'source');\n    if (ref) {\n        if (Math.abs(ref.x - coords.x) < snapRadius) coords.x = ref.x;\n        if (Math.abs(ref.y - coords.y) < snapRadius) coords.y = ref.y;\n    }\n    return coords;\n}\n\nfunction getViewBBox(view, useModelGeometry) {\n    const { model } = view;\n    if (useModelGeometry) return model.getBBox();\n    return (model.isLink()) ? view.getConnection().bbox() : view.getNodeUnrotatedBBox(view.el);\n}\n\n// Vertex Handles\nvar VertexHandle = mvc.View.extend({\n    tagName: 'circle',\n    svgElement: true,\n    className: 'marker-vertex',\n    events: {\n        mousedown: 'onPointerDown',\n        touchstart: 'onPointerDown',\n        dblclick: 'onDoubleClick',\n        dbltap: 'onDoubleClick'\n    },\n    documentEvents: {\n        mousemove: 'onPointerMove',\n        touchmove: 'onPointerMove',\n        mouseup: 'onPointerUp',\n        touchend: 'onPointerUp',\n        touchcancel: 'onPointerUp'\n    },\n    attributes: {\n        'r': 6,\n        'fill': '#33334F',\n        'stroke': '#FFFFFF',\n        'stroke-width': 2,\n        'cursor': 'move'\n    },\n    position: function(x, y) {\n        this.vel.attr({ cx: x, cy: y });\n    },\n    onPointerDown: function(evt) {\n        if (this.options.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.options.paper.undelegateEvents();\n        this.delegateDocumentEvents(null, evt.data);\n        this.trigger('will-change', this, evt);\n    },\n    onPointerMove: function(evt) {\n        this.trigger('changing', this, evt);\n    },\n    onDoubleClick: function(evt) {\n        this.trigger('remove', this, evt);\n    },\n    onPointerUp: function(evt) {\n        this.trigger('changed', this, evt);\n        this.undelegateDocumentEvents();\n        this.options.paper.delegateEvents();\n    }\n});\n\nvar Vertices = ToolView.extend({\n    name: 'vertices',\n    options: {\n        handleClass: VertexHandle,\n        snapRadius: 20,\n        redundancyRemoval: true,\n        vertexAdding: true,\n        stopPropagation: true\n    },\n    children: [{\n        tagName: 'path',\n        selector: 'connection',\n        className: 'joint-vertices-path',\n        attributes: {\n            'fill': 'none',\n            'stroke': 'transparent',\n            'stroke-width': 10,\n            'cursor': 'cell'\n        }\n    }],\n    handles: null,\n    events: {\n        'mousedown .joint-vertices-path': 'onPathPointerDown',\n        'touchstart .joint-vertices-path': 'onPathPointerDown'\n    },\n    onRender: function() {\n        if (this.options.vertexAdding) {\n            this.renderChildren();\n            this.updatePath();\n        }\n        this.resetHandles();\n        this.renderHandles();\n        return this;\n    },\n    update: function() {\n        var relatedView = this.relatedView;\n        var vertices = relatedView.model.vertices();\n        if (vertices.length === this.handles.length) {\n            this.updateHandles();\n        } else {\n            this.resetHandles();\n            this.renderHandles();\n        }\n        if (this.options.vertexAdding) {\n            this.updatePath();\n        }\n        return this;\n    },\n    resetHandles: function() {\n        var handles = this.handles;\n        this.handles = [];\n        this.stopListening();\n        if (!Array.isArray(handles)) return;\n        for (var i = 0, n = handles.length; i < n; i++) {\n            handles[i].remove();\n        }\n    },\n    renderHandles: function() {\n        var relatedView = this.relatedView;\n        var vertices = relatedView.model.vertices();\n        for (var i = 0, n = vertices.length; i < n; i++) {\n            var vertex = vertices[i];\n            var handle = new (this.options.handleClass)({\n                index: i,\n                paper: this.paper,\n                guard: evt => this.guard(evt)\n            });\n            handle.render();\n            handle.position(vertex.x, vertex.y);\n            this.simulateRelatedView(handle.el);\n            handle.vel.appendTo(this.el);\n            this.handles.push(handle);\n            this.startHandleListening(handle);\n        }\n    },\n    updateHandles: function() {\n        var relatedView = this.relatedView;\n        var vertices = relatedView.model.vertices();\n        for (var i = 0, n = vertices.length; i < n; i++) {\n            var vertex = vertices[i];\n            var handle = this.handles[i];\n            if (!handle) return;\n            handle.position(vertex.x, vertex.y);\n        }\n    },\n    updatePath: function() {\n        var connection = this.childNodes.connection;\n        if (connection) connection.setAttribute('d', this.relatedView.getSerializedConnection());\n    },\n    startHandleListening: function(handle) {\n        var relatedView = this.relatedView;\n        if (relatedView.can('vertexMove')) {\n            this.listenTo(handle, 'will-change', this.onHandleWillChange);\n            this.listenTo(handle, 'changing', this.onHandleChanging);\n            this.listenTo(handle, 'changed', this.onHandleChanged);\n        }\n        if (relatedView.can('vertexRemove')) {\n            this.listenTo(handle, 'remove', this.onHandleRemove);\n        }\n    },\n    getNeighborPoints: function(index) {\n        var linkView = this.relatedView;\n        var vertices = linkView.model.vertices();\n        var prev = (index > 0) ? vertices[index - 1] : linkView.sourceAnchor;\n        var next = (index < vertices.length - 1) ? vertices[index + 1] : linkView.targetAnchor;\n        return {\n            prev: new g.Point(prev),\n            next: new g.Point(next)\n        };\n    },\n    onHandleWillChange: function(_handle, evt) {\n        this.focus();\n        const { relatedView, options } = this;\n        relatedView.model.startBatch('vertex-move', { ui: true, tool: this.cid });\n        if (!options.stopPropagation) relatedView.notifyPointerdown(...relatedView.paper.getPointerArgs(evt));\n    },\n    onHandleChanging: function(handle, evt) {\n        const { options, relatedView: linkView } = this;\n        var index = handle.options.index;\n        var [normalizedEvent, x, y] = linkView.paper.getPointerArgs(evt);\n        var vertex = { x, y };\n        this.snapVertex(vertex, index);\n        linkView.model.vertex(index, vertex, { ui: true, tool: this.cid });\n        handle.position(vertex.x, vertex.y);\n        if (!options.stopPropagation) linkView.notifyPointermove(normalizedEvent, x, y);\n    },\n    onHandleChanged: function(_handle, evt) {\n        const { options, relatedView: linkView } = this;\n        if (options.vertexAdding) this.updatePath();\n        if (!options.redundancyRemoval) return;\n        var verticesRemoved = linkView.removeRedundantLinearVertices({ ui: true, tool: this.cid });\n        if (verticesRemoved) this.render();\n        this.blur();\n        linkView.model.stopBatch('vertex-move', { ui: true, tool: this.cid });\n        if (this.eventData(evt).vertexAdded) {\n            linkView.model.stopBatch('vertex-add', { ui: true, tool: this.cid });\n        }\n        var [normalizedEvt, x, y] = linkView.paper.getPointerArgs(evt);\n        if (!options.stopPropagation) linkView.notifyPointerup(normalizedEvt, x, y);\n        linkView.checkMouseleave(normalizedEvt);\n    },\n    snapVertex: function(vertex, index) {\n        var snapRadius = this.options.snapRadius;\n        if (snapRadius > 0) {\n            var neighbors = this.getNeighborPoints(index);\n            var prev = neighbors.prev;\n            var next = neighbors.next;\n            if (Math.abs(vertex.x - prev.x) < snapRadius) {\n                vertex.x = prev.x;\n            } else if (Math.abs(vertex.x - next.x) < snapRadius) {\n                vertex.x = next.x;\n            }\n            if (Math.abs(vertex.y - prev.y) < snapRadius) {\n                vertex.y = neighbors.prev.y;\n            } else if (Math.abs(vertex.y - next.y) < snapRadius) {\n                vertex.y = next.y;\n            }\n        }\n    },\n    onHandleRemove: function(handle, evt) {\n        var index = handle.options.index;\n        var linkView = this.relatedView;\n        linkView.model.removeVertex(index, { ui: true });\n        if (this.options.vertexAdding) this.updatePath();\n        linkView.checkMouseleave(util.normalizeEvent(evt));\n    },\n    onPathPointerDown: function(evt) {\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        var normalizedEvent = util.normalizeEvent(evt);\n        var vertex = this.paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY).toJSON();\n        var relatedView = this.relatedView;\n        relatedView.model.startBatch('vertex-add', { ui: true, tool: this.cid });\n        var index = relatedView.getVertexIndex(vertex.x, vertex.y);\n        this.snapVertex(vertex, index);\n        relatedView.model.insertVertex(index, vertex, { ui: true, tool: this.cid });\n        this.update();\n        var handle = this.handles[index];\n        this.eventData(normalizedEvent, { vertexAdded: true });\n        handle.onPointerDown(normalizedEvent);\n    },\n    onRemove: function() {\n        this.resetHandles();\n    }\n}, {\n    VertexHandle: VertexHandle // keep as class property\n});\n\nvar SegmentHandle = mvc.View.extend({\n    tagName: 'g',\n    svgElement: true,\n    className: 'marker-segment',\n    events: {\n        mousedown: 'onPointerDown',\n        touchstart: 'onPointerDown'\n    },\n    documentEvents: {\n        mousemove: 'onPointerMove',\n        touchmove: 'onPointerMove',\n        mouseup: 'onPointerUp',\n        touchend: 'onPointerUp',\n        touchcancel: 'onPointerUp'\n    },\n    children: [{\n        tagName: 'line',\n        selector: 'line',\n        attributes: {\n            'stroke': '#33334F',\n            'stroke-width': 2,\n            'fill': 'none',\n            'pointer-events': 'none'\n        }\n    }, {\n        tagName: 'rect',\n        selector: 'handle',\n        attributes: {\n            'width': 20,\n            'height': 8,\n            'x': -10,\n            'y': -4,\n            'rx': 4,\n            'ry': 4,\n            'fill': '#33334F',\n            'stroke': '#FFFFFF',\n            'stroke-width': 2\n        }\n    }],\n    onRender: function() {\n        this.renderChildren();\n    },\n    position: function(x, y, angle, view) {\n\n        var matrix = V.createSVGMatrix().translate(x, y).rotate(angle);\n        var handle = this.childNodes.handle;\n        handle.setAttribute('transform', V.matrixToTransformString(matrix));\n        handle.setAttribute('cursor', (angle % 180 === 0) ? 'row-resize' : 'col-resize');\n\n        var viewPoint = view.getClosestPoint(new g.Point(x, y));\n        var line = this.childNodes.line;\n        line.setAttribute('x1', x);\n        line.setAttribute('y1', y);\n        line.setAttribute('x2', viewPoint.x);\n        line.setAttribute('y2', viewPoint.y);\n    },\n    onPointerDown: function(evt) {\n        if (this.options.guard(evt)) return;\n        this.trigger('change:start', this, evt);\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.options.paper.undelegateEvents();\n        this.delegateDocumentEvents(null, evt.data);\n    },\n    onPointerMove: function(evt) {\n        this.trigger('changing', this, evt);\n    },\n    onPointerUp: function(evt) {\n        this.undelegateDocumentEvents();\n        this.options.paper.delegateEvents();\n        this.trigger('change:end', this, evt);\n    },\n    show: function() {\n        this.el.style.display = '';\n    },\n    hide: function() {\n        this.el.style.display = 'none';\n    }\n});\n\nvar Segments = ToolView.extend({\n    name: 'segments',\n    precision: .5,\n    options: {\n        handleClass: SegmentHandle,\n        segmentLengthThreshold: 40,\n        redundancyRemoval: true,\n        anchor: getAnchor,\n        snapRadius: 10,\n        snapHandle: true,\n        stopPropagation: true\n    },\n    handles: null,\n    onRender: function() {\n        this.resetHandles();\n        var relatedView = this.relatedView;\n        var vertices = relatedView.model.vertices();\n        vertices.unshift(relatedView.sourcePoint);\n        vertices.push(relatedView.targetPoint);\n        for (var i = 0, n = vertices.length; i < n - 1; i++) {\n            var vertex = vertices[i];\n            var nextVertex = vertices[i + 1];\n            var handle = this.renderHandle(vertex, nextVertex);\n            this.simulateRelatedView(handle.el);\n            this.handles.push(handle);\n            handle.options.index = i;\n        }\n        return this;\n    },\n    renderHandle: function(vertex, nextVertex) {\n        var handle = new (this.options.handleClass)({\n            paper: this.paper,\n            guard: evt => this.guard(evt)\n        });\n        handle.render();\n        this.updateHandle(handle, vertex, nextVertex);\n        handle.vel.appendTo(this.el);\n        this.startHandleListening(handle);\n        return handle;\n    },\n    update: function() {\n        this.render();\n        return this;\n    },\n    startHandleListening: function(handle) {\n        this.listenTo(handle, 'change:start', this.onHandleChangeStart);\n        this.listenTo(handle, 'changing', this.onHandleChanging);\n        this.listenTo(handle, 'change:end', this.onHandleChangeEnd);\n    },\n    resetHandles: function() {\n        var handles = this.handles;\n        this.handles = [];\n        this.stopListening();\n        if (!Array.isArray(handles)) return;\n        for (var i = 0, n = handles.length; i < n; i++) {\n            handles[i].remove();\n        }\n    },\n    shiftHandleIndexes: function(value) {\n        var handles = this.handles;\n        for (var i = 0, n = handles.length; i < n; i++) handles[i].options.index += value;\n    },\n    resetAnchor: function(type, anchor) {\n        var relatedModel = this.relatedView.model;\n        if (anchor) {\n            relatedModel.prop([type, 'anchor'], anchor, {\n                rewrite: true,\n                ui: true,\n                tool: this.cid\n            });\n        } else {\n            relatedModel.removeProp([type, 'anchor'], {\n                ui: true,\n                tool: this.cid\n            });\n        }\n    },\n    snapHandle: function(handle, position, data) {\n\n        var index = handle.options.index;\n        var linkView = this.relatedView;\n        var link = linkView.model;\n        var vertices = link.vertices();\n        var axis = handle.options.axis;\n        var prev = vertices[index - 2] || data.sourceAnchor;\n        var next = vertices[index + 1] || data.targetAnchor;\n        var snapRadius = this.options.snapRadius;\n        if (Math.abs(position[axis] - prev[axis]) < snapRadius) {\n            position[axis] = prev[axis];\n        } else if (Math.abs(position[axis] - next[axis]) < snapRadius) {\n            position[axis] = next[axis];\n        }\n        return position;\n    },\n\n    onHandleChanging: function(handle, evt) {\n\n        const { options } = this;\n        var data = this.eventData(evt);\n        var relatedView = this.relatedView;\n        var paper = relatedView.paper;\n        var index = handle.options.index - 1;\n        var normalizedEvent = util.normalizeEvent(evt);\n        var coords = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n        var position = this.snapHandle(handle, coords.clone(), data);\n        var axis = handle.options.axis;\n        var offset = (this.options.snapHandle) ? 0 : (coords[axis] - position[axis]);\n        var link = relatedView.model;\n        var vertices = util.cloneDeep(link.vertices());\n        var vertex = vertices[index];\n        var nextVertex = vertices[index + 1];\n        var anchorFn = this.options.anchor;\n        if (typeof anchorFn !== 'function') anchorFn = null;\n\n        // First Segment\n        var sourceView = relatedView.sourceView;\n        var sourceBBox = relatedView.sourceBBox;\n        var changeSourceAnchor = false;\n        var deleteSourceAnchor = false;\n        if (!vertex) {\n            vertex = relatedView.sourceAnchor.toJSON();\n            vertex[axis] = position[axis];\n            if (sourceBBox.containsPoint(vertex)) {\n                vertex[axis] = position[axis];\n                changeSourceAnchor = true;\n            } else {\n                // we left the area of the source magnet for the first time\n                vertices.unshift(vertex);\n                this.shiftHandleIndexes(1);\n                deleteSourceAnchor = true;\n            }\n        } else if (index === 0) {\n            if (sourceBBox.containsPoint(vertex)) {\n                vertices.shift();\n                this.shiftHandleIndexes(-1);\n                changeSourceAnchor = true;\n            } else {\n                vertex[axis] = position[axis];\n                deleteSourceAnchor = true;\n            }\n        } else {\n            vertex[axis] = position[axis];\n        }\n\n        if (anchorFn && sourceView) {\n            if (changeSourceAnchor) {\n                var sourceAnchorPosition = data.sourceAnchor.clone();\n                sourceAnchorPosition[axis] = position[axis];\n                var sourceAnchor = anchorFn.call(relatedView, sourceAnchorPosition, sourceView, relatedView.sourceMagnet || sourceView.el, 'source', relatedView);\n                this.resetAnchor('source', sourceAnchor);\n            }\n            if (deleteSourceAnchor) {\n                this.resetAnchor('source', data.sourceAnchorDef);\n            }\n        }\n\n        // Last segment\n        var targetView = relatedView.targetView;\n        var targetBBox = relatedView.targetBBox;\n        var changeTargetAnchor = false;\n        var deleteTargetAnchor = false;\n        if (!nextVertex) {\n            nextVertex = relatedView.targetAnchor.toJSON();\n            nextVertex[axis] = position[axis];\n            if (targetBBox.containsPoint(nextVertex)) {\n                changeTargetAnchor = true;\n            } else {\n                // we left the area of the target magnet for the first time\n                vertices.push(nextVertex);\n                deleteTargetAnchor = true;\n            }\n        } else if (index === vertices.length - 2) {\n            if (targetBBox.containsPoint(nextVertex)) {\n                vertices.pop();\n                changeTargetAnchor = true;\n            } else {\n                nextVertex[axis] = position[axis];\n                deleteTargetAnchor = true;\n            }\n        } else {\n            nextVertex[axis] = position[axis];\n        }\n\n        if (anchorFn && targetView) {\n            if (changeTargetAnchor) {\n                var targetAnchorPosition = data.targetAnchor.clone();\n                targetAnchorPosition[axis] = position[axis];\n                var targetAnchor = anchorFn.call(relatedView, targetAnchorPosition, targetView, relatedView.targetMagnet || targetView.el, 'target', relatedView);\n                this.resetAnchor('target', targetAnchor);\n            }\n            if (deleteTargetAnchor) {\n                this.resetAnchor('target', data.targetAnchorDef);\n            }\n        }\n\n        link.vertices(vertices, { ui: true, tool: this.cid });\n        this.updateHandle(handle, vertex, nextVertex, offset);\n        if (!options.stopPropagation) relatedView.notifyPointermove(normalizedEvent, coords.x, coords.y);\n    },\n    onHandleChangeStart: function(handle, evt) {\n        const { options, handles, relatedView: linkView } = this;\n        const { model, paper } = linkView;\n        var index = handle.options.index;\n        if (!Array.isArray(handles)) return;\n        for (var i = 0, n = handles.length; i < n; i++) {\n            if (i !== index) handles[i].hide();\n        }\n        this.focus();\n        this.eventData(evt, {\n            sourceAnchor: linkView.sourceAnchor.clone(),\n            targetAnchor: linkView.targetAnchor.clone(),\n            sourceAnchorDef: util.clone(model.prop(['source', 'anchor'])),\n            targetAnchorDef: util.clone(model.prop(['target', 'anchor']))\n        });\n        model.startBatch('segment-move', { ui: true, tool: this.cid });\n        if (!options.stopPropagation) linkView.notifyPointerdown(...paper.getPointerArgs(evt));\n    },\n    onHandleChangeEnd: function(_handle, evt) {\n        const { options, relatedView: linkView }= this;\n        const { paper, model } = linkView;\n        if (options.redundancyRemoval) {\n            linkView.removeRedundantLinearVertices({ ui: true, tool: this.cid });\n        }\n        const normalizedEvent = util.normalizeEvent(evt);\n        const coords = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n        this.render();\n        this.blur();\n        model.stopBatch('segment-move', { ui: true, tool: this.cid });\n        if (!options.stopPropagation) linkView.notifyPointerup(normalizedEvent, coords.x, coords.y);\n        linkView.checkMouseleave(normalizedEvent);\n    },\n    updateHandle: function(handle, vertex, nextVertex, offset) {\n        var vertical = Math.abs(vertex.x - nextVertex.x) < this.precision;\n        var horizontal = Math.abs(vertex.y - nextVertex.y) < this.precision;\n        if (vertical || horizontal) {\n            var segmentLine = new g.Line(vertex, nextVertex);\n            var length = segmentLine.length();\n            if (length < this.options.segmentLengthThreshold) {\n                handle.hide();\n            } else {\n                var position = segmentLine.midpoint();\n                var axis = (vertical) ? 'x' : 'y';\n                position[axis] += offset || 0;\n                var angle = segmentLine.vector().vectorAngle(new g.Point(1, 0));\n                handle.position(position.x, position.y, angle, this.relatedView);\n                handle.show();\n                handle.options.axis = axis;\n            }\n        } else {\n            handle.hide();\n        }\n    },\n    onRemove: function() {\n        this.resetHandles();\n    }\n}, {\n    SegmentHandle: SegmentHandle // keep as class property\n});\n\n// End Markers\nvar Arrowhead = ToolView.extend({\n    tagName: 'path',\n    xAxisVector: new g.Point(1, 0),\n    events: {\n        mousedown: 'onPointerDown',\n        touchstart: 'onPointerDown'\n    },\n    documentEvents: {\n        mousemove: 'onPointerMove',\n        touchmove: 'onPointerMove',\n        mouseup: 'onPointerUp',\n        touchend: 'onPointerUp',\n        touchcancel: 'onPointerUp'\n    },\n    onRender: function() {\n        this.update();\n    },\n    update: function() {\n        var ratio = this.ratio;\n        var view = this.relatedView;\n        var tangent = view.getTangentAtRatio(ratio);\n        var position, angle;\n        if (tangent) {\n            position = tangent.start;\n            angle = tangent.vector().vectorAngle(this.xAxisVector) || 0;\n        } else {\n            position = view.getPointAtRatio(ratio);\n            angle = 0;\n        }\n        if (!position) return this;\n        var matrix = V.createSVGMatrix().translate(position.x, position.y).rotate(angle);\n        this.vel.transform(matrix, { absolute: true });\n        return this;\n    },\n    onPointerDown: function(evt) {\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        var relatedView = this.relatedView;\n        relatedView.model.startBatch('arrowhead-move', { ui: true, tool: this.cid });\n        if (relatedView.can('arrowheadMove')) {\n            relatedView.startArrowheadMove(this.arrowheadType);\n            this.delegateDocumentEvents();\n            relatedView.paper.undelegateEvents();\n        }\n        this.focus();\n        this.el.style.pointerEvents = 'none';\n    },\n    onPointerMove: function(evt) {\n        var normalizedEvent = util.normalizeEvent(evt);\n        var coords = this.paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n        this.relatedView.pointermove(normalizedEvent, coords.x, coords.y);\n    },\n    onPointerUp: function(evt) {\n        this.undelegateDocumentEvents();\n        var relatedView = this.relatedView;\n        var paper = relatedView.paper;\n        var normalizedEvent = util.normalizeEvent(evt);\n        var coords = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n        relatedView.pointerup(normalizedEvent, coords.x, coords.y);\n        paper.delegateEvents();\n        this.blur();\n        this.el.style.pointerEvents = '';\n        relatedView.model.stopBatch('arrowhead-move', { ui: true, tool: this.cid });\n    }\n});\n\nvar TargetArrowhead = Arrowhead.extend({\n    name: 'target-arrowhead',\n    ratio: 1,\n    arrowheadType: 'target',\n    attributes: {\n        'd': 'M -10 -8 10 0 -10 8 Z',\n        'fill': '#33334F',\n        'stroke': '#FFFFFF',\n        'stroke-width': 2,\n        'cursor': 'move',\n        'class': 'target-arrowhead'\n    }\n});\n\nvar SourceArrowhead = Arrowhead.extend({\n    name: 'source-arrowhead',\n    ratio: 0,\n    arrowheadType: 'source',\n    attributes: {\n        'd': 'M 10 -8 -10 0 10 8 Z',\n        'fill': '#33334F',\n        'stroke': '#FFFFFF',\n        'stroke-width': 2,\n        'cursor': 'move',\n        'class': 'source-arrowhead'\n    }\n});\n\nvar Button = ToolView.extend({\n    name: 'button',\n    events: {\n        'mousedown': 'onPointerDown',\n        'touchstart': 'onPointerDown'\n    },\n    options: {\n        distance: 0,\n        offset: 0,\n        rotate: false\n    },\n    onRender: function() {\n        this.renderChildren(this.options.markup);\n        this.update();\n    },\n    update: function() {\n        this.position();\n        return this;\n    },\n    position: function() {\n        const { relatedView: view, vel } = this;\n        const matrix = view.model.isLink() ? this.getLinkMatrix() : this.getElementMatrix();\n        vel.transform(matrix, { absolute: true });\n    },\n    getElementMatrix() {\n        const { relatedView: view, options } = this;\n        let { x = 0, y = 0, offset = {}, useModelGeometry, rotate } = options;\n        let bbox = getViewBBox(view, useModelGeometry);\n        const angle = view.model.angle();\n        if (!rotate) bbox = bbox.bbox(angle);\n        const { x: offsetX = 0, y: offsetY = 0 } = offset;\n        if (util.isPercentage(x)) {\n            x = parseFloat(x) / 100 * bbox.width;\n        }\n        if (util.isPercentage(y)) {\n            y = parseFloat(y) / 100 * bbox.height;\n        }\n        let matrix = V.createSVGMatrix().translate(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2);\n        if (rotate) matrix = matrix.rotate(angle);\n        matrix = matrix.translate(x + offsetX - bbox.width / 2, y + offsetY - bbox.height / 2);\n        return matrix;\n    },\n    getLinkMatrix() {\n        const { relatedView: view, options } = this;\n        const { offset = 0, distance = 0, rotate } = options;\n        let tangent, position, angle;\n        if (util.isPercentage(distance)) {\n            tangent = view.getTangentAtRatio(parseFloat(distance) / 100);\n        } else {\n            tangent = view.getTangentAtLength(distance);\n        }\n        if (tangent) {\n            position = tangent.start;\n            angle = tangent.vector().vectorAngle(new g.Point(1, 0)) || 0;\n        } else {\n            position = view.getConnection().start;\n            angle = 0;\n        }\n        let matrix = V.createSVGMatrix()\n            .translate(position.x, position.y)\n            .rotate(angle)\n            .translate(0, offset);\n        if (!rotate) matrix = matrix.rotate(-angle);\n        return matrix;\n    },\n    onPointerDown: function(evt) {\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        var actionFn = this.options.action;\n        if (typeof actionFn === 'function') {\n            actionFn.call(this.relatedView, evt, this.relatedView, this);\n        }\n    }\n});\n\n\nvar Remove = Button.extend({\n    children: [{\n        tagName: 'circle',\n        selector: 'button',\n        attributes: {\n            'r': 7,\n            'fill': '#FF1D00',\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'icon',\n        attributes: {\n            'd': 'M -3 -3 3 3 M -3 3 3 -3',\n            'fill': 'none',\n            'stroke': '#FFFFFF',\n            'stroke-width': 2,\n            'pointer-events': 'none'\n        }\n    }],\n    options: {\n        distance: 60,\n        offset: 0,\n        action: function(evt, view, tool) {\n            view.model.remove({ ui: true, tool: tool.cid });\n        }\n    }\n});\n\nconst Connect = Button.extend({\n    name: 'connect',\n    documentEvents: {\n        mousemove: 'drag',\n        touchmove: 'drag',\n        mouseup: 'dragend',\n        touchend: 'dragend',\n        touchcancel: 'dragend'\n    },\n    children: [{\n        tagName: 'circle',\n        selector: 'button',\n        attributes: {\n            'r': 7,\n            'fill': '#333333',\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'icon',\n        attributes: {\n            'd': 'M -4 -1 L 0 -1 L 0 -4 L 4 0 L 0 4 0 1 -4 1 z',\n            'fill': '#FFFFFF',\n            'stroke': 'none',\n            'stroke-width': 2,\n            'pointer-events': 'none'\n        }\n    }],\n    options: {\n        distance: 80,\n        offset: 0,\n        magnet: (view) => view.el,\n        action: (evt, _view, tool) => tool.dragstart(evt),\n    },\n    getMagnetNode: function() {\n        const { options, relatedView } = this;\n        const { magnet } = options;\n        let magnetNode;\n        switch (typeof magnet) {\n            case 'function': {\n                magnetNode = magnet.call(this, relatedView, this);\n                break;\n            }\n            case 'string': {\n                [magnetNode] = relatedView.findBySelector(magnet);\n                break;\n            }\n            default: {\n                magnetNode = magnet;\n                break;\n            }\n        }\n        if (!magnetNode) magnetNode = relatedView.el;\n        if (magnetNode instanceof SVGElement) return magnetNode;\n        throw new Error('Connect: magnet must be an SVGElement');\n    },\n    dragstart: function(evt) {\n        const { paper, relatedView } = this;\n        const normalizedEvent = util.normalizeEvent(evt);\n        const { x, y } = paper.clientToLocalPoint(normalizedEvent.clientX, normalizedEvent.clientY);\n        relatedView.dragLinkStart(normalizedEvent, this.getMagnetNode(), x, y);\n        paper.undelegateEvents();\n        this.delegateDocumentEvents(null, evt.data);\n        this.focus();\n    },\n    drag: function(evt) {\n        const { paper, relatedView } = this;\n        const normalizedEvent = util.normalizeEvent(evt);\n        const { x, y } = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n        relatedView.dragLink(normalizedEvent, x, y);\n    },\n    dragend: function(evt) {\n        const { paper, relatedView } = this;\n        const normalizedEvent = util.normalizeEvent(evt);\n        const { x, y } = paper.snapToGrid(normalizedEvent.clientX, normalizedEvent.clientY);\n        relatedView.dragLinkEnd(normalizedEvent, x, y);\n        this.undelegateDocumentEvents();\n        paper.delegateEvents();\n        this.blur();\n        relatedView.checkMouseleave(normalizedEvent);\n    }\n});\n\n\nvar Boundary = ToolView.extend({\n    name: 'boundary',\n    tagName: 'rect',\n    options: {\n        padding: 10,\n        useModelGeometry: false,\n    },\n    attributes: {\n        'fill': 'none',\n        'stroke': '#33334F',\n        'stroke-width': .5,\n        'stroke-dasharray': '5, 5',\n        'pointer-events': 'none'\n    },\n    onRender: function() {\n        this.update();\n    },\n    update: function() {\n        const { relatedView: view, options, vel } = this;\n        const { useModelGeometry, rotate } = options;\n        const padding = util.normalizeSides(options.padding);\n        let bbox = getViewBBox(view, useModelGeometry).moveAndExpand({\n            x: -padding.left,\n            y: -padding.top,\n            width: padding.left + padding.right,\n            height: padding.top + padding.bottom\n        });\n        var model = view.model;\n        if (model.isElement()) {\n            var angle = model.angle();\n            if (angle) {\n                if (rotate) {\n                    var origin = model.getBBox().center();\n                    vel.rotate(angle, origin.x, origin.y, { absolute: true });\n                } else {\n                    bbox = bbox.bbox(angle);\n                }\n            }\n        }\n        vel.attr(bbox.toJSON());\n        return this;\n    }\n});\n\nvar Anchor = ToolView.extend({\n    tagName: 'g',\n    type: null,\n    children: [{\n        tagName: 'circle',\n        selector: 'anchor',\n        attributes: {\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'rect',\n        selector: 'area',\n        attributes: {\n            'pointer-events': 'none',\n            'fill': 'none',\n            'stroke': '#33334F',\n            'stroke-dasharray': '2,4',\n            'rx': 5,\n            'ry': 5\n        }\n    }],\n    events: {\n        mousedown: 'onPointerDown',\n        touchstart: 'onPointerDown',\n        dblclick: 'onPointerDblClick',\n        dbltap: 'onPointerDblClick'\n    },\n    documentEvents: {\n        mousemove: 'onPointerMove',\n        touchmove: 'onPointerMove',\n        mouseup: 'onPointerUp',\n        touchend: 'onPointerUp',\n        touchcancel: 'onPointerUp'\n    },\n    options: {\n        snap: snapAnchor,\n        anchor: getAnchor,\n        resetAnchor: true,\n        customAnchorAttributes: {\n            'stroke-width': 4,\n            'stroke': '#33334F',\n            'fill': '#FFFFFF',\n            'r': 5\n        },\n        defaultAnchorAttributes: {\n            'stroke-width': 2,\n            'stroke': '#FFFFFF',\n            'fill': '#33334F',\n            'r': 6\n        },\n        areaPadding: 6,\n        snapRadius: 10,\n        restrictArea: true,\n        redundancyRemoval: true\n    },\n    onRender: function() {\n        this.renderChildren();\n        this.toggleArea(false);\n        this.update();\n    },\n    update: function() {\n        var type = this.type;\n        var relatedView = this.relatedView;\n        var view = relatedView.getEndView(type);\n        if (view) {\n            this.updateAnchor();\n            this.updateArea();\n            this.el.style.display = '';\n        } else {\n            this.el.style.display = 'none';\n        }\n        return this;\n    },\n    updateAnchor: function() {\n        var childNodes = this.childNodes;\n        if (!childNodes) return;\n        var anchorNode = childNodes.anchor;\n        if (!anchorNode) return;\n        var relatedView = this.relatedView;\n        var type = this.type;\n        var position = relatedView.getEndAnchor(type);\n        var options = this.options;\n        var customAnchor = relatedView.model.prop([type, 'anchor']);\n        anchorNode.setAttribute('transform', 'translate(' + position.x + ',' + position.y + ')');\n        var anchorAttributes = (customAnchor) ? options.customAnchorAttributes : options.defaultAnchorAttributes;\n        for (var attrName in anchorAttributes) {\n            anchorNode.setAttribute(attrName, anchorAttributes[attrName]);\n        }\n    },\n    updateArea: function() {\n        var childNodes = this.childNodes;\n        if (!childNodes) return;\n        var areaNode = childNodes.area;\n        if (!areaNode) return;\n        var relatedView = this.relatedView;\n        var type = this.type;\n        var view = relatedView.getEndView(type);\n        var model = view.model;\n        var magnet = relatedView.getEndMagnet(type);\n        var padding = this.options.areaPadding;\n        if (!isFinite(padding)) padding = 0;\n        var bbox, angle, center;\n        if (view.isNodeConnection(magnet)) {\n            bbox = view.getBBox();\n            angle = 0;\n            center = bbox.center();\n        } else {\n            bbox = view.getNodeUnrotatedBBox(magnet);\n            angle = model.angle();\n            center = bbox.center();\n            if (angle) center.rotate(model.getBBox().center(), -angle);\n            // TODO: get the link's magnet rotation into account\n        }\n        bbox.inflate(padding);\n        areaNode.setAttribute('x', -bbox.width / 2);\n        areaNode.setAttribute('y', -bbox.height / 2);\n        areaNode.setAttribute('width', bbox.width);\n        areaNode.setAttribute('height', bbox.height);\n        areaNode.setAttribute('transform', 'translate(' + center.x + ',' + center.y + ') rotate(' + angle + ')');\n    },\n    toggleArea: function(visible) {\n        this.childNodes.area.style.display = (visible) ? '' : 'none';\n    },\n    onPointerDown: function(evt) {\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.paper.undelegateEvents();\n        this.delegateDocumentEvents();\n        this.focus();\n        this.toggleArea(this.options.restrictArea);\n        this.relatedView.model.startBatch('anchor-move', { ui: true, tool: this.cid });\n    },\n    resetAnchor: function(anchor) {\n        var type = this.type;\n        var relatedModel = this.relatedView.model;\n        if (anchor) {\n            relatedModel.prop([type, 'anchor'], anchor, {\n                rewrite: true,\n                ui: true,\n                tool: this.cid\n            });\n        } else {\n            relatedModel.removeProp([type, 'anchor'], {\n                ui: true,\n                tool: this.cid\n            });\n        }\n    },\n    onPointerMove: function(evt) {\n\n        var relatedView = this.relatedView;\n        var type = this.type;\n        var view = relatedView.getEndView(type);\n        var model = view.model;\n        var magnet = relatedView.getEndMagnet(type);\n        var normalizedEvent = util.normalizeEvent(evt);\n        var coords = this.paper.clientToLocalPoint(normalizedEvent.clientX, normalizedEvent.clientY);\n        var snapFn = this.options.snap;\n        if (typeof snapFn === 'function') {\n            coords = snapFn.call(relatedView, coords, view, magnet, type, relatedView, this);\n            coords = new g.Point(coords);\n        }\n\n        if (this.options.restrictArea) {\n            if (view.isNodeConnection(magnet)) {\n                // snap coords to the link's connection\n                var pointAtConnection = view.getClosestPoint(coords);\n                if (pointAtConnection) coords = pointAtConnection;\n            } else {\n                // snap coords within node bbox\n                var bbox = view.getNodeUnrotatedBBox(magnet);\n                var angle = model.angle();\n                var origin = model.getBBox().center();\n                var rotatedCoords = coords.clone().rotate(origin, angle);\n                if (!bbox.containsPoint(rotatedCoords)) {\n                    coords = bbox.pointNearestToPoint(rotatedCoords).rotate(origin, -angle);\n                }\n            }\n        }\n\n        var anchor;\n        var anchorFn = this.options.anchor;\n        if (typeof anchorFn === 'function') {\n            anchor = anchorFn.call(relatedView, coords, view, magnet, type, relatedView);\n        }\n\n        this.resetAnchor(anchor);\n        this.update();\n    },\n\n    onPointerUp: function(evt) {\n        this.paper.delegateEvents();\n        this.undelegateDocumentEvents();\n        this.blur();\n        this.toggleArea(false);\n        var linkView = this.relatedView;\n        if (this.options.redundancyRemoval) linkView.removeRedundantLinearVertices({ ui: true, tool: this.cid });\n        linkView.model.stopBatch('anchor-move', { ui: true, tool: this.cid });\n    },\n\n    onPointerDblClick: function() {\n        var anchor = this.options.resetAnchor;\n        if (anchor === false) return; // reset anchor disabled\n        if (anchor === true) anchor = null; // remove the current anchor\n        this.resetAnchor(util.cloneDeep(anchor));\n        this.update();\n    }\n});\n\nvar SourceAnchor = Anchor.extend({\n    name: 'source-anchor',\n    type: 'source'\n});\n\nvar TargetAnchor = Anchor.extend({\n    name: 'target-anchor',\n    type: 'target'\n});\n\n\n\n\nexport { Vertices, Segments, SourceArrowhead, TargetArrowhead, SourceAnchor, TargetAnchor, Button, Remove, Connect, Boundary };\n"],"mappings":";AAAA,OAAO,KAAKA,CAAZ,MAAmB,gBAAnB;AACA,OAAOC,CAAP,MAAc,gBAAd;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,OAAO,KAAKC,oBAAZ,MAAsC,mCAAtC;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,MAAjC,EAAyC;EACrC;EACA;EACA,IAAIC,GAAG,GAAGP,oBAAoB,CAACQ,WAArB,CAAiCC,IAAjC,CACN,KAAKC,KADC,EAEN,EAFM,EAGNL,IAHM,EAINC,MAJM,EAKNF,MALM,EAMN,KAAKO,KANC,CAAV;EAQA,OAAOJ,GAAG,CAACK,MAAX;AACH;;AAED,SAASC,UAAT,CAAoBT,MAApB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0CQ,IAA1C,EAAgDC,WAAhD,EAA6DC,QAA7D,EAAuE;EACnE,IAAIC,UAAU,GAAGD,QAAQ,CAACE,OAAT,CAAiBD,UAAlC;EACA,IAAIE,QAAQ,GAAIL,IAAI,KAAK,QAAzB;EACA,IAAIM,QAAQ,GAAID,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAhC;EACA,IAAIE,GAAG,GAAG,KAAKV,KAAL,CAAWW,MAAX,CAAkBF,QAAlB,KAA+B,KAAKG,YAAL,CAAkBJ,QAAQ,GAAG,QAAH,GAAc,QAAxC,CAAzC;;EACA,IAAIE,GAAJ,EAAS;IACL,IAAIG,IAAI,CAACC,GAAL,CAASJ,GAAG,CAACK,CAAJ,GAAQtB,MAAM,CAACsB,CAAxB,IAA6BT,UAAjC,EAA6Cb,MAAM,CAACsB,CAAP,GAAWL,GAAG,CAACK,CAAf;IAC7C,IAAIF,IAAI,CAACC,GAAL,CAASJ,GAAG,CAACM,CAAJ,GAAQvB,MAAM,CAACuB,CAAxB,IAA6BV,UAAjC,EAA6Cb,MAAM,CAACuB,CAAP,GAAWN,GAAG,CAACM,CAAf;EAChD;;EACD,OAAOvB,MAAP;AACH;;AAED,SAASwB,WAAT,CAAqBvB,IAArB,EAA2BwB,gBAA3B,EAA6C;EACzC,MAAM;IAAElB;EAAF,IAAYN,IAAlB;EACA,IAAIwB,gBAAJ,EAAsB,OAAOlB,KAAK,CAACmB,OAAN,EAAP;EACtB,OAAQnB,KAAK,CAACoB,MAAN,EAAD,GAAmB1B,IAAI,CAAC2B,aAAL,GAAqBC,IAArB,EAAnB,GAAiD5B,IAAI,CAAC6B,oBAAL,CAA0B7B,IAAI,CAAC8B,EAA/B,CAAxD;AACH,C,CAED;;;AACA,IAAIC,YAAY,GAAGnC,GAAG,CAACoC,IAAJ,CAASC,MAAT,CAAgB;EAC/BC,OAAO,EAAE,QADsB;EAE/BC,UAAU,EAAE,IAFmB;EAG/BC,SAAS,EAAE,eAHoB;EAI/BC,MAAM,EAAE;IACJC,SAAS,EAAE,eADP;IAEJC,UAAU,EAAE,eAFR;IAGJC,QAAQ,EAAE,eAHN;IAIJC,MAAM,EAAE;EAJJ,CAJuB;EAU/BC,cAAc,EAAE;IACZC,SAAS,EAAE,eADC;IAEZC,SAAS,EAAE,eAFC;IAGZC,OAAO,EAAE,aAHG;IAIZC,QAAQ,EAAE,aAJE;IAKZC,WAAW,EAAE;EALD,CAVe;EAiB/BC,UAAU,EAAE;IACR,KAAK,CADG;IAER,QAAQ,SAFA;IAGR,UAAU,SAHF;IAIR,gBAAgB,CAJR;IAKR,UAAU;EALF,CAjBmB;EAwB/BC,QAAQ,EAAE,UAAS5B,CAAT,EAAYC,CAAZ,EAAe;IACrB,KAAK4B,GAAL,CAASC,IAAT,CAAc;MAAEC,EAAE,EAAE/B,CAAN;MAASgC,EAAE,EAAE/B;IAAb,CAAd;EACH,CA1B8B;EA2B/BgC,aAAa,EAAE,UAASC,GAAT,EAAc;IACzB,IAAI,KAAK1C,OAAL,CAAa2C,KAAb,CAAmBD,GAAnB,CAAJ,EAA6B;IAC7BA,GAAG,CAACE,eAAJ;IACAF,GAAG,CAACG,cAAJ;IACA,KAAK7C,OAAL,CAAaR,KAAb,CAAmBsD,gBAAnB;IACA,KAAKC,sBAAL,CAA4B,IAA5B,EAAkCL,GAAG,CAACM,IAAtC;IACA,KAAKC,OAAL,CAAa,aAAb,EAA4B,IAA5B,EAAkCP,GAAlC;EACH,CAlC8B;EAmC/BQ,aAAa,EAAE,UAASR,GAAT,EAAc;IACzB,KAAKO,OAAL,CAAa,UAAb,EAAyB,IAAzB,EAA+BP,GAA/B;EACH,CArC8B;EAsC/BS,aAAa,EAAE,UAAST,GAAT,EAAc;IACzB,KAAKO,OAAL,CAAa,QAAb,EAAuB,IAAvB,EAA6BP,GAA7B;EACH,CAxC8B;EAyC/BU,WAAW,EAAE,UAASV,GAAT,EAAc;IACvB,KAAKO,OAAL,CAAa,SAAb,EAAwB,IAAxB,EAA8BP,GAA9B;IACA,KAAKW,wBAAL;IACA,KAAKrD,OAAL,CAAaR,KAAb,CAAmB8D,cAAnB;EACH;AA7C8B,CAAhB,CAAnB;AAgDA,IAAIC,QAAQ,GAAGvE,QAAQ,CAACoC,MAAT,CAAgB;EAC3BoC,IAAI,EAAE,UADqB;EAE3BxD,OAAO,EAAE;IACLyD,WAAW,EAAEvC,YADR;IAELnB,UAAU,EAAE,EAFP;IAGL2D,iBAAiB,EAAE,IAHd;IAILC,YAAY,EAAE,IAJT;IAKLf,eAAe,EAAE;EALZ,CAFkB;EAS3BgB,QAAQ,EAAE,CAAC;IACPvC,OAAO,EAAE,MADF;IAEPwC,QAAQ,EAAE,YAFH;IAGPtC,SAAS,EAAE,qBAHJ;IAIPY,UAAU,EAAE;MACR,QAAQ,MADA;MAER,UAAU,aAFF;MAGR,gBAAgB,EAHR;MAIR,UAAU;IAJF;EAJL,CAAD,CATiB;EAoB3B2B,OAAO,EAAE,IApBkB;EAqB3BtC,MAAM,EAAE;IACJ,kCAAkC,mBAD9B;IAEJ,mCAAmC;EAF/B,CArBmB;EAyB3BuC,QAAQ,EAAE,YAAW;IACjB,IAAI,KAAK/D,OAAL,CAAa2D,YAAjB,EAA+B;MAC3B,KAAKK,cAAL;MACA,KAAKC,UAAL;IACH;;IACD,KAAKC,YAAL;IACA,KAAKC,aAAL;IACA,OAAO,IAAP;EACH,CAjC0B;EAkC3BC,MAAM,EAAE,YAAW;IACf,IAAIvE,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAIwE,QAAQ,GAAGxE,WAAW,CAACJ,KAAZ,CAAkB4E,QAAlB,EAAf;;IACA,IAAIA,QAAQ,CAACC,MAAT,KAAoB,KAAKR,OAAL,CAAaQ,MAArC,EAA6C;MACzC,KAAKC,aAAL;IACH,CAFD,MAEO;MACH,KAAKL,YAAL;MACA,KAAKC,aAAL;IACH;;IACD,IAAI,KAAKnE,OAAL,CAAa2D,YAAjB,EAA+B;MAC3B,KAAKM,UAAL;IACH;;IACD,OAAO,IAAP;EACH,CA/C0B;EAgD3BC,YAAY,EAAE,YAAW;IACrB,IAAIJ,OAAO,GAAG,KAAKA,OAAnB;IACA,KAAKA,OAAL,GAAe,EAAf;IACA,KAAKU,aAAL;IACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcZ,OAAd,CAAL,EAA6B;;IAC7B,KAAK,IAAIa,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGd,OAAO,CAACQ,MAA5B,EAAoCK,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAgD;MAC5Cb,OAAO,CAACa,CAAD,CAAP,CAAWE,MAAX;IACH;EACJ,CAxD0B;EAyD3BV,aAAa,EAAE,YAAW;IACtB,IAAItE,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAIwE,QAAQ,GAAGxE,WAAW,CAACJ,KAAZ,CAAkB4E,QAAlB,EAAf;;IACA,KAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGP,QAAQ,CAACC,MAA7B,EAAqCK,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;MAC7C,IAAIvE,MAAM,GAAGiE,QAAQ,CAACM,CAAD,CAArB;MACA,IAAIG,MAAM,GAAG,IAAK,KAAK9E,OAAL,CAAayD,WAAlB,CAA+B;QACxCsB,KAAK,EAAEJ,CADiC;QAExCnF,KAAK,EAAE,KAAKA,KAF4B;QAGxCmD,KAAK,EAAED,GAAG,IAAI,KAAKC,KAAL,CAAWD,GAAX;MAH0B,CAA/B,CAAb;MAKAoC,MAAM,CAACE,MAAP;MACAF,MAAM,CAAC1C,QAAP,CAAgBhC,MAAM,CAACI,CAAvB,EAA0BJ,MAAM,CAACK,CAAjC;MACA,KAAKwE,mBAAL,CAAyBH,MAAM,CAAC7D,EAAhC;MACA6D,MAAM,CAACzC,GAAP,CAAW6C,QAAX,CAAoB,KAAKjE,EAAzB;MACA,KAAK6C,OAAL,CAAaqB,IAAb,CAAkBL,MAAlB;MACA,KAAKM,oBAAL,CAA0BN,MAA1B;IACH;EACJ,CA1E0B;EA2E3BP,aAAa,EAAE,YAAW;IACtB,IAAI1E,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAIwE,QAAQ,GAAGxE,WAAW,CAACJ,KAAZ,CAAkB4E,QAAlB,EAAf;;IACA,KAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGP,QAAQ,CAACC,MAA7B,EAAqCK,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;MAC7C,IAAIvE,MAAM,GAAGiE,QAAQ,CAACM,CAAD,CAArB;MACA,IAAIG,MAAM,GAAG,KAAKhB,OAAL,CAAaa,CAAb,CAAb;MACA,IAAI,CAACG,MAAL,EAAa;MACbA,MAAM,CAAC1C,QAAP,CAAgBhC,MAAM,CAACI,CAAvB,EAA0BJ,MAAM,CAACK,CAAjC;IACH;EACJ,CApF0B;EAqF3BwD,UAAU,EAAE,YAAW;IACnB,IAAIoB,UAAU,GAAG,KAAKC,UAAL,CAAgBD,UAAjC;IACA,IAAIA,UAAJ,EAAgBA,UAAU,CAACE,YAAX,CAAwB,GAAxB,EAA6B,KAAK1F,WAAL,CAAiB2F,uBAAjB,EAA7B;EACnB,CAxF0B;EAyF3BJ,oBAAoB,EAAE,UAASN,MAAT,EAAiB;IACnC,IAAIjF,WAAW,GAAG,KAAKA,WAAvB;;IACA,IAAIA,WAAW,CAAC4F,GAAZ,CAAgB,YAAhB,CAAJ,EAAmC;MAC/B,KAAKC,QAAL,CAAcZ,MAAd,EAAsB,aAAtB,EAAqC,KAAKa,kBAA1C;MACA,KAAKD,QAAL,CAAcZ,MAAd,EAAsB,UAAtB,EAAkC,KAAKc,gBAAvC;MACA,KAAKF,QAAL,CAAcZ,MAAd,EAAsB,SAAtB,EAAiC,KAAKe,eAAtC;IACH;;IACD,IAAIhG,WAAW,CAAC4F,GAAZ,CAAgB,cAAhB,CAAJ,EAAqC;MACjC,KAAKC,QAAL,CAAcZ,MAAd,EAAsB,QAAtB,EAAgC,KAAKgB,cAArC;IACH;EACJ,CAnG0B;EAoG3BC,iBAAiB,EAAE,UAAShB,KAAT,EAAgB;IAC/B,IAAIiB,QAAQ,GAAG,KAAKnG,WAApB;IACA,IAAIwE,QAAQ,GAAG2B,QAAQ,CAACvG,KAAT,CAAe4E,QAAf,EAAf;IACA,IAAI4B,IAAI,GAAIlB,KAAK,GAAG,CAAT,GAAcV,QAAQ,CAACU,KAAK,GAAG,CAAT,CAAtB,GAAoCiB,QAAQ,CAACE,YAAxD;IACA,IAAIC,IAAI,GAAIpB,KAAK,GAAGV,QAAQ,CAACC,MAAT,GAAkB,CAA3B,GAAgCD,QAAQ,CAACU,KAAK,GAAG,CAAT,CAAxC,GAAsDiB,QAAQ,CAACI,YAA1E;IACA,OAAO;MACHH,IAAI,EAAE,IAAItH,CAAC,CAAC0H,KAAN,CAAYJ,IAAZ,CADH;MAEHE,IAAI,EAAE,IAAIxH,CAAC,CAAC0H,KAAN,CAAYF,IAAZ;IAFH,CAAP;EAIH,CA7G0B;EA8G3BR,kBAAkB,EAAE,UAASW,OAAT,EAAkB5D,GAAlB,EAAuB;IACvC,KAAK6D,KAAL;IACA,MAAM;MAAE1G,WAAF;MAAeG;IAAf,IAA2B,IAAjC;IACAH,WAAW,CAACJ,KAAZ,CAAkB+G,UAAlB,CAA6B,aAA7B,EAA4C;MAAEC,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAA5C;IACA,IAAI,CAAC3G,OAAO,CAAC4C,eAAb,EAA8B/C,WAAW,CAAC+G,iBAAZ,CAA8B,GAAG/G,WAAW,CAACL,KAAZ,CAAkBqH,cAAlB,CAAiCnE,GAAjC,CAAjC;EACjC,CAnH0B;EAoH3BkD,gBAAgB,EAAE,UAASd,MAAT,EAAiBpC,GAAjB,EAAsB;IACpC,MAAM;MAAE1C,OAAF;MAAWH,WAAW,EAAEmG;IAAxB,IAAqC,IAA3C;IACA,IAAIjB,KAAK,GAAGD,MAAM,CAAC9E,OAAP,CAAe+E,KAA3B;IACA,IAAI,CAAC+B,eAAD,EAAkBtG,CAAlB,EAAqBC,CAArB,IAA0BuF,QAAQ,CAACxG,KAAT,CAAeqH,cAAf,CAA8BnE,GAA9B,CAA9B;IACA,IAAItC,MAAM,GAAG;MAAEI,CAAF;MAAKC;IAAL,CAAb;IACA,KAAKsG,UAAL,CAAgB3G,MAAhB,EAAwB2E,KAAxB;IACAiB,QAAQ,CAACvG,KAAT,CAAeW,MAAf,CAAsB2E,KAAtB,EAA6B3E,MAA7B,EAAqC;MAAEqG,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAArC;IACA7B,MAAM,CAAC1C,QAAP,CAAgBhC,MAAM,CAACI,CAAvB,EAA0BJ,MAAM,CAACK,CAAjC;IACA,IAAI,CAACT,OAAO,CAAC4C,eAAb,EAA8BoD,QAAQ,CAACgB,iBAAT,CAA2BF,eAA3B,EAA4CtG,CAA5C,EAA+CC,CAA/C;EACjC,CA7H0B;EA8H3BoF,eAAe,EAAE,UAASS,OAAT,EAAkB5D,GAAlB,EAAuB;IACpC,MAAM;MAAE1C,OAAF;MAAWH,WAAW,EAAEmG;IAAxB,IAAqC,IAA3C;IACA,IAAIhG,OAAO,CAAC2D,YAAZ,EAA0B,KAAKM,UAAL;IAC1B,IAAI,CAACjE,OAAO,CAAC0D,iBAAb,EAAgC;IAChC,IAAIuD,eAAe,GAAGjB,QAAQ,CAACkB,6BAAT,CAAuC;MAAET,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAvC,CAAtB;IACA,IAAIM,eAAJ,EAAqB,KAAKjC,MAAL;IACrB,KAAKmC,IAAL;IACAnB,QAAQ,CAACvG,KAAT,CAAe2H,SAAf,CAAyB,aAAzB,EAAwC;MAAEX,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAxC;;IACA,IAAI,KAAKU,SAAL,CAAe3E,GAAf,EAAoB4E,WAAxB,EAAqC;MACjCtB,QAAQ,CAACvG,KAAT,CAAe2H,SAAf,CAAyB,YAAzB,EAAuC;QAAEX,EAAE,EAAE,IAAN;QAAYC,IAAI,EAAE,KAAKC;MAAvB,CAAvC;IACH;;IACD,IAAI,CAACY,aAAD,EAAgB/G,CAAhB,EAAmBC,CAAnB,IAAwBuF,QAAQ,CAACxG,KAAT,CAAeqH,cAAf,CAA8BnE,GAA9B,CAA5B;IACA,IAAI,CAAC1C,OAAO,CAAC4C,eAAb,EAA8BoD,QAAQ,CAACwB,eAAT,CAAyBD,aAAzB,EAAwC/G,CAAxC,EAA2CC,CAA3C;IAC9BuF,QAAQ,CAACyB,eAAT,CAAyBF,aAAzB;EACH,CA5I0B;EA6I3BR,UAAU,EAAE,UAAS3G,MAAT,EAAiB2E,KAAjB,EAAwB;IAChC,IAAIhF,UAAU,GAAG,KAAKC,OAAL,CAAaD,UAA9B;;IACA,IAAIA,UAAU,GAAG,CAAjB,EAAoB;MAChB,IAAI2H,SAAS,GAAG,KAAK3B,iBAAL,CAAuBhB,KAAvB,CAAhB;MACA,IAAIkB,IAAI,GAAGyB,SAAS,CAACzB,IAArB;MACA,IAAIE,IAAI,GAAGuB,SAAS,CAACvB,IAArB;;MACA,IAAI7F,IAAI,CAACC,GAAL,CAASH,MAAM,CAACI,CAAP,GAAWyF,IAAI,CAACzF,CAAzB,IAA8BT,UAAlC,EAA8C;QAC1CK,MAAM,CAACI,CAAP,GAAWyF,IAAI,CAACzF,CAAhB;MACH,CAFD,MAEO,IAAIF,IAAI,CAACC,GAAL,CAASH,MAAM,CAACI,CAAP,GAAW2F,IAAI,CAAC3F,CAAzB,IAA8BT,UAAlC,EAA8C;QACjDK,MAAM,CAACI,CAAP,GAAW2F,IAAI,CAAC3F,CAAhB;MACH;;MACD,IAAIF,IAAI,CAACC,GAAL,CAASH,MAAM,CAACK,CAAP,GAAWwF,IAAI,CAACxF,CAAzB,IAA8BV,UAAlC,EAA8C;QAC1CK,MAAM,CAACK,CAAP,GAAWiH,SAAS,CAACzB,IAAV,CAAexF,CAA1B;MACH,CAFD,MAEO,IAAIH,IAAI,CAACC,GAAL,CAASH,MAAM,CAACK,CAAP,GAAW0F,IAAI,CAAC1F,CAAzB,IAA8BV,UAAlC,EAA8C;QACjDK,MAAM,CAACK,CAAP,GAAW0F,IAAI,CAAC1F,CAAhB;MACH;IACJ;EACJ,CA9J0B;EA+J3BqF,cAAc,EAAE,UAAShB,MAAT,EAAiBpC,GAAjB,EAAsB;IAClC,IAAIqC,KAAK,GAAGD,MAAM,CAAC9E,OAAP,CAAe+E,KAA3B;IACA,IAAIiB,QAAQ,GAAG,KAAKnG,WAApB;IACAmG,QAAQ,CAACvG,KAAT,CAAekI,YAAf,CAA4B5C,KAA5B,EAAmC;MAAE0B,EAAE,EAAE;IAAN,CAAnC;IACA,IAAI,KAAKzG,OAAL,CAAa2D,YAAjB,EAA+B,KAAKM,UAAL;IAC/B+B,QAAQ,CAACyB,eAAT,CAAyB5I,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAzB;EACH,CArK0B;EAsK3BmF,iBAAiB,EAAE,UAASnF,GAAT,EAAc;IAC7B,IAAI,KAAKC,KAAL,CAAWD,GAAX,CAAJ,EAAqB;IACrBA,GAAG,CAACE,eAAJ;IACAF,GAAG,CAACG,cAAJ;IACA,IAAIiE,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAtB;IACA,IAAItC,MAAM,GAAG,KAAKZ,KAAL,CAAWsI,UAAX,CAAsBhB,eAAe,CAACiB,OAAtC,EAA+CjB,eAAe,CAACkB,OAA/D,EAAwEC,MAAxE,EAAb;IACA,IAAIpI,WAAW,GAAG,KAAKA,WAAvB;IACAA,WAAW,CAACJ,KAAZ,CAAkB+G,UAAlB,CAA6B,YAA7B,EAA2C;MAAEC,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAA3C;IACA,IAAI5B,KAAK,GAAGlF,WAAW,CAACqI,cAAZ,CAA2B9H,MAAM,CAACI,CAAlC,EAAqCJ,MAAM,CAACK,CAA5C,CAAZ;IACA,KAAKsG,UAAL,CAAgB3G,MAAhB,EAAwB2E,KAAxB;IACAlF,WAAW,CAACJ,KAAZ,CAAkB0I,YAAlB,CAA+BpD,KAA/B,EAAsC3E,MAAtC,EAA8C;MAAEqG,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAA9C;IACA,KAAKvC,MAAL;IACA,IAAIU,MAAM,GAAG,KAAKhB,OAAL,CAAaiB,KAAb,CAAb;IACA,KAAKsC,SAAL,CAAeP,eAAf,EAAgC;MAAEQ,WAAW,EAAE;IAAf,CAAhC;IACAxC,MAAM,CAACrC,aAAP,CAAqBqE,eAArB;EACH,CArL0B;EAsL3BsB,QAAQ,EAAE,YAAW;IACjB,KAAKlE,YAAL;EACH;AAxL0B,CAAhB,EAyLZ;EACChD,YAAY,EAAEA,YADf,CAC4B;;AAD5B,CAzLY,CAAf;AA6LA,IAAImH,aAAa,GAAGtJ,GAAG,CAACoC,IAAJ,CAASC,MAAT,CAAgB;EAChCC,OAAO,EAAE,GADuB;EAEhCC,UAAU,EAAE,IAFoB;EAGhCC,SAAS,EAAE,gBAHqB;EAIhCC,MAAM,EAAE;IACJC,SAAS,EAAE,eADP;IAEJC,UAAU,EAAE;EAFR,CAJwB;EAQhCG,cAAc,EAAE;IACZC,SAAS,EAAE,eADC;IAEZC,SAAS,EAAE,eAFC;IAGZC,OAAO,EAAE,aAHG;IAIZC,QAAQ,EAAE,aAJE;IAKZC,WAAW,EAAE;EALD,CARgB;EAehC0B,QAAQ,EAAE,CAAC;IACPvC,OAAO,EAAE,MADF;IAEPwC,QAAQ,EAAE,MAFH;IAGP1B,UAAU,EAAE;MACR,UAAU,SADF;MAER,gBAAgB,CAFR;MAGR,QAAQ,MAHA;MAIR,kBAAkB;IAJV;EAHL,CAAD,EASP;IACCd,OAAO,EAAE,MADV;IAECwC,QAAQ,EAAE,QAFX;IAGC1B,UAAU,EAAE;MACR,SAAS,EADD;MAER,UAAU,CAFF;MAGR,KAAK,CAAC,EAHE;MAIR,KAAK,CAAC,CAJE;MAKR,MAAM,CALE;MAMR,MAAM,CANE;MAOR,QAAQ,SAPA;MAQR,UAAU,SARF;MASR,gBAAgB;IATR;EAHb,CATO,CAfsB;EAuChC4B,QAAQ,EAAE,YAAW;IACjB,KAAKC,cAAL;EACH,CAzC+B;EA0ChC5B,QAAQ,EAAE,UAAS5B,CAAT,EAAYC,CAAZ,EAAe6H,KAAf,EAAsBnJ,IAAtB,EAA4B;IAElC,IAAIoJ,MAAM,GAAG3J,CAAC,CAAC4J,eAAF,GAAoBC,SAApB,CAA8BjI,CAA9B,EAAiCC,CAAjC,EAAoCiI,MAApC,CAA2CJ,KAA3C,CAAb;IACA,IAAIxD,MAAM,GAAG,KAAKQ,UAAL,CAAgBR,MAA7B;IACAA,MAAM,CAACS,YAAP,CAAoB,WAApB,EAAiC3G,CAAC,CAAC+J,uBAAF,CAA0BJ,MAA1B,CAAjC;IACAzD,MAAM,CAACS,YAAP,CAAoB,QAApB,EAA+B+C,KAAK,GAAG,GAAR,KAAgB,CAAjB,GAAsB,YAAtB,GAAqC,YAAnE;IAEA,IAAIM,SAAS,GAAGzJ,IAAI,CAAC0J,eAAL,CAAqB,IAAIlK,CAAC,CAAC0H,KAAN,CAAY7F,CAAZ,EAAeC,CAAf,CAArB,CAAhB;IACA,IAAIqI,IAAI,GAAG,KAAKxD,UAAL,CAAgBwD,IAA3B;IACAA,IAAI,CAACvD,YAAL,CAAkB,IAAlB,EAAwB/E,CAAxB;IACAsI,IAAI,CAACvD,YAAL,CAAkB,IAAlB,EAAwB9E,CAAxB;IACAqI,IAAI,CAACvD,YAAL,CAAkB,IAAlB,EAAwBqD,SAAS,CAACpI,CAAlC;IACAsI,IAAI,CAACvD,YAAL,CAAkB,IAAlB,EAAwBqD,SAAS,CAACnI,CAAlC;EACH,CAvD+B;EAwDhCgC,aAAa,EAAE,UAASC,GAAT,EAAc;IACzB,IAAI,KAAK1C,OAAL,CAAa2C,KAAb,CAAmBD,GAAnB,CAAJ,EAA6B;IAC7B,KAAKO,OAAL,CAAa,cAAb,EAA6B,IAA7B,EAAmCP,GAAnC;IACAA,GAAG,CAACE,eAAJ;IACAF,GAAG,CAACG,cAAJ;IACA,KAAK7C,OAAL,CAAaR,KAAb,CAAmBsD,gBAAnB;IACA,KAAKC,sBAAL,CAA4B,IAA5B,EAAkCL,GAAG,CAACM,IAAtC;EACH,CA/D+B;EAgEhCE,aAAa,EAAE,UAASR,GAAT,EAAc;IACzB,KAAKO,OAAL,CAAa,UAAb,EAAyB,IAAzB,EAA+BP,GAA/B;EACH,CAlE+B;EAmEhCU,WAAW,EAAE,UAASV,GAAT,EAAc;IACvB,KAAKW,wBAAL;IACA,KAAKrD,OAAL,CAAaR,KAAb,CAAmB8D,cAAnB;IACA,KAAKL,OAAL,CAAa,YAAb,EAA2B,IAA3B,EAAiCP,GAAjC;EACH,CAvE+B;EAwEhCqG,IAAI,EAAE,YAAW;IACb,KAAK9H,EAAL,CAAQ+H,KAAR,CAAcC,OAAd,GAAwB,EAAxB;EACH,CA1E+B;EA2EhCC,IAAI,EAAE,YAAW;IACb,KAAKjI,EAAL,CAAQ+H,KAAR,CAAcC,OAAd,GAAwB,MAAxB;EACH;AA7E+B,CAAhB,CAApB;AAgFA,IAAIE,QAAQ,GAAGnK,QAAQ,CAACoC,MAAT,CAAgB;EAC3BoC,IAAI,EAAE,UADqB;EAE3B4F,SAAS,EAAE,EAFgB;EAG3BpJ,OAAO,EAAE;IACLyD,WAAW,EAAE4E,aADR;IAELgB,sBAAsB,EAAE,EAFnB;IAGL3F,iBAAiB,EAAE,IAHd;IAILhE,MAAM,EAAET,SAJH;IAKLc,UAAU,EAAE,EALP;IAMLuJ,UAAU,EAAE,IANP;IAOL1G,eAAe,EAAE;EAPZ,CAHkB;EAY3BkB,OAAO,EAAE,IAZkB;EAa3BC,QAAQ,EAAE,YAAW;IACjB,KAAKG,YAAL;IACA,IAAIrE,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAIwE,QAAQ,GAAGxE,WAAW,CAACJ,KAAZ,CAAkB4E,QAAlB,EAAf;IACAA,QAAQ,CAACkF,OAAT,CAAiB1J,WAAW,CAAC2J,WAA7B;IACAnF,QAAQ,CAACc,IAAT,CAActF,WAAW,CAAC4J,WAA1B;;IACA,KAAK,IAAI9E,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGP,QAAQ,CAACC,MAA7B,EAAqCK,CAAC,GAAGC,CAAC,GAAG,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjD,IAAIvE,MAAM,GAAGiE,QAAQ,CAACM,CAAD,CAArB;MACA,IAAI+E,UAAU,GAAGrF,QAAQ,CAACM,CAAC,GAAG,CAAL,CAAzB;MACA,IAAIG,MAAM,GAAG,KAAK6E,YAAL,CAAkBvJ,MAAlB,EAA0BsJ,UAA1B,CAAb;MACA,KAAKzE,mBAAL,CAAyBH,MAAM,CAAC7D,EAAhC;MACA,KAAK6C,OAAL,CAAaqB,IAAb,CAAkBL,MAAlB;MACAA,MAAM,CAAC9E,OAAP,CAAe+E,KAAf,GAAuBJ,CAAvB;IACH;;IACD,OAAO,IAAP;EACH,CA5B0B;EA6B3BgF,YAAY,EAAE,UAASvJ,MAAT,EAAiBsJ,UAAjB,EAA6B;IACvC,IAAI5E,MAAM,GAAG,IAAK,KAAK9E,OAAL,CAAayD,WAAlB,CAA+B;MACxCjE,KAAK,EAAE,KAAKA,KAD4B;MAExCmD,KAAK,EAAED,GAAG,IAAI,KAAKC,KAAL,CAAWD,GAAX;IAF0B,CAA/B,CAAb;IAIAoC,MAAM,CAACE,MAAP;IACA,KAAK4E,YAAL,CAAkB9E,MAAlB,EAA0B1E,MAA1B,EAAkCsJ,UAAlC;IACA5E,MAAM,CAACzC,GAAP,CAAW6C,QAAX,CAAoB,KAAKjE,EAAzB;IACA,KAAKmE,oBAAL,CAA0BN,MAA1B;IACA,OAAOA,MAAP;EACH,CAvC0B;EAwC3BV,MAAM,EAAE,YAAW;IACf,KAAKY,MAAL;IACA,OAAO,IAAP;EACH,CA3C0B;EA4C3BI,oBAAoB,EAAE,UAASN,MAAT,EAAiB;IACnC,KAAKY,QAAL,CAAcZ,MAAd,EAAsB,cAAtB,EAAsC,KAAK+E,mBAA3C;IACA,KAAKnE,QAAL,CAAcZ,MAAd,EAAsB,UAAtB,EAAkC,KAAKc,gBAAvC;IACA,KAAKF,QAAL,CAAcZ,MAAd,EAAsB,YAAtB,EAAoC,KAAKgF,iBAAzC;EACH,CAhD0B;EAiD3B5F,YAAY,EAAE,YAAW;IACrB,IAAIJ,OAAO,GAAG,KAAKA,OAAnB;IACA,KAAKA,OAAL,GAAe,EAAf;IACA,KAAKU,aAAL;IACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcZ,OAAd,CAAL,EAA6B;;IAC7B,KAAK,IAAIa,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGd,OAAO,CAACQ,MAA5B,EAAoCK,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAgD;MAC5Cb,OAAO,CAACa,CAAD,CAAP,CAAWE,MAAX;IACH;EACJ,CAzD0B;EA0D3BkF,kBAAkB,EAAE,UAASC,KAAT,EAAgB;IAChC,IAAIlG,OAAO,GAAG,KAAKA,OAAnB;;IACA,KAAK,IAAIa,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGd,OAAO,CAACQ,MAA5B,EAAoCK,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAgDb,OAAO,CAACa,CAAD,CAAP,CAAW3E,OAAX,CAAmB+E,KAAnB,IAA4BiF,KAA5B;EACnD,CA7D0B;EA8D3BC,WAAW,EAAE,UAASrK,IAAT,EAAeF,MAAf,EAAuB;IAChC,IAAIwK,YAAY,GAAG,KAAKrK,WAAL,CAAiBJ,KAApC;;IACA,IAAIC,MAAJ,EAAY;MACRwK,YAAY,CAACC,IAAb,CAAkB,CAACvK,IAAD,EAAO,QAAP,CAAlB,EAAoCF,MAApC,EAA4C;QACxC0K,OAAO,EAAE,IAD+B;QAExC3D,EAAE,EAAE,IAFoC;QAGxCC,IAAI,EAAE,KAAKC;MAH6B,CAA5C;IAKH,CAND,MAMO;MACHuD,YAAY,CAACG,UAAb,CAAwB,CAACzK,IAAD,EAAO,QAAP,CAAxB,EAA0C;QACtC6G,EAAE,EAAE,IADkC;QAEtCC,IAAI,EAAE,KAAKC;MAF2B,CAA1C;IAIH;EACJ,CA5E0B;EA6E3B2C,UAAU,EAAE,UAASxE,MAAT,EAAiB1C,QAAjB,EAA2BY,IAA3B,EAAiC;IAEzC,IAAI+B,KAAK,GAAGD,MAAM,CAAC9E,OAAP,CAAe+E,KAA3B;IACA,IAAIiB,QAAQ,GAAG,KAAKnG,WAApB;IACA,IAAIyK,IAAI,GAAGtE,QAAQ,CAACvG,KAApB;IACA,IAAI4E,QAAQ,GAAGiG,IAAI,CAACjG,QAAL,EAAf;IACA,IAAIkG,IAAI,GAAGzF,MAAM,CAAC9E,OAAP,CAAeuK,IAA1B;IACA,IAAItE,IAAI,GAAG5B,QAAQ,CAACU,KAAK,GAAG,CAAT,CAAR,IAAuB/B,IAAI,CAACkD,YAAvC;IACA,IAAIC,IAAI,GAAG9B,QAAQ,CAACU,KAAK,GAAG,CAAT,CAAR,IAAuB/B,IAAI,CAACoD,YAAvC;IACA,IAAIrG,UAAU,GAAG,KAAKC,OAAL,CAAaD,UAA9B;;IACA,IAAIO,IAAI,CAACC,GAAL,CAAS6B,QAAQ,CAACmI,IAAD,CAAR,GAAiBtE,IAAI,CAACsE,IAAD,CAA9B,IAAwCxK,UAA5C,EAAwD;MACpDqC,QAAQ,CAACmI,IAAD,CAAR,GAAiBtE,IAAI,CAACsE,IAAD,CAArB;IACH,CAFD,MAEO,IAAIjK,IAAI,CAACC,GAAL,CAAS6B,QAAQ,CAACmI,IAAD,CAAR,GAAiBpE,IAAI,CAACoE,IAAD,CAA9B,IAAwCxK,UAA5C,EAAwD;MAC3DqC,QAAQ,CAACmI,IAAD,CAAR,GAAiBpE,IAAI,CAACoE,IAAD,CAArB;IACH;;IACD,OAAOnI,QAAP;EACH,CA7F0B;EA+F3BwD,gBAAgB,EAAE,UAASd,MAAT,EAAiBpC,GAAjB,EAAsB;IAEpC,MAAM;MAAE1C;IAAF,IAAc,IAApB;IACA,IAAIgD,IAAI,GAAG,KAAKqE,SAAL,CAAe3E,GAAf,CAAX;IACA,IAAI7C,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAIL,KAAK,GAAGK,WAAW,CAACL,KAAxB;IACA,IAAIuF,KAAK,GAAGD,MAAM,CAAC9E,OAAP,CAAe+E,KAAf,GAAuB,CAAnC;IACA,IAAI+B,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAtB;IACA,IAAIxD,MAAM,GAAGM,KAAK,CAACsI,UAAN,CAAiBhB,eAAe,CAACiB,OAAjC,EAA0CjB,eAAe,CAACkB,OAA1D,CAAb;IACA,IAAI5F,QAAQ,GAAG,KAAKkH,UAAL,CAAgBxE,MAAhB,EAAwB5F,MAAM,CAACsL,KAAP,EAAxB,EAAwCxH,IAAxC,CAAf;IACA,IAAIuH,IAAI,GAAGzF,MAAM,CAAC9E,OAAP,CAAeuK,IAA1B;IACA,IAAIE,MAAM,GAAI,KAAKzK,OAAL,CAAasJ,UAAd,GAA4B,CAA5B,GAAiCpK,MAAM,CAACqL,IAAD,CAAN,GAAenI,QAAQ,CAACmI,IAAD,CAArE;IACA,IAAID,IAAI,GAAGzK,WAAW,CAACJ,KAAvB;IACA,IAAI4E,QAAQ,GAAGxF,IAAI,CAAC6L,SAAL,CAAeJ,IAAI,CAACjG,QAAL,EAAf,CAAf;IACA,IAAIjE,MAAM,GAAGiE,QAAQ,CAACU,KAAD,CAArB;IACA,IAAI2E,UAAU,GAAGrF,QAAQ,CAACU,KAAK,GAAG,CAAT,CAAzB;IACA,IAAI4F,QAAQ,GAAG,KAAK3K,OAAL,CAAaN,MAA5B;IACA,IAAI,OAAOiL,QAAP,KAAoB,UAAxB,EAAoCA,QAAQ,GAAG,IAAX,CAjBA,CAmBpC;;IACA,IAAIC,UAAU,GAAG/K,WAAW,CAAC+K,UAA7B;IACA,IAAIC,UAAU,GAAGhL,WAAW,CAACgL,UAA7B;IACA,IAAIC,kBAAkB,GAAG,KAAzB;IACA,IAAIC,kBAAkB,GAAG,KAAzB;;IACA,IAAI,CAAC3K,MAAL,EAAa;MACTA,MAAM,GAAGP,WAAW,CAACqG,YAAZ,CAAyB+B,MAAzB,EAAT;MACA7H,MAAM,CAACmK,IAAD,CAAN,GAAenI,QAAQ,CAACmI,IAAD,CAAvB;;MACA,IAAIM,UAAU,CAACG,aAAX,CAAyB5K,MAAzB,CAAJ,EAAsC;QAClCA,MAAM,CAACmK,IAAD,CAAN,GAAenI,QAAQ,CAACmI,IAAD,CAAvB;QACAO,kBAAkB,GAAG,IAArB;MACH,CAHD,MAGO;QACH;QACAzG,QAAQ,CAACkF,OAAT,CAAiBnJ,MAAjB;QACA,KAAK2J,kBAAL,CAAwB,CAAxB;QACAgB,kBAAkB,GAAG,IAArB;MACH;IACJ,CAZD,MAYO,IAAIhG,KAAK,KAAK,CAAd,EAAiB;MACpB,IAAI8F,UAAU,CAACG,aAAX,CAAyB5K,MAAzB,CAAJ,EAAsC;QAClCiE,QAAQ,CAAC4G,KAAT;QACA,KAAKlB,kBAAL,CAAwB,CAAC,CAAzB;QACAe,kBAAkB,GAAG,IAArB;MACH,CAJD,MAIO;QACH1K,MAAM,CAACmK,IAAD,CAAN,GAAenI,QAAQ,CAACmI,IAAD,CAAvB;QACAQ,kBAAkB,GAAG,IAArB;MACH;IACJ,CATM,MASA;MACH3K,MAAM,CAACmK,IAAD,CAAN,GAAenI,QAAQ,CAACmI,IAAD,CAAvB;IACH;;IAED,IAAII,QAAQ,IAAIC,UAAhB,EAA4B;MACxB,IAAIE,kBAAJ,EAAwB;QACpB,IAAII,oBAAoB,GAAGlI,IAAI,CAACkD,YAAL,CAAkBsE,KAAlB,EAA3B;QACAU,oBAAoB,CAACX,IAAD,CAApB,GAA6BnI,QAAQ,CAACmI,IAAD,CAArC;QACA,IAAIrE,YAAY,GAAGyE,QAAQ,CAACpL,IAAT,CAAcM,WAAd,EAA2BqL,oBAA3B,EAAiDN,UAAjD,EAA6D/K,WAAW,CAACsL,YAAZ,IAA4BP,UAAU,CAAC3J,EAApG,EAAwG,QAAxG,EAAkHpB,WAAlH,CAAnB;QACA,KAAKoK,WAAL,CAAiB,QAAjB,EAA2B/D,YAA3B;MACH;;MACD,IAAI6E,kBAAJ,EAAwB;QACpB,KAAKd,WAAL,CAAiB,QAAjB,EAA2BjH,IAAI,CAACoI,eAAhC;MACH;IACJ,CA3DmC,CA6DpC;;;IACA,IAAIC,UAAU,GAAGxL,WAAW,CAACwL,UAA7B;IACA,IAAIC,UAAU,GAAGzL,WAAW,CAACyL,UAA7B;IACA,IAAIC,kBAAkB,GAAG,KAAzB;IACA,IAAIC,kBAAkB,GAAG,KAAzB;;IACA,IAAI,CAAC9B,UAAL,EAAiB;MACbA,UAAU,GAAG7J,WAAW,CAACuG,YAAZ,CAAyB6B,MAAzB,EAAb;MACAyB,UAAU,CAACa,IAAD,CAAV,GAAmBnI,QAAQ,CAACmI,IAAD,CAA3B;;MACA,IAAIe,UAAU,CAACN,aAAX,CAAyBtB,UAAzB,CAAJ,EAA0C;QACtC6B,kBAAkB,GAAG,IAArB;MACH,CAFD,MAEO;QACH;QACAlH,QAAQ,CAACc,IAAT,CAAcuE,UAAd;QACA8B,kBAAkB,GAAG,IAArB;MACH;IACJ,CAVD,MAUO,IAAIzG,KAAK,KAAKV,QAAQ,CAACC,MAAT,GAAkB,CAAhC,EAAmC;MACtC,IAAIgH,UAAU,CAACN,aAAX,CAAyBtB,UAAzB,CAAJ,EAA0C;QACtCrF,QAAQ,CAACoH,GAAT;QACAF,kBAAkB,GAAG,IAArB;MACH,CAHD,MAGO;QACH7B,UAAU,CAACa,IAAD,CAAV,GAAmBnI,QAAQ,CAACmI,IAAD,CAA3B;QACAiB,kBAAkB,GAAG,IAArB;MACH;IACJ,CARM,MAQA;MACH9B,UAAU,CAACa,IAAD,CAAV,GAAmBnI,QAAQ,CAACmI,IAAD,CAA3B;IACH;;IAED,IAAII,QAAQ,IAAIU,UAAhB,EAA4B;MACxB,IAAIE,kBAAJ,EAAwB;QACpB,IAAIG,oBAAoB,GAAG1I,IAAI,CAACoD,YAAL,CAAkBoE,KAAlB,EAA3B;QACAkB,oBAAoB,CAACnB,IAAD,CAApB,GAA6BnI,QAAQ,CAACmI,IAAD,CAArC;QACA,IAAInE,YAAY,GAAGuE,QAAQ,CAACpL,IAAT,CAAcM,WAAd,EAA2B6L,oBAA3B,EAAiDL,UAAjD,EAA6DxL,WAAW,CAAC8L,YAAZ,IAA4BN,UAAU,CAACpK,EAApG,EAAwG,QAAxG,EAAkHpB,WAAlH,CAAnB;QACA,KAAKoK,WAAL,CAAiB,QAAjB,EAA2B7D,YAA3B;MACH;;MACD,IAAIoF,kBAAJ,EAAwB;QACpB,KAAKvB,WAAL,CAAiB,QAAjB,EAA2BjH,IAAI,CAAC4I,eAAhC;MACH;IACJ;;IAEDtB,IAAI,CAACjG,QAAL,CAAcA,QAAd,EAAwB;MAAEoC,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAxB;IACA,KAAKiD,YAAL,CAAkB9E,MAAlB,EAA0B1E,MAA1B,EAAkCsJ,UAAlC,EAA8Ce,MAA9C;IACA,IAAI,CAACzK,OAAO,CAAC4C,eAAb,EAA8B/C,WAAW,CAACmH,iBAAZ,CAA8BF,eAA9B,EAA+C5H,MAAM,CAACsB,CAAtD,EAAyDtB,MAAM,CAACuB,CAAhE;EACjC,CAtM0B;EAuM3BoJ,mBAAmB,EAAE,UAAS/E,MAAT,EAAiBpC,GAAjB,EAAsB;IACvC,MAAM;MAAE1C,OAAF;MAAW8D,OAAX;MAAoBjE,WAAW,EAAEmG;IAAjC,IAA8C,IAApD;IACA,MAAM;MAAEvG,KAAF;MAASD;IAAT,IAAmBwG,QAAzB;IACA,IAAIjB,KAAK,GAAGD,MAAM,CAAC9E,OAAP,CAAe+E,KAA3B;IACA,IAAI,CAACN,KAAK,CAACC,OAAN,CAAcZ,OAAd,CAAL,EAA6B;;IAC7B,KAAK,IAAIa,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGd,OAAO,CAACQ,MAA5B,EAAoCK,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAgD;MAC5C,IAAIA,CAAC,KAAKI,KAAV,EAAiBjB,OAAO,CAACa,CAAD,CAAP,CAAWuE,IAAX;IACpB;;IACD,KAAK3C,KAAL;IACA,KAAKc,SAAL,CAAe3E,GAAf,EAAoB;MAChBwD,YAAY,EAAEF,QAAQ,CAACE,YAAT,CAAsBsE,KAAtB,EADE;MAEhBpE,YAAY,EAAEJ,QAAQ,CAACI,YAAT,CAAsBoE,KAAtB,EAFE;MAGhBY,eAAe,EAAEvM,IAAI,CAAC2L,KAAL,CAAW/K,KAAK,CAAC0K,IAAN,CAAW,CAAC,QAAD,EAAW,QAAX,CAAX,CAAX,CAHD;MAIhByB,eAAe,EAAE/M,IAAI,CAAC2L,KAAL,CAAW/K,KAAK,CAAC0K,IAAN,CAAW,CAAC,QAAD,EAAW,QAAX,CAAX,CAAX;IAJD,CAApB;IAMA1K,KAAK,CAAC+G,UAAN,CAAiB,cAAjB,EAAiC;MAAEC,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAjC;IACA,IAAI,CAAC3G,OAAO,CAAC4C,eAAb,EAA8BoD,QAAQ,CAACY,iBAAT,CAA2B,GAAGpH,KAAK,CAACqH,cAAN,CAAqBnE,GAArB,CAA9B;EACjC,CAxN0B;EAyN3BoH,iBAAiB,EAAE,UAASxD,OAAT,EAAkB5D,GAAlB,EAAuB;IACtC,MAAM;MAAE1C,OAAF;MAAWH,WAAW,EAAEmG;IAAxB,IAAoC,IAA1C;IACA,MAAM;MAAExG,KAAF;MAASC;IAAT,IAAmBuG,QAAzB;;IACA,IAAIhG,OAAO,CAAC0D,iBAAZ,EAA+B;MAC3BsC,QAAQ,CAACkB,6BAAT,CAAuC;QAAET,EAAE,EAAE,IAAN;QAAYC,IAAI,EAAE,KAAKC;MAAvB,CAAvC;IACH;;IACD,MAAMG,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAxB;IACA,MAAMxD,MAAM,GAAGM,KAAK,CAACsI,UAAN,CAAiBhB,eAAe,CAACiB,OAAjC,EAA0CjB,eAAe,CAACkB,OAA1D,CAAf;IACA,KAAKhD,MAAL;IACA,KAAKmC,IAAL;IACA1H,KAAK,CAAC2H,SAAN,CAAgB,cAAhB,EAAgC;MAAEX,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAhC;IACA,IAAI,CAAC3G,OAAO,CAAC4C,eAAb,EAA8BoD,QAAQ,CAACwB,eAAT,CAAyBV,eAAzB,EAA0C5H,MAAM,CAACsB,CAAjD,EAAoDtB,MAAM,CAACuB,CAA3D;IAC9BuF,QAAQ,CAACyB,eAAT,CAAyBX,eAAzB;EACH,CAtO0B;EAuO3B8C,YAAY,EAAE,UAAS9E,MAAT,EAAiB1E,MAAjB,EAAyBsJ,UAAzB,EAAqCe,MAArC,EAA6C;IACvD,IAAIoB,QAAQ,GAAGvL,IAAI,CAACC,GAAL,CAASH,MAAM,CAACI,CAAP,GAAWkJ,UAAU,CAAClJ,CAA/B,IAAoC,KAAK4I,SAAxD;IACA,IAAI0C,UAAU,GAAGxL,IAAI,CAACC,GAAL,CAASH,MAAM,CAACK,CAAP,GAAWiJ,UAAU,CAACjJ,CAA/B,IAAoC,KAAK2I,SAA1D;;IACA,IAAIyC,QAAQ,IAAIC,UAAhB,EAA4B;MACxB,IAAIC,WAAW,GAAG,IAAIpN,CAAC,CAACqN,IAAN,CAAW5L,MAAX,EAAmBsJ,UAAnB,CAAlB;MACA,IAAIpF,MAAM,GAAGyH,WAAW,CAACzH,MAAZ,EAAb;;MACA,IAAIA,MAAM,GAAG,KAAKtE,OAAL,CAAaqJ,sBAA1B,EAAkD;QAC9CvE,MAAM,CAACoE,IAAP;MACH,CAFD,MAEO;QACH,IAAI9G,QAAQ,GAAG2J,WAAW,CAACE,QAAZ,EAAf;QACA,IAAI1B,IAAI,GAAIsB,QAAD,GAAa,GAAb,GAAmB,GAA9B;QACAzJ,QAAQ,CAACmI,IAAD,CAAR,IAAkBE,MAAM,IAAI,CAA5B;QACA,IAAInC,KAAK,GAAGyD,WAAW,CAACG,MAAZ,GAAqBC,WAArB,CAAiC,IAAIxN,CAAC,CAAC0H,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAjC,CAAZ;QACAvB,MAAM,CAAC1C,QAAP,CAAgBA,QAAQ,CAAC5B,CAAzB,EAA4B4B,QAAQ,CAAC3B,CAArC,EAAwC6H,KAAxC,EAA+C,KAAKzI,WAApD;QACAiF,MAAM,CAACiE,IAAP;QACAjE,MAAM,CAAC9E,OAAP,CAAeuK,IAAf,GAAsBA,IAAtB;MACH;IACJ,CAdD,MAcO;MACHzF,MAAM,CAACoE,IAAP;IACH;EACJ,CA3P0B;EA4P3Bd,QAAQ,EAAE,YAAW;IACjB,KAAKlE,YAAL;EACH;AA9P0B,CAAhB,EA+PZ;EACCmE,aAAa,EAAEA,aADhB,CAC8B;;AAD9B,CA/PY,CAAf,C,CAmQA;;AACA,IAAI+D,SAAS,GAAGpN,QAAQ,CAACoC,MAAT,CAAgB;EAC5BC,OAAO,EAAE,MADmB;EAE5BgL,WAAW,EAAE,IAAI1N,CAAC,CAAC0H,KAAN,CAAY,CAAZ,EAAe,CAAf,CAFe;EAG5B7E,MAAM,EAAE;IACJC,SAAS,EAAE,eADP;IAEJC,UAAU,EAAE;EAFR,CAHoB;EAO5BG,cAAc,EAAE;IACZC,SAAS,EAAE,eADC;IAEZC,SAAS,EAAE,eAFC;IAGZC,OAAO,EAAE,aAHG;IAIZC,QAAQ,EAAE,aAJE;IAKZC,WAAW,EAAE;EALD,CAPY;EAc5B6B,QAAQ,EAAE,YAAW;IACjB,KAAKK,MAAL;EACH,CAhB2B;EAiB5BA,MAAM,EAAE,YAAW;IACf,IAAIkI,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAInN,IAAI,GAAG,KAAKU,WAAhB;IACA,IAAI0M,OAAO,GAAGpN,IAAI,CAACqN,iBAAL,CAAuBF,KAAvB,CAAd;IACA,IAAIlK,QAAJ,EAAckG,KAAd;;IACA,IAAIiE,OAAJ,EAAa;MACTnK,QAAQ,GAAGmK,OAAO,CAACE,KAAnB;MACAnE,KAAK,GAAGiE,OAAO,CAACL,MAAR,GAAiBC,WAAjB,CAA6B,KAAKE,WAAlC,KAAkD,CAA1D;IACH,CAHD,MAGO;MACHjK,QAAQ,GAAGjD,IAAI,CAACuN,eAAL,CAAqBJ,KAArB,CAAX;MACAhE,KAAK,GAAG,CAAR;IACH;;IACD,IAAI,CAAClG,QAAL,EAAe,OAAO,IAAP;IACf,IAAImG,MAAM,GAAG3J,CAAC,CAAC4J,eAAF,GAAoBC,SAApB,CAA8BrG,QAAQ,CAAC5B,CAAvC,EAA0C4B,QAAQ,CAAC3B,CAAnD,EAAsDiI,MAAtD,CAA6DJ,KAA7D,CAAb;IACA,KAAKjG,GAAL,CAASsK,SAAT,CAAmBpE,MAAnB,EAA2B;MAAEqE,QAAQ,EAAE;IAAZ,CAA3B;IACA,OAAO,IAAP;EACH,CAjC2B;EAkC5BnK,aAAa,EAAE,UAASC,GAAT,EAAc;IACzB,IAAI,KAAKC,KAAL,CAAWD,GAAX,CAAJ,EAAqB;IACrBA,GAAG,CAACE,eAAJ;IACAF,GAAG,CAACG,cAAJ;IACA,IAAIhD,WAAW,GAAG,KAAKA,WAAvB;IACAA,WAAW,CAACJ,KAAZ,CAAkB+G,UAAlB,CAA6B,gBAA7B,EAA+C;MAAEC,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAA/C;;IACA,IAAI9G,WAAW,CAAC4F,GAAZ,CAAgB,eAAhB,CAAJ,EAAsC;MAClC5F,WAAW,CAACgN,kBAAZ,CAA+B,KAAKC,aAApC;MACA,KAAK/J,sBAAL;MACAlD,WAAW,CAACL,KAAZ,CAAkBsD,gBAAlB;IACH;;IACD,KAAKyD,KAAL;IACA,KAAKtF,EAAL,CAAQ+H,KAAR,CAAc+D,aAAd,GAA8B,MAA9B;EACH,CA/C2B;EAgD5B7J,aAAa,EAAE,UAASR,GAAT,EAAc;IACzB,IAAIoE,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAtB;IACA,IAAIxD,MAAM,GAAG,KAAKM,KAAL,CAAWsI,UAAX,CAAsBhB,eAAe,CAACiB,OAAtC,EAA+CjB,eAAe,CAACkB,OAA/D,CAAb;IACA,KAAKnI,WAAL,CAAiBmN,WAAjB,CAA6BlG,eAA7B,EAA8C5H,MAAM,CAACsB,CAArD,EAAwDtB,MAAM,CAACuB,CAA/D;EACH,CApD2B;EAqD5B2C,WAAW,EAAE,UAASV,GAAT,EAAc;IACvB,KAAKW,wBAAL;IACA,IAAIxD,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAIL,KAAK,GAAGK,WAAW,CAACL,KAAxB;IACA,IAAIsH,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAtB;IACA,IAAIxD,MAAM,GAAGM,KAAK,CAACsI,UAAN,CAAiBhB,eAAe,CAACiB,OAAjC,EAA0CjB,eAAe,CAACkB,OAA1D,CAAb;IACAnI,WAAW,CAACoN,SAAZ,CAAsBnG,eAAtB,EAAuC5H,MAAM,CAACsB,CAA9C,EAAiDtB,MAAM,CAACuB,CAAxD;IACAjB,KAAK,CAAC8D,cAAN;IACA,KAAK6D,IAAL;IACA,KAAKlG,EAAL,CAAQ+H,KAAR,CAAc+D,aAAd,GAA8B,EAA9B;IACAlN,WAAW,CAACJ,KAAZ,CAAkB2H,SAAlB,CAA4B,gBAA5B,EAA8C;MAAEX,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAA9C;EACH;AAhE2B,CAAhB,CAAhB;AAmEA,IAAIuG,eAAe,GAAGd,SAAS,CAAChL,MAAV,CAAiB;EACnCoC,IAAI,EAAE,kBAD6B;EAEnC8I,KAAK,EAAE,CAF4B;EAGnCQ,aAAa,EAAE,QAHoB;EAInC3K,UAAU,EAAE;IACR,KAAK,uBADG;IAER,QAAQ,SAFA;IAGR,UAAU,SAHF;IAIR,gBAAgB,CAJR;IAKR,UAAU,MALF;IAMR,SAAS;EAND;AAJuB,CAAjB,CAAtB;AAcA,IAAIgL,eAAe,GAAGf,SAAS,CAAChL,MAAV,CAAiB;EACnCoC,IAAI,EAAE,kBAD6B;EAEnC8I,KAAK,EAAE,CAF4B;EAGnCQ,aAAa,EAAE,QAHoB;EAInC3K,UAAU,EAAE;IACR,KAAK,sBADG;IAER,QAAQ,SAFA;IAGR,UAAU,SAHF;IAIR,gBAAgB,CAJR;IAKR,UAAU,MALF;IAMR,SAAS;EAND;AAJuB,CAAjB,CAAtB;AAcA,IAAIiL,MAAM,GAAGpO,QAAQ,CAACoC,MAAT,CAAgB;EACzBoC,IAAI,EAAE,QADmB;EAEzBhC,MAAM,EAAE;IACJ,aAAa,eADT;IAEJ,cAAc;EAFV,CAFiB;EAMzBxB,OAAO,EAAE;IACLqN,QAAQ,EAAE,CADL;IAEL5C,MAAM,EAAE,CAFH;IAGL/B,MAAM,EAAE;EAHH,CANgB;EAWzB3E,QAAQ,EAAE,YAAW;IACjB,KAAKC,cAAL,CAAoB,KAAKhE,OAAL,CAAasN,MAAjC;IACA,KAAKlJ,MAAL;EACH,CAdwB;EAezBA,MAAM,EAAE,YAAW;IACf,KAAKhC,QAAL;IACA,OAAO,IAAP;EACH,CAlBwB;EAmBzBA,QAAQ,EAAE,YAAW;IACjB,MAAM;MAAEvC,WAAW,EAAEV,IAAf;MAAqBkD;IAArB,IAA6B,IAAnC;IACA,MAAMkG,MAAM,GAAGpJ,IAAI,CAACM,KAAL,CAAWoB,MAAX,KAAsB,KAAK0M,aAAL,EAAtB,GAA6C,KAAKC,gBAAL,EAA5D;IACAnL,GAAG,CAACsK,SAAJ,CAAcpE,MAAd,EAAsB;MAAEqE,QAAQ,EAAE;IAAZ,CAAtB;EACH,CAvBwB;;EAwBzBY,gBAAgB,GAAG;IACf,MAAM;MAAE3N,WAAW,EAAEV,IAAf;MAAqBa;IAArB,IAAiC,IAAvC;IACA,IAAI;MAAEQ,CAAC,GAAG,CAAN;MAASC,CAAC,GAAG,CAAb;MAAgBgK,MAAM,GAAG,EAAzB;MAA6B9J,gBAA7B;MAA+C+H;IAA/C,IAA0D1I,OAA9D;IACA,IAAIe,IAAI,GAAGL,WAAW,CAACvB,IAAD,EAAOwB,gBAAP,CAAtB;IACA,MAAM2H,KAAK,GAAGnJ,IAAI,CAACM,KAAL,CAAW6I,KAAX,EAAd;IACA,IAAI,CAACI,MAAL,EAAa3H,IAAI,GAAGA,IAAI,CAACA,IAAL,CAAUuH,KAAV,CAAP;IACb,MAAM;MAAE9H,CAAC,EAAEiN,OAAO,GAAG,CAAf;MAAkBhN,CAAC,EAAEiN,OAAO,GAAG;IAA/B,IAAqCjD,MAA3C;;IACA,IAAI5L,IAAI,CAAC8O,YAAL,CAAkBnN,CAAlB,CAAJ,EAA0B;MACtBA,CAAC,GAAGoN,UAAU,CAACpN,CAAD,CAAV,GAAgB,GAAhB,GAAsBO,IAAI,CAAC8M,KAA/B;IACH;;IACD,IAAIhP,IAAI,CAAC8O,YAAL,CAAkBlN,CAAlB,CAAJ,EAA0B;MACtBA,CAAC,GAAGmN,UAAU,CAACnN,CAAD,CAAV,GAAgB,GAAhB,GAAsBM,IAAI,CAAC+M,MAA/B;IACH;;IACD,IAAIvF,MAAM,GAAG3J,CAAC,CAAC4J,eAAF,GAAoBC,SAApB,CAA8B1H,IAAI,CAACP,CAAL,GAASO,IAAI,CAAC8M,KAAL,GAAa,CAApD,EAAuD9M,IAAI,CAACN,CAAL,GAASM,IAAI,CAAC+M,MAAL,GAAc,CAA9E,CAAb;IACA,IAAIpF,MAAJ,EAAYH,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAcJ,KAAd,CAAT;IACZC,MAAM,GAAGA,MAAM,CAACE,SAAP,CAAiBjI,CAAC,GAAGiN,OAAJ,GAAc1M,IAAI,CAAC8M,KAAL,GAAa,CAA5C,EAA+CpN,CAAC,GAAGiN,OAAJ,GAAc3M,IAAI,CAAC+M,MAAL,GAAc,CAA3E,CAAT;IACA,OAAOvF,MAAP;EACH,CAzCwB;;EA0CzBgF,aAAa,GAAG;IACZ,MAAM;MAAE1N,WAAW,EAAEV,IAAf;MAAqBa;IAArB,IAAiC,IAAvC;IACA,MAAM;MAAEyK,MAAM,GAAG,CAAX;MAAc4C,QAAQ,GAAG,CAAzB;MAA4B3E;IAA5B,IAAuC1I,OAA7C;IACA,IAAIuM,OAAJ,EAAanK,QAAb,EAAuBkG,KAAvB;;IACA,IAAIzJ,IAAI,CAAC8O,YAAL,CAAkBN,QAAlB,CAAJ,EAAiC;MAC7Bd,OAAO,GAAGpN,IAAI,CAACqN,iBAAL,CAAuBoB,UAAU,CAACP,QAAD,CAAV,GAAuB,GAA9C,CAAV;IACH,CAFD,MAEO;MACHd,OAAO,GAAGpN,IAAI,CAAC4O,kBAAL,CAAwBV,QAAxB,CAAV;IACH;;IACD,IAAId,OAAJ,EAAa;MACTnK,QAAQ,GAAGmK,OAAO,CAACE,KAAnB;MACAnE,KAAK,GAAGiE,OAAO,CAACL,MAAR,GAAiBC,WAAjB,CAA6B,IAAIxN,CAAC,CAAC0H,KAAN,CAAY,CAAZ,EAAe,CAAf,CAA7B,KAAmD,CAA3D;IACH,CAHD,MAGO;MACHjE,QAAQ,GAAGjD,IAAI,CAAC2B,aAAL,GAAqB2L,KAAhC;MACAnE,KAAK,GAAG,CAAR;IACH;;IACD,IAAIC,MAAM,GAAG3J,CAAC,CAAC4J,eAAF,GACRC,SADQ,CACErG,QAAQ,CAAC5B,CADX,EACc4B,QAAQ,CAAC3B,CADvB,EAERiI,MAFQ,CAEDJ,KAFC,EAGRG,SAHQ,CAGE,CAHF,EAGKgC,MAHL,CAAb;IAIA,IAAI,CAAC/B,MAAL,EAAaH,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAc,CAACJ,KAAf,CAAT;IACb,OAAOC,MAAP;EACH,CAhEwB;;EAiEzB9F,aAAa,EAAE,UAASC,GAAT,EAAc;IACzB,IAAI,KAAKC,KAAL,CAAWD,GAAX,CAAJ,EAAqB;IACrBA,GAAG,CAACE,eAAJ;IACAF,GAAG,CAACG,cAAJ;IACA,IAAImL,QAAQ,GAAG,KAAKhO,OAAL,CAAaiO,MAA5B;;IACA,IAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;MAChCA,QAAQ,CAACzO,IAAT,CAAc,KAAKM,WAAnB,EAAgC6C,GAAhC,EAAqC,KAAK7C,WAA1C,EAAuD,IAAvD;IACH;EACJ;AAzEwB,CAAhB,CAAb;AA6EA,IAAIqO,MAAM,GAAGd,MAAM,CAAChM,MAAP,CAAc;EACvBwC,QAAQ,EAAE,CAAC;IACPvC,OAAO,EAAE,QADF;IAEPwC,QAAQ,EAAE,QAFH;IAGP1B,UAAU,EAAE;MACR,KAAK,CADG;MAER,QAAQ,SAFA;MAGR,UAAU;IAHF;EAHL,CAAD,EAQP;IACCd,OAAO,EAAE,MADV;IAECwC,QAAQ,EAAE,MAFX;IAGC1B,UAAU,EAAE;MACR,KAAK,yBADG;MAER,QAAQ,MAFA;MAGR,UAAU,SAHF;MAIR,gBAAgB,CAJR;MAKR,kBAAkB;IALV;EAHb,CARO,CADa;EAoBvBnC,OAAO,EAAE;IACLqN,QAAQ,EAAE,EADL;IAEL5C,MAAM,EAAE,CAFH;IAGLwD,MAAM,EAAE,UAASvL,GAAT,EAAcvD,IAAd,EAAoBuH,IAApB,EAA0B;MAC9BvH,IAAI,CAACM,KAAL,CAAWoF,MAAX,CAAkB;QAAE4B,EAAE,EAAE,IAAN;QAAYC,IAAI,EAAEA,IAAI,CAACC;MAAvB,CAAlB;IACH;EALI;AApBc,CAAd,CAAb;AA6BA,MAAMwH,OAAO,GAAGf,MAAM,CAAChM,MAAP,CAAc;EAC1BoC,IAAI,EAAE,SADoB;EAE1B3B,cAAc,EAAE;IACZC,SAAS,EAAE,MADC;IAEZC,SAAS,EAAE,MAFC;IAGZC,OAAO,EAAE,SAHG;IAIZC,QAAQ,EAAE,SAJE;IAKZC,WAAW,EAAE;EALD,CAFU;EAS1B0B,QAAQ,EAAE,CAAC;IACPvC,OAAO,EAAE,QADF;IAEPwC,QAAQ,EAAE,QAFH;IAGP1B,UAAU,EAAE;MACR,KAAK,CADG;MAER,QAAQ,SAFA;MAGR,UAAU;IAHF;EAHL,CAAD,EAQP;IACCd,OAAO,EAAE,MADV;IAECwC,QAAQ,EAAE,MAFX;IAGC1B,UAAU,EAAE;MACR,KAAK,8CADG;MAER,QAAQ,SAFA;MAGR,UAAU,MAHF;MAIR,gBAAgB,CAJR;MAKR,kBAAkB;IALV;EAHb,CARO,CATgB;EA4B1BnC,OAAO,EAAE;IACLqN,QAAQ,EAAE,EADL;IAEL5C,MAAM,EAAE,CAFH;IAGLrL,MAAM,EAAGD,IAAD,IAAUA,IAAI,CAAC8B,EAHlB;IAILgN,MAAM,EAAE,CAACvL,GAAD,EAAM0L,KAAN,EAAa1H,IAAb,KAAsBA,IAAI,CAAC2H,SAAL,CAAe3L,GAAf;EAJzB,CA5BiB;EAkC1B4L,aAAa,EAAE,YAAW;IACtB,MAAM;MAAEtO,OAAF;MAAWH;IAAX,IAA2B,IAAjC;IACA,MAAM;MAAET;IAAF,IAAaY,OAAnB;IACA,IAAIuO,UAAJ;;IACA,QAAQ,OAAOnP,MAAf;MACI,KAAK,UAAL;QAAiB;UACbmP,UAAU,GAAGnP,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBM,WAAlB,EAA+B,IAA/B,CAAb;UACA;QACH;;MACD,KAAK,QAAL;QAAe;UACX,CAAC0O,UAAD,IAAe1O,WAAW,CAAC2O,cAAZ,CAA2BpP,MAA3B,CAAf;UACA;QACH;;MACD;QAAS;UACLmP,UAAU,GAAGnP,MAAb;UACA;QACH;IAZL;;IAcA,IAAI,CAACmP,UAAL,EAAiBA,UAAU,GAAG1O,WAAW,CAACoB,EAAzB;IACjB,IAAIsN,UAAU,YAAYE,UAA1B,EAAsC,OAAOF,UAAP;IACtC,MAAM,IAAIG,KAAJ,CAAU,uCAAV,CAAN;EACH,CAvDyB;EAwD1BL,SAAS,EAAE,UAAS3L,GAAT,EAAc;IACrB,MAAM;MAAElD,KAAF;MAASK;IAAT,IAAyB,IAA/B;IACA,MAAMiH,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAxB;IACA,MAAM;MAAElC,CAAF;MAAKC;IAAL,IAAWjB,KAAK,CAACmP,kBAAN,CAAyB7H,eAAe,CAACiB,OAAzC,EAAkDjB,eAAe,CAACkB,OAAlE,CAAjB;IACAnI,WAAW,CAAC+O,aAAZ,CAA0B9H,eAA1B,EAA2C,KAAKwH,aAAL,EAA3C,EAAiE9N,CAAjE,EAAoEC,CAApE;IACAjB,KAAK,CAACsD,gBAAN;IACA,KAAKC,sBAAL,CAA4B,IAA5B,EAAkCL,GAAG,CAACM,IAAtC;IACA,KAAKuD,KAAL;EACH,CAhEyB;EAiE1BsI,IAAI,EAAE,UAASnM,GAAT,EAAc;IAChB,MAAM;MAAElD,KAAF;MAASK;IAAT,IAAyB,IAA/B;IACA,MAAMiH,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAxB;IACA,MAAM;MAAElC,CAAF;MAAKC;IAAL,IAAWjB,KAAK,CAACsI,UAAN,CAAiBhB,eAAe,CAACiB,OAAjC,EAA0CjB,eAAe,CAACkB,OAA1D,CAAjB;IACAnI,WAAW,CAACiP,QAAZ,CAAqBhI,eAArB,EAAsCtG,CAAtC,EAAyCC,CAAzC;EACH,CAtEyB;EAuE1BsO,OAAO,EAAE,UAASrM,GAAT,EAAc;IACnB,MAAM;MAAElD,KAAF;MAASK;IAAT,IAAyB,IAA/B;IACA,MAAMiH,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAxB;IACA,MAAM;MAAElC,CAAF;MAAKC;IAAL,IAAWjB,KAAK,CAACsI,UAAN,CAAiBhB,eAAe,CAACiB,OAAjC,EAA0CjB,eAAe,CAACkB,OAA1D,CAAjB;IACAnI,WAAW,CAACmP,WAAZ,CAAwBlI,eAAxB,EAAyCtG,CAAzC,EAA4CC,CAA5C;IACA,KAAK4C,wBAAL;IACA7D,KAAK,CAAC8D,cAAN;IACA,KAAK6D,IAAL;IACAtH,WAAW,CAAC4H,eAAZ,CAA4BX,eAA5B;EACH;AAhFyB,CAAd,CAAhB;AAoFA,IAAImI,QAAQ,GAAGjQ,QAAQ,CAACoC,MAAT,CAAgB;EAC3BoC,IAAI,EAAE,UADqB;EAE3BnC,OAAO,EAAE,MAFkB;EAG3BrB,OAAO,EAAE;IACLkP,OAAO,EAAE,EADJ;IAELvO,gBAAgB,EAAE;EAFb,CAHkB;EAO3BwB,UAAU,EAAE;IACR,QAAQ,MADA;IAER,UAAU,SAFF;IAGR,gBAAgB,EAHR;IAIR,oBAAoB,MAJZ;IAKR,kBAAkB;EALV,CAPe;EAc3B4B,QAAQ,EAAE,YAAW;IACjB,KAAKK,MAAL;EACH,CAhB0B;EAiB3BA,MAAM,EAAE,YAAW;IACf,MAAM;MAAEvE,WAAW,EAAEV,IAAf;MAAqBa,OAArB;MAA8BqC;IAA9B,IAAsC,IAA5C;IACA,MAAM;MAAE1B,gBAAF;MAAoB+H;IAApB,IAA+B1I,OAArC;IACA,MAAMkP,OAAO,GAAGrQ,IAAI,CAACsQ,cAAL,CAAoBnP,OAAO,CAACkP,OAA5B,CAAhB;IACA,IAAInO,IAAI,GAAGL,WAAW,CAACvB,IAAD,EAAOwB,gBAAP,CAAX,CAAoCyO,aAApC,CAAkD;MACzD5O,CAAC,EAAE,CAAC0O,OAAO,CAACG,IAD6C;MAEzD5O,CAAC,EAAE,CAACyO,OAAO,CAACI,GAF6C;MAGzDzB,KAAK,EAAEqB,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACK,KAH2B;MAIzDzB,MAAM,EAAEoB,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACM;IAJ2B,CAAlD,CAAX;IAMA,IAAI/P,KAAK,GAAGN,IAAI,CAACM,KAAjB;;IACA,IAAIA,KAAK,CAACgQ,SAAN,EAAJ,EAAuB;MACnB,IAAInH,KAAK,GAAG7I,KAAK,CAAC6I,KAAN,EAAZ;;MACA,IAAIA,KAAJ,EAAW;QACP,IAAII,MAAJ,EAAY;UACR,IAAIgH,MAAM,GAAGjQ,KAAK,CAACmB,OAAN,GAAgB+O,MAAhB,EAAb;UACAtN,GAAG,CAACqG,MAAJ,CAAWJ,KAAX,EAAkBoH,MAAM,CAAClP,CAAzB,EAA4BkP,MAAM,CAACjP,CAAnC,EAAsC;YAAEmM,QAAQ,EAAE;UAAZ,CAAtC;QACH,CAHD,MAGO;UACH7L,IAAI,GAAGA,IAAI,CAACA,IAAL,CAAUuH,KAAV,CAAP;QACH;MACJ;IACJ;;IACDjG,GAAG,CAACC,IAAJ,CAASvB,IAAI,CAACkH,MAAL,EAAT;IACA,OAAO,IAAP;EACH;AAzC0B,CAAhB,CAAf;AA4CA,IAAI2H,MAAM,GAAG5Q,QAAQ,CAACoC,MAAT,CAAgB;EACzBC,OAAO,EAAE,GADgB;EAEzBzB,IAAI,EAAE,IAFmB;EAGzBgE,QAAQ,EAAE,CAAC;IACPvC,OAAO,EAAE,QADF;IAEPwC,QAAQ,EAAE,QAFH;IAGP1B,UAAU,EAAE;MACR,UAAU;IADF;EAHL,CAAD,EAMP;IACCd,OAAO,EAAE,MADV;IAECwC,QAAQ,EAAE,MAFX;IAGC1B,UAAU,EAAE;MACR,kBAAkB,MADV;MAER,QAAQ,MAFA;MAGR,UAAU,SAHF;MAIR,oBAAoB,KAJZ;MAKR,MAAM,CALE;MAMR,MAAM;IANE;EAHb,CANO,CAHe;EAqBzBX,MAAM,EAAE;IACJC,SAAS,EAAE,eADP;IAEJC,UAAU,EAAE,eAFR;IAGJC,QAAQ,EAAE,mBAHN;IAIJC,MAAM,EAAE;EAJJ,CArBiB;EA2BzBC,cAAc,EAAE;IACZC,SAAS,EAAE,eADC;IAEZC,SAAS,EAAE,eAFC;IAGZC,OAAO,EAAE,aAHG;IAIZC,QAAQ,EAAE,aAJE;IAKZC,WAAW,EAAE;EALD,CA3BS;EAkCzBlC,OAAO,EAAE;IACL6P,IAAI,EAAElQ,UADD;IAELD,MAAM,EAAET,SAFH;IAGLgL,WAAW,EAAE,IAHR;IAIL6F,sBAAsB,EAAE;MACpB,gBAAgB,CADI;MAEpB,UAAU,SAFU;MAGpB,QAAQ,SAHY;MAIpB,KAAK;IAJe,CAJnB;IAULC,uBAAuB,EAAE;MACrB,gBAAgB,CADK;MAErB,UAAU,SAFW;MAGrB,QAAQ,SAHa;MAIrB,KAAK;IAJgB,CAVpB;IAgBLC,WAAW,EAAE,CAhBR;IAiBLjQ,UAAU,EAAE,EAjBP;IAkBLkQ,YAAY,EAAE,IAlBT;IAmBLvM,iBAAiB,EAAE;EAnBd,CAlCgB;EAuDzBK,QAAQ,EAAE,YAAW;IACjB,KAAKC,cAAL;IACA,KAAKkM,UAAL,CAAgB,KAAhB;IACA,KAAK9L,MAAL;EACH,CA3DwB;EA4DzBA,MAAM,EAAE,YAAW;IACf,IAAIxE,IAAI,GAAG,KAAKA,IAAhB;IACA,IAAIC,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAIV,IAAI,GAAGU,WAAW,CAACsQ,UAAZ,CAAuBvQ,IAAvB,CAAX;;IACA,IAAIT,IAAJ,EAAU;MACN,KAAKiR,YAAL;MACA,KAAKC,UAAL;MACA,KAAKpP,EAAL,CAAQ+H,KAAR,CAAcC,OAAd,GAAwB,EAAxB;IACH,CAJD,MAIO;MACH,KAAKhI,EAAL,CAAQ+H,KAAR,CAAcC,OAAd,GAAwB,MAAxB;IACH;;IACD,OAAO,IAAP;EACH,CAxEwB;EAyEzBmH,YAAY,EAAE,YAAW;IACrB,IAAI9K,UAAU,GAAG,KAAKA,UAAtB;IACA,IAAI,CAACA,UAAL,EAAiB;IACjB,IAAIgL,UAAU,GAAGhL,UAAU,CAAC5F,MAA5B;IACA,IAAI,CAAC4Q,UAAL,EAAiB;IACjB,IAAIzQ,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAID,IAAI,GAAG,KAAKA,IAAhB;IACA,IAAIwC,QAAQ,GAAGvC,WAAW,CAACQ,YAAZ,CAAyBT,IAAzB,CAAf;IACA,IAAII,OAAO,GAAG,KAAKA,OAAnB;IACA,IAAIuQ,YAAY,GAAG1Q,WAAW,CAACJ,KAAZ,CAAkB0K,IAAlB,CAAuB,CAACvK,IAAD,EAAO,QAAP,CAAvB,CAAnB;IACA0Q,UAAU,CAAC/K,YAAX,CAAwB,WAAxB,EAAqC,eAAenD,QAAQ,CAAC5B,CAAxB,GAA4B,GAA5B,GAAkC4B,QAAQ,CAAC3B,CAA3C,GAA+C,GAApF;IACA,IAAI+P,gBAAgB,GAAID,YAAD,GAAiBvQ,OAAO,CAAC8P,sBAAzB,GAAkD9P,OAAO,CAAC+P,uBAAjF;;IACA,KAAK,IAAIU,QAAT,IAAqBD,gBAArB,EAAuC;MACnCF,UAAU,CAAC/K,YAAX,CAAwBkL,QAAxB,EAAkCD,gBAAgB,CAACC,QAAD,CAAlD;IACH;EACJ,CAxFwB;EAyFzBJ,UAAU,EAAE,YAAW;IACnB,IAAI/K,UAAU,GAAG,KAAKA,UAAtB;IACA,IAAI,CAACA,UAAL,EAAiB;IACjB,IAAIoL,QAAQ,GAAGpL,UAAU,CAACqL,IAA1B;IACA,IAAI,CAACD,QAAL,EAAe;IACf,IAAI7Q,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAID,IAAI,GAAG,KAAKA,IAAhB;IACA,IAAIT,IAAI,GAAGU,WAAW,CAACsQ,UAAZ,CAAuBvQ,IAAvB,CAAX;IACA,IAAIH,KAAK,GAAGN,IAAI,CAACM,KAAjB;IACA,IAAIL,MAAM,GAAGS,WAAW,CAAC+Q,YAAZ,CAAyBhR,IAAzB,CAAb;IACA,IAAIsP,OAAO,GAAG,KAAKlP,OAAL,CAAagQ,WAA3B;IACA,IAAI,CAACa,QAAQ,CAAC3B,OAAD,CAAb,EAAwBA,OAAO,GAAG,CAAV;IACxB,IAAInO,IAAJ,EAAUuH,KAAV,EAAiBqH,MAAjB;;IACA,IAAIxQ,IAAI,CAAC2R,gBAAL,CAAsB1R,MAAtB,CAAJ,EAAmC;MAC/B2B,IAAI,GAAG5B,IAAI,CAACyB,OAAL,EAAP;MACA0H,KAAK,GAAG,CAAR;MACAqH,MAAM,GAAG5O,IAAI,CAAC4O,MAAL,EAAT;IACH,CAJD,MAIO;MACH5O,IAAI,GAAG5B,IAAI,CAAC6B,oBAAL,CAA0B5B,MAA1B,CAAP;MACAkJ,KAAK,GAAG7I,KAAK,CAAC6I,KAAN,EAAR;MACAqH,MAAM,GAAG5O,IAAI,CAAC4O,MAAL,EAAT;MACA,IAAIrH,KAAJ,EAAWqH,MAAM,CAACjH,MAAP,CAAcjJ,KAAK,CAACmB,OAAN,GAAgB+O,MAAhB,EAAd,EAAwC,CAACrH,KAAzC,EAJR,CAKH;IACH;;IACDvH,IAAI,CAACgQ,OAAL,CAAa7B,OAAb;IACAwB,QAAQ,CAACnL,YAAT,CAAsB,GAAtB,EAA2B,CAACxE,IAAI,CAAC8M,KAAN,GAAc,CAAzC;IACA6C,QAAQ,CAACnL,YAAT,CAAsB,GAAtB,EAA2B,CAACxE,IAAI,CAAC+M,MAAN,GAAe,CAA1C;IACA4C,QAAQ,CAACnL,YAAT,CAAsB,OAAtB,EAA+BxE,IAAI,CAAC8M,KAApC;IACA6C,QAAQ,CAACnL,YAAT,CAAsB,QAAtB,EAAgCxE,IAAI,CAAC+M,MAArC;IACA4C,QAAQ,CAACnL,YAAT,CAAsB,WAAtB,EAAmC,eAAeoK,MAAM,CAACnP,CAAtB,GAA0B,GAA1B,GAAgCmP,MAAM,CAAClP,CAAvC,GAA2C,WAA3C,GAAyD6H,KAAzD,GAAiE,GAApG;EACH,CAvHwB;EAwHzB4H,UAAU,EAAE,UAASc,OAAT,EAAkB;IAC1B,KAAK1L,UAAL,CAAgBqL,IAAhB,CAAqB3H,KAArB,CAA2BC,OAA3B,GAAsC+H,OAAD,GAAY,EAAZ,GAAiB,MAAtD;EACH,CA1HwB;EA2HzBvO,aAAa,EAAE,UAASC,GAAT,EAAc;IACzB,IAAI,KAAKC,KAAL,CAAWD,GAAX,CAAJ,EAAqB;IACrBA,GAAG,CAACE,eAAJ;IACAF,GAAG,CAACG,cAAJ;IACA,KAAKrD,KAAL,CAAWsD,gBAAX;IACA,KAAKC,sBAAL;IACA,KAAKwD,KAAL;IACA,KAAK2J,UAAL,CAAgB,KAAKlQ,OAAL,CAAaiQ,YAA7B;IACA,KAAKpQ,WAAL,CAAiBJ,KAAjB,CAAuB+G,UAAvB,CAAkC,aAAlC,EAAiD;MAAEC,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAjD;EACH,CApIwB;EAqIzBsD,WAAW,EAAE,UAASvK,MAAT,EAAiB;IAC1B,IAAIE,IAAI,GAAG,KAAKA,IAAhB;IACA,IAAIsK,YAAY,GAAG,KAAKrK,WAAL,CAAiBJ,KAApC;;IACA,IAAIC,MAAJ,EAAY;MACRwK,YAAY,CAACC,IAAb,CAAkB,CAACvK,IAAD,EAAO,QAAP,CAAlB,EAAoCF,MAApC,EAA4C;QACxC0K,OAAO,EAAE,IAD+B;QAExC3D,EAAE,EAAE,IAFoC;QAGxCC,IAAI,EAAE,KAAKC;MAH6B,CAA5C;IAKH,CAND,MAMO;MACHuD,YAAY,CAACG,UAAb,CAAwB,CAACzK,IAAD,EAAO,QAAP,CAAxB,EAA0C;QACtC6G,EAAE,EAAE,IADkC;QAEtCC,IAAI,EAAE,KAAKC;MAF2B,CAA1C;IAIH;EACJ,CApJwB;EAqJzBzD,aAAa,EAAE,UAASR,GAAT,EAAc;IAEzB,IAAI7C,WAAW,GAAG,KAAKA,WAAvB;IACA,IAAID,IAAI,GAAG,KAAKA,IAAhB;IACA,IAAIT,IAAI,GAAGU,WAAW,CAACsQ,UAAZ,CAAuBvQ,IAAvB,CAAX;IACA,IAAIH,KAAK,GAAGN,IAAI,CAACM,KAAjB;IACA,IAAIL,MAAM,GAAGS,WAAW,CAAC+Q,YAAZ,CAAyBhR,IAAzB,CAAb;IACA,IAAIkH,eAAe,GAAGjI,IAAI,CAAC+I,cAAL,CAAoBlF,GAApB,CAAtB;IACA,IAAIxD,MAAM,GAAG,KAAKM,KAAL,CAAWmP,kBAAX,CAA8B7H,eAAe,CAACiB,OAA9C,EAAuDjB,eAAe,CAACkB,OAAvE,CAAb;IACA,IAAIiJ,MAAM,GAAG,KAAKjR,OAAL,CAAa6P,IAA1B;;IACA,IAAI,OAAOoB,MAAP,KAAkB,UAAtB,EAAkC;MAC9B/R,MAAM,GAAG+R,MAAM,CAAC1R,IAAP,CAAYM,WAAZ,EAAyBX,MAAzB,EAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CQ,IAA/C,EAAqDC,WAArD,EAAkE,IAAlE,CAAT;MACAX,MAAM,GAAG,IAAIP,CAAC,CAAC0H,KAAN,CAAYnH,MAAZ,CAAT;IACH;;IAED,IAAI,KAAKc,OAAL,CAAaiQ,YAAjB,EAA+B;MAC3B,IAAI9Q,IAAI,CAAC2R,gBAAL,CAAsB1R,MAAtB,CAAJ,EAAmC;QAC/B;QACA,IAAI8R,iBAAiB,GAAG/R,IAAI,CAAC0J,eAAL,CAAqB3J,MAArB,CAAxB;QACA,IAAIgS,iBAAJ,EAAuBhS,MAAM,GAAGgS,iBAAT;MAC1B,CAJD,MAIO;QACH;QACA,IAAInQ,IAAI,GAAG5B,IAAI,CAAC6B,oBAAL,CAA0B5B,MAA1B,CAAX;QACA,IAAIkJ,KAAK,GAAG7I,KAAK,CAAC6I,KAAN,EAAZ;QACA,IAAIoH,MAAM,GAAGjQ,KAAK,CAACmB,OAAN,GAAgB+O,MAAhB,EAAb;QACA,IAAIwB,aAAa,GAAGjS,MAAM,CAACsL,KAAP,GAAe9B,MAAf,CAAsBgH,MAAtB,EAA8BpH,KAA9B,CAApB;;QACA,IAAI,CAACvH,IAAI,CAACiK,aAAL,CAAmBmG,aAAnB,CAAL,EAAwC;UACpCjS,MAAM,GAAG6B,IAAI,CAACqQ,mBAAL,CAAyBD,aAAzB,EAAwCzI,MAAxC,CAA+CgH,MAA/C,EAAuD,CAACpH,KAAxD,CAAT;QACH;MACJ;IACJ;;IAED,IAAI5I,MAAJ;IACA,IAAIiL,QAAQ,GAAG,KAAK3K,OAAL,CAAaN,MAA5B;;IACA,IAAI,OAAOiL,QAAP,KAAoB,UAAxB,EAAoC;MAChCjL,MAAM,GAAGiL,QAAQ,CAACpL,IAAT,CAAcM,WAAd,EAA2BX,MAA3B,EAAmCC,IAAnC,EAAyCC,MAAzC,EAAiDQ,IAAjD,EAAuDC,WAAvD,CAAT;IACH;;IAED,KAAKoK,WAAL,CAAiBvK,MAAjB;IACA,KAAK0E,MAAL;EACH,CA7LwB;EA+LzBhB,WAAW,EAAE,UAASV,GAAT,EAAc;IACvB,KAAKlD,KAAL,CAAW8D,cAAX;IACA,KAAKD,wBAAL;IACA,KAAK8D,IAAL;IACA,KAAK+I,UAAL,CAAgB,KAAhB;IACA,IAAIlK,QAAQ,GAAG,KAAKnG,WAApB;IACA,IAAI,KAAKG,OAAL,CAAa0D,iBAAjB,EAAoCsC,QAAQ,CAACkB,6BAAT,CAAuC;MAAET,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAvC;IACpCX,QAAQ,CAACvG,KAAT,CAAe2H,SAAf,CAAyB,aAAzB,EAAwC;MAAEX,EAAE,EAAE,IAAN;MAAYC,IAAI,EAAE,KAAKC;IAAvB,CAAxC;EACH,CAvMwB;EAyMzB0K,iBAAiB,EAAE,YAAW;IAC1B,IAAI3R,MAAM,GAAG,KAAKM,OAAL,CAAaiK,WAA1B;IACA,IAAIvK,MAAM,KAAK,KAAf,EAAsB,OAFI,CAEI;;IAC9B,IAAIA,MAAM,KAAK,IAAf,EAAqBA,MAAM,GAAG,IAAT,CAHK,CAGU;;IACpC,KAAKuK,WAAL,CAAiBpL,IAAI,CAAC6L,SAAL,CAAehL,MAAf,CAAjB;IACA,KAAK0E,MAAL;EACH;AA/MwB,CAAhB,CAAb;AAkNA,IAAIkN,YAAY,GAAG1B,MAAM,CAACxO,MAAP,CAAc;EAC7BoC,IAAI,EAAE,eADuB;EAE7B5D,IAAI,EAAE;AAFuB,CAAd,CAAnB;AAKA,IAAI2R,YAAY,GAAG3B,MAAM,CAACxO,MAAP,CAAc;EAC7BoC,IAAI,EAAE,eADuB;EAE7B5D,IAAI,EAAE;AAFuB,CAAd,CAAnB;AAQA,SAAS2D,QAAT,EAAmB4F,QAAnB,EAA6BgE,eAA7B,EAA8CD,eAA9C,EAA+DoE,YAA/D,EAA6EC,YAA7E,EAA2FnE,MAA3F,EAAmGc,MAAnG,EAA2GC,OAA3G,EAAoHc,QAApH"},"metadata":{},"sourceType":"module"}