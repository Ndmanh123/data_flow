{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Vectorizer.\n// -----------\n// A tiny library for making your life easier when dealing with SVG.\n// The only Vectorizer dependency is the Geometry library.\nimport * as g from '../g/index.mjs';\n\nconst V = function () {\n  var hasSvg = typeof window === 'object' && !!(window.SVGAngle || document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')); // SVG support is required.\n\n  if (!hasSvg) {\n    // Return a function that throws an error when it is used.\n    return function () {\n      throw new Error('SVG is required to use Vectorizer.');\n    };\n  } // XML namespaces.\n\n\n  var ns = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xml: 'http://www.w3.org/XML/1998/namespace',\n    xlink: 'http://www.w3.org/1999/xlink',\n    xhtml: 'http://www.w3.org/1999/xhtml'\n  };\n  var SVGVersion = '1.1'; // Declare shorthands to the most used math functions.\n\n  var math = Math;\n  var PI = math.PI;\n  var atan2 = math.atan2;\n  var sqrt = math.sqrt;\n  var min = math.min;\n  var max = math.max;\n  var cos = math.cos;\n  var sin = math.sin;\n\n  var V = function (el, attrs, children) {\n    // This allows using V() without the new keyword.\n    if (!(this instanceof V)) {\n      return V.apply(Object.create(V.prototype), arguments);\n    }\n\n    if (!el) return;\n\n    if (V.isV(el)) {\n      el = el.node;\n    }\n\n    attrs = attrs || {};\n\n    if (V.isString(el)) {\n      el = el.trim();\n\n      if (el.toLowerCase() === 'svg') {\n        // Create a new SVG canvas.\n        el = V.createSvgDocument();\n      } else if (el[0] === '<') {\n        // Create element from an SVG string.\n        // Allows constructs of type: `document.appendChild(V('<rect></rect>').node)`.\n        var svgDoc = V.createSvgDocument(el); // Note that `V()` might also return an array should the SVG string passed as\n        // the first argument contain more than one root element.\n\n        if (svgDoc.childNodes.length > 1) {\n          // Map child nodes to `V`s.\n          var arrayOfVels = [];\n          var i, len;\n\n          for (i = 0, len = svgDoc.childNodes.length; i < len; i++) {\n            var childNode = svgDoc.childNodes[i];\n            arrayOfVels.push(new V(document.importNode(childNode, true)));\n          }\n\n          return arrayOfVels;\n        }\n\n        el = document.importNode(svgDoc.firstChild, true);\n      } else {\n        el = document.createElementNS(ns.svg, el);\n      }\n\n      V.ensureId(el);\n    }\n\n    this.node = el;\n    this.setAttributes(attrs);\n\n    if (children) {\n      this.append(children);\n    }\n\n    return this;\n  };\n\n  var VPrototype = V.prototype;\n  Object.defineProperty(VPrototype, 'id', {\n    enumerable: true,\n    get: function () {\n      return this.node.id;\n    },\n    set: function (id) {\n      this.node.id = id;\n    }\n  });\n  /**\n   * @param {SVGGElement} toElem\n   * @returns {SVGMatrix}\n   */\n\n  VPrototype.getTransformToElement = function (target) {\n    var node = this.node;\n\n    if (V.isSVGGraphicsElement(target) && V.isSVGGraphicsElement(node)) {\n      var targetCTM = V.toNode(target).getScreenCTM();\n      var nodeCTM = node.getScreenCTM();\n\n      if (targetCTM && nodeCTM) {\n        return targetCTM.inverse().multiply(nodeCTM);\n      }\n    } // Could not get actual transformation matrix\n\n\n    return V.createSVGMatrix();\n  };\n  /**\n   * @param {SVGMatrix} matrix\n   * @param {Object=} opt\n   * @returns {Vectorizer|SVGMatrix} Setter / Getter\n   */\n\n\n  VPrototype.transform = function (matrix, opt) {\n    var node = this.node;\n\n    if (V.isUndefined(matrix)) {\n      return V.transformStringToMatrix(this.attr('transform'));\n    }\n\n    if (opt && opt.absolute) {\n      return this.attr('transform', V.matrixToTransformString(matrix));\n    }\n\n    var svgTransform = V.createSVGTransform(matrix);\n    node.transform.baseVal.appendItem(svgTransform);\n    return this;\n  };\n\n  VPrototype.translate = function (tx, ty, opt) {\n    opt = opt || {};\n    ty = ty || 0;\n    var transformAttr = this.attr('transform') || '';\n    var transform = V.parseTransformString(transformAttr);\n    transformAttr = transform.value; // Is it a getter?\n\n    if (V.isUndefined(tx)) {\n      return transform.translate;\n    }\n\n    transformAttr = transformAttr.replace(/translate\\([^)]*\\)/g, '').trim();\n    var newTx = opt.absolute ? tx : transform.translate.tx + tx;\n    var newTy = opt.absolute ? ty : transform.translate.ty + ty;\n    var newTranslate = 'translate(' + newTx + ',' + newTy + ')'; // Note that `translate()` is always the first transformation. This is\n    // usually the desired case.\n\n    this.attr('transform', (newTranslate + ' ' + transformAttr).trim());\n    return this;\n  };\n\n  VPrototype.rotate = function (angle, cx, cy, opt) {\n    opt = opt || {};\n    var transformAttr = this.attr('transform') || '';\n    var transform = V.parseTransformString(transformAttr);\n    transformAttr = transform.value; // Is it a getter?\n\n    if (V.isUndefined(angle)) {\n      return transform.rotate;\n    }\n\n    transformAttr = transformAttr.replace(/rotate\\([^)]*\\)/g, '').trim();\n    angle %= 360;\n    var newAngle = opt.absolute ? angle : transform.rotate.angle + angle;\n    var newOrigin = cx !== undefined && cy !== undefined ? ',' + cx + ',' + cy : '';\n    var newRotate = 'rotate(' + newAngle + newOrigin + ')';\n    this.attr('transform', (transformAttr + ' ' + newRotate).trim());\n    return this;\n  }; // Note that `scale` as the only transformation does not combine with previous values.\n\n\n  VPrototype.scale = function (sx, sy) {\n    sy = V.isUndefined(sy) ? sx : sy;\n    var transformAttr = this.attr('transform') || '';\n    var transform = V.parseTransformString(transformAttr);\n    transformAttr = transform.value; // Is it a getter?\n\n    if (V.isUndefined(sx)) {\n      return transform.scale;\n    }\n\n    transformAttr = transformAttr.replace(/scale\\([^)]*\\)/g, '').trim();\n    var newScale = 'scale(' + sx + ',' + sy + ')';\n    this.attr('transform', (transformAttr + ' ' + newScale).trim());\n    return this;\n  }; // Get SVGRect that contains coordinates and dimension of the real bounding box,\n  // i.e. after transformations are applied.\n  // If `target` is specified, bounding box will be computed relatively to `target` element.\n\n\n  VPrototype.bbox = function (withoutTransformations, target) {\n    var box;\n    var node = this.node;\n    var ownerSVGElement = node.ownerSVGElement; // If the element is not in the live DOM, it does not have a bounding box defined and\n    // so fall back to 'zero' dimension element.\n\n    if (!ownerSVGElement) {\n      return new g.Rect(0, 0, 0, 0);\n    }\n\n    try {\n      box = node.getBBox();\n    } catch (e) {\n      // Fallback for IE.\n      box = {\n        x: node.clientLeft,\n        y: node.clientTop,\n        width: node.clientWidth,\n        height: node.clientHeight\n      };\n    }\n\n    if (withoutTransformations) {\n      return new g.Rect(box);\n    }\n\n    var matrix = this.getTransformToElement(target || ownerSVGElement);\n    return V.transformRect(box, matrix);\n  }; // Returns an SVGRect that contains coordinates and dimensions of the real bounding box,\n  // i.e. after transformations are applied.\n  // Fixes a browser implementation bug that returns incorrect bounding boxes for groups of svg elements.\n  // Takes an (Object) `opt` argument (optional) with the following attributes:\n  // (Object) `target` (optional): if not undefined, transform bounding boxes relative to `target`; if undefined, transform relative to this\n  // (Boolean) `recursive` (optional): if true, recursively enter all groups and get a union of element bounding boxes (svg bbox fix); if false or undefined, return result of native function this.node.getBBox();\n\n\n  VPrototype.getBBox = function (opt) {\n    var options = {};\n    var outputBBox;\n    var node = this.node;\n    var ownerSVGElement = node.ownerSVGElement; // If the element is not in the live DOM, it does not have a bounding box defined and\n    // so fall back to 'zero' dimension element.\n    // If the element is not an SVGGraphicsElement, we could not measure the bounding box either\n\n    if (!ownerSVGElement || !V.isSVGGraphicsElement(node)) {\n      return new g.Rect(0, 0, 0, 0);\n    }\n\n    if (opt) {\n      if (opt.target) {\n        // check if target exists\n        options.target = V.toNode(opt.target); // works for V objects, jquery objects, and node objects\n      }\n\n      if (opt.recursive) {\n        options.recursive = opt.recursive;\n      }\n    }\n\n    if (!options.recursive) {\n      try {\n        outputBBox = node.getBBox();\n      } catch (e) {\n        // Fallback for IE.\n        outputBBox = {\n          x: node.clientLeft,\n          y: node.clientTop,\n          width: node.clientWidth,\n          height: node.clientHeight\n        };\n      }\n\n      if (!options.target) {\n        // transform like this (that is, not at all)\n        return new g.Rect(outputBBox);\n      } else {\n        // transform like target\n        var matrix = this.getTransformToElement(options.target);\n        return V.transformRect(outputBBox, matrix);\n      }\n    } else {\n      // if we want to calculate the bbox recursively\n      // browsers report correct bbox around svg elements (one that envelops the path lines tightly)\n      // but some browsers fail to report the same bbox when the elements are in a group (returning a looser bbox that also includes control points, like node.getClientRect())\n      // this happens even if we wrap a single svg element into a group!\n      // this option setting makes the function recursively enter all the groups from this and deeper, get bboxes of the elements inside, then return a union of those bboxes\n      var children = this.children();\n      var n = children.length;\n\n      if (n === 0) {\n        return this.getBBox({\n          target: options.target,\n          recursive: false\n        });\n      } // recursion's initial pass-through setting:\n      // recursive passes-through just keep the target as whatever was set up here during the initial pass-through\n\n\n      if (!options.target) {\n        // transform children/descendants like this (their parent/ancestor)\n        options.target = this;\n      } // else transform children/descendants like target\n\n\n      for (var i = 0; i < n; i++) {\n        var currentChild = children[i];\n        var childBBox; // if currentChild is not a group element, get its bbox with a nonrecursive call\n\n        if (currentChild.children().length === 0) {\n          childBBox = currentChild.getBBox({\n            target: options.target,\n            recursive: false\n          });\n        } else {\n          // if currentChild is a group element (determined by checking the number of children), enter it with a recursive call\n          childBBox = currentChild.getBBox({\n            target: options.target,\n            recursive: true\n          });\n        }\n\n        if (!outputBBox) {\n          // if this is the first iteration\n          outputBBox = childBBox;\n        } else {\n          // make a new bounding box rectangle that contains this child's bounding box and previous bounding box\n          outputBBox = outputBBox.union(childBBox);\n        }\n      }\n\n      return outputBBox;\n    }\n  }; // Text() helpers\n\n\n  function createTextPathNode(attrs, vel) {\n    attrs || (attrs = {});\n    var textPathElement = V('textPath');\n    var d = attrs.d;\n\n    if (d && attrs['xlink:href'] === undefined) {\n      // If `opt.attrs` is a plain string, consider it to be directly the\n      // SVG path data for the text to go along (this is a shortcut).\n      // Otherwise if it is an object and contains the `d` property, then this is our path.\n      // Wrap the text in the SVG <textPath> element that points\n      // to a path defined by `opt.attrs` inside the `<defs>` element.\n      var linkedPath = V('path').attr('d', d).appendTo(vel.defs());\n      textPathElement.attr('xlink:href', '#' + linkedPath.id);\n    }\n\n    if (V.isObject(attrs)) {\n      // Set attributes on the `<textPath>`. The most important one\n      // is the `xlink:href` that points to our newly created `<path/>` element in `<defs/>`.\n      // Note that we also allow the following construct:\n      // `t.text('my text', { textPath: { 'xlink:href': '#my-other-path' } })`.\n      // In other words, one can completely skip the auto-creation of the path\n      // and use any other arbitrary path that is in the document.\n      textPathElement.attr(attrs);\n    }\n\n    return textPathElement.node;\n  }\n\n  function annotateTextLine(lineNode, lineAnnotations, opt) {\n    opt || (opt = {});\n    var includeAnnotationIndices = opt.includeAnnotationIndices;\n    var eol = opt.eol;\n    var lineHeight = opt.lineHeight;\n    var baseSize = opt.baseSize;\n    var maxFontSize = 0;\n    var fontMetrics = {};\n    var lastJ = lineAnnotations.length - 1;\n\n    for (var j = 0; j <= lastJ; j++) {\n      var annotation = lineAnnotations[j];\n      var fontSize = null;\n\n      if (V.isObject(annotation)) {\n        var annotationAttrs = annotation.attrs;\n        var vTSpan = V('tspan', annotationAttrs);\n        var tspanNode = vTSpan.node;\n        var t = annotation.t;\n        if (eol && j === lastJ) t += eol;\n        tspanNode.textContent = t; // Per annotation className\n\n        var annotationClass = annotationAttrs['class'];\n        if (annotationClass) vTSpan.addClass(annotationClass); // If `opt.includeAnnotationIndices` is `true`,\n        // set the list of indices of all the applied annotations\n        // in the `annotations` attribute. This list is a comma\n        // separated list of indices.\n\n        if (includeAnnotationIndices) vTSpan.attr('annotations', annotation.annotations); // Check for max font size\n\n        fontSize = parseFloat(annotationAttrs['font-size']);\n        if (!isFinite(fontSize)) fontSize = baseSize;\n        if (fontSize && fontSize > maxFontSize) maxFontSize = fontSize;\n      } else {\n        if (eol && j === lastJ) annotation += eol;\n        tspanNode = document.createTextNode(annotation || ' ');\n        if (baseSize && baseSize > maxFontSize) maxFontSize = baseSize;\n      }\n\n      lineNode.appendChild(tspanNode);\n    }\n\n    if (maxFontSize) fontMetrics.maxFontSize = maxFontSize;\n\n    if (lineHeight) {\n      fontMetrics.lineHeight = lineHeight;\n    } else if (maxFontSize) {\n      fontMetrics.lineHeight = maxFontSize * 1.2;\n    }\n\n    return fontMetrics;\n  }\n\n  var emRegex = /em$/;\n\n  function convertEmToPx(em, fontSize) {\n    var numerical = parseFloat(em);\n    if (emRegex.test(em)) return numerical * fontSize;\n    return numerical;\n  }\n\n  function calculateDY(alignment, linesMetrics, baseSizePx, lineHeight) {\n    if (!Array.isArray(linesMetrics)) return 0;\n    var n = linesMetrics.length;\n    if (!n) return 0;\n    var lineMetrics = linesMetrics[0];\n    var flMaxFont = convertEmToPx(lineMetrics.maxFontSize, baseSizePx) || baseSizePx;\n    var rLineHeights = 0;\n    var lineHeightPx = convertEmToPx(lineHeight, baseSizePx);\n\n    for (var i = 1; i < n; i++) {\n      lineMetrics = linesMetrics[i];\n      var iLineHeight = convertEmToPx(lineMetrics.lineHeight, baseSizePx) || lineHeightPx;\n      rLineHeights += iLineHeight;\n    }\n\n    var llMaxFont = convertEmToPx(lineMetrics.maxFontSize, baseSizePx) || baseSizePx;\n    var dy;\n\n    switch (alignment) {\n      case 'middle':\n        dy = flMaxFont / 2 - 0.15 * llMaxFont - rLineHeights / 2;\n        break;\n\n      case 'bottom':\n        dy = -(0.25 * llMaxFont) - rLineHeights;\n        break;\n\n      default:\n      case 'top':\n        dy = 0.8 * flMaxFont;\n        break;\n    }\n\n    return dy;\n  }\n\n  VPrototype.text = function (content, opt) {\n    if (content && typeof content !== 'string') throw new Error('Vectorizer: text() expects the first argument to be a string.'); // Replace all spaces with the Unicode No-break space (http://www.fileformat.info/info/unicode/char/a0/index.htm).\n    // IE would otherwise collapse all spaces into one.\n\n    content = V.sanitizeText(content);\n    opt || (opt = {}); // Should we allow the text to be selected?\n\n    var displayEmpty = opt.displayEmpty; // End of Line character\n\n    var eol = opt.eol; // Text along path\n\n    var textPath = opt.textPath; // Vertical shift\n\n    var verticalAnchor = opt.textVerticalAnchor;\n    var namedVerticalAnchor = verticalAnchor === 'middle' || verticalAnchor === 'bottom' || verticalAnchor === 'top'; // Horizontal shift applied to all the lines but the first.\n\n    var x = opt.x;\n    if (x === undefined) x = this.attr('x') || 0; // Annotations\n\n    var iai = opt.includeAnnotationIndices;\n    var annotations = opt.annotations;\n    if (annotations && !V.isArray(annotations)) annotations = [annotations]; // Shift all the <tspan> but first by one line (`1em`)\n\n    var defaultLineHeight = opt.lineHeight;\n    var autoLineHeight = defaultLineHeight === 'auto';\n    var lineHeight = autoLineHeight ? '1.5em' : defaultLineHeight || '1em'; // Clearing the element\n\n    this.empty();\n    this.attr({\n      // Preserve spaces. In other words, we do not want consecutive spaces to get collapsed to one.\n      'xml:space': 'preserve',\n      // An empty text gets rendered into the DOM in webkit-based browsers.\n      // In order to unify this behaviour across all browsers\n      // we rather hide the text element when it's empty.\n      'display': content || displayEmpty ? null : 'none'\n    }); // Set default font-size if none\n\n    var fontSize = parseFloat(this.attr('font-size'));\n\n    if (!fontSize) {\n      fontSize = 16;\n      if (namedVerticalAnchor || annotations) this.attr('font-size', fontSize);\n    }\n\n    var doc = document;\n    var containerNode;\n\n    if (textPath) {\n      // Now all the `<tspan>`s will be inside the `<textPath>`.\n      if (typeof textPath === 'string') textPath = {\n        d: textPath\n      };\n      containerNode = createTextPathNode(textPath, this);\n    } else {\n      containerNode = doc.createDocumentFragment();\n    }\n\n    var offset = 0;\n    var lines = content.split('\\n');\n    var linesMetrics = [];\n    var annotatedY;\n\n    for (var i = 0, lastI = lines.length - 1; i <= lastI; i++) {\n      var dy = lineHeight;\n      var lineClassName = 'v-line';\n      var lineNode = doc.createElementNS(ns.svg, 'tspan');\n      var line = lines[i];\n      var lineMetrics;\n\n      if (line) {\n        if (annotations) {\n          // Find the *compacted* annotations for this line.\n          var lineAnnotations = V.annotateString(line, annotations, {\n            offset: -offset,\n            includeAnnotationIndices: iai\n          });\n          lineMetrics = annotateTextLine(lineNode, lineAnnotations, {\n            includeAnnotationIndices: iai,\n            eol: i !== lastI && eol,\n            lineHeight: autoLineHeight ? null : lineHeight,\n            baseSize: fontSize\n          }); // Get the line height based on the biggest font size in the annotations for this line.\n\n          var iLineHeight = lineMetrics.lineHeight;\n          if (iLineHeight && autoLineHeight && i !== 0) dy = iLineHeight;\n          if (i === 0) annotatedY = lineMetrics.maxFontSize * 0.8;\n        } else {\n          if (eol && i !== lastI) line += eol;\n          lineNode.textContent = line;\n        }\n      } else {\n        // Make sure the textContent is never empty. If it is, add a dummy\n        // character and make it invisible, making the following lines correctly\n        // relatively positioned. `dy=1em` won't work with empty lines otherwise.\n        lineNode.textContent = '-';\n        lineClassName += ' v-empty-line'; // 'opacity' needs to be specified with fill, stroke. Opacity without specification\n        // is not applied in Firefox\n\n        var lineNodeStyle = lineNode.style;\n        lineNodeStyle.fillOpacity = 0;\n        lineNodeStyle.strokeOpacity = 0;\n        if (annotations) lineMetrics = {};\n      }\n\n      if (lineMetrics) linesMetrics.push(lineMetrics);\n      if (i > 0) lineNode.setAttribute('dy', dy); // Firefox requires 'x' to be set on the first line when inside a text path\n\n      if (i > 0 || textPath) lineNode.setAttribute('x', x);\n      lineNode.className.baseVal = lineClassName;\n      containerNode.appendChild(lineNode);\n      offset += line.length + 1; // + 1 = newline character.\n    } // Y Alignment calculation\n\n\n    if (namedVerticalAnchor) {\n      if (annotations) {\n        dy = calculateDY(verticalAnchor, linesMetrics, fontSize, lineHeight);\n      } else if (verticalAnchor === 'top') {\n        // A shortcut for top alignment. It does not depend on font-size nor line-height\n        dy = '0.8em';\n      } else {\n        var rh; // remaining height\n\n        if (lastI > 0) {\n          rh = parseFloat(lineHeight) || 1;\n          rh *= lastI;\n          if (!emRegex.test(lineHeight)) rh /= fontSize;\n        } else {\n          // Single-line text\n          rh = 0;\n        }\n\n        switch (verticalAnchor) {\n          case 'middle':\n            dy = 0.3 - rh / 2 + 'em';\n            break;\n\n          case 'bottom':\n            dy = -rh - 0.3 + 'em';\n            break;\n        }\n      }\n    } else {\n      if (verticalAnchor === 0) {\n        dy = '0em';\n      } else if (verticalAnchor) {\n        dy = verticalAnchor;\n      } else {\n        // No vertical anchor is defined\n        dy = 0; // Backwards compatibility - we change the `y` attribute instead of `dy`.\n\n        if (this.attr('y') === null) this.attr('y', annotatedY || '0.8em');\n      }\n    }\n\n    containerNode.firstChild.setAttribute('dy', dy); // Appending lines to the element.\n\n    this.append(containerNode);\n    return this;\n  };\n  /**\n   * @public\n   * @param {string} name\n   * @returns {Vectorizer}\n   */\n\n\n  VPrototype.removeAttr = function (name) {\n    var qualifiedName = V.qualifyAttr(name);\n    var el = this.node;\n\n    if (qualifiedName.ns) {\n      if (el.hasAttributeNS(qualifiedName.ns, qualifiedName.local)) {\n        el.removeAttributeNS(qualifiedName.ns, qualifiedName.local);\n      }\n    } else if (el.hasAttribute(name)) {\n      el.removeAttribute(name);\n    }\n\n    return this;\n  };\n\n  VPrototype.attr = function (name, value) {\n    if (V.isUndefined(name)) {\n      // Return all attributes.\n      var attributes = this.node.attributes;\n      var attrs = {};\n\n      for (var i = 0; i < attributes.length; i++) {\n        attrs[attributes[i].name] = attributes[i].value;\n      }\n\n      return attrs;\n    }\n\n    if (V.isString(name) && V.isUndefined(value)) {\n      return this.node.getAttribute(name);\n    }\n\n    if (typeof name === 'object') {\n      for (var attrName in name) {\n        if (name.hasOwnProperty(attrName)) {\n          this.setAttribute(attrName, name[attrName]);\n        }\n      }\n    } else {\n      this.setAttribute(name, value);\n    }\n\n    return this;\n  };\n\n  VPrototype.normalizePath = function () {\n    var tagName = this.tagName();\n\n    if (tagName === 'PATH') {\n      this.attr('d', V.normalizePathData(this.attr('d')));\n    }\n\n    return this;\n  };\n\n  VPrototype.remove = function () {\n    if (this.node.parentNode) {\n      this.node.parentNode.removeChild(this.node);\n    }\n\n    return this;\n  };\n\n  VPrototype.empty = function () {\n    while (this.node.firstChild) {\n      this.node.removeChild(this.node.firstChild);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * @param {object} attrs\n   * @returns {Vectorizer}\n   */\n\n\n  VPrototype.setAttributes = function (attrs) {\n    for (var key in attrs) {\n      if (attrs.hasOwnProperty(key)) {\n        this.setAttribute(key, attrs[key]);\n      }\n    }\n\n    return this;\n  };\n\n  VPrototype.append = function (els) {\n    if (!V.isArray(els)) {\n      els = [els];\n    }\n\n    for (var i = 0, len = els.length; i < len; i++) {\n      this.node.appendChild(V.toNode(els[i])); // lgtm [js/xss-through-dom]\n    }\n\n    return this;\n  };\n\n  VPrototype.prepend = function (els) {\n    var child = this.node.firstChild;\n    return child ? V(child).before(els) : this.append(els);\n  };\n\n  VPrototype.before = function (els) {\n    var node = this.node;\n    var parent = node.parentNode;\n\n    if (parent) {\n      if (!V.isArray(els)) {\n        els = [els];\n      }\n\n      for (var i = 0, len = els.length; i < len; i++) {\n        parent.insertBefore(V.toNode(els[i]), node);\n      }\n    }\n\n    return this;\n  };\n\n  VPrototype.appendTo = function (node) {\n    V.toNode(node).appendChild(this.node); // lgtm [js/xss-through-dom]\n\n    return this;\n  };\n\n  VPrototype.svg = function () {\n    return this.node instanceof window.SVGSVGElement ? this : V(this.node.ownerSVGElement);\n  };\n\n  VPrototype.tagName = function () {\n    return this.node.tagName.toUpperCase();\n  };\n\n  VPrototype.defs = function () {\n    var context = this.svg() || this;\n    var defsNode = context.node.getElementsByTagName('defs')[0];\n    if (defsNode) return V(defsNode);\n    return V('defs').appendTo(context);\n  };\n\n  VPrototype.clone = function () {\n    var clone = V(this.node.cloneNode(true\n    /* deep */\n    )); // Note that clone inherits also ID. Therefore, we need to change it here.\n\n    clone.node.id = V.uniqueId();\n    return clone;\n  };\n\n  VPrototype.findOne = function (selector) {\n    var found = this.node.querySelector(selector);\n    return found ? V(found) : undefined;\n  };\n\n  VPrototype.find = function (selector) {\n    var vels = [];\n    var nodes = this.node.querySelectorAll(selector);\n\n    if (nodes) {\n      // Map DOM elements to `V`s.\n      for (var i = 0; i < nodes.length; i++) {\n        vels.push(V(nodes[i]));\n      }\n    }\n\n    return vels;\n  }; // Returns an array of V elements made from children of this.node.\n\n\n  VPrototype.children = function () {\n    var children = this.node.childNodes;\n    var outputArray = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var currentChild = children[i];\n\n      if (currentChild.nodeType === 1) {\n        outputArray.push(V(children[i]));\n      }\n    }\n\n    return outputArray;\n  }; // Returns the V element from parentNode of this.node.\n\n\n  VPrototype.parent = function () {\n    return V(this.node.parentNode) || null;\n  }, // Find an index of an element inside its container.\n  VPrototype.index = function () {\n    var index = 0;\n    var node = this.node.previousSibling;\n\n    while (node) {\n      // nodeType 1 for ELEMENT_NODE\n      if (node.nodeType === 1) index++;\n      node = node.previousSibling;\n    }\n\n    return index;\n  };\n\n  VPrototype.findParentByClass = function (className, terminator) {\n    var ownerSVGElement = this.node.ownerSVGElement;\n    var node = this.node.parentNode;\n\n    while (node && node !== terminator && node !== ownerSVGElement) {\n      var vel = V(node);\n\n      if (vel.hasClass(className)) {\n        return vel;\n      }\n\n      node = node.parentNode;\n    }\n\n    return null;\n  }; // https://jsperf.com/get-common-parent\n\n\n  VPrototype.contains = function (el) {\n    var a = this.node;\n    var b = V.toNode(el);\n    var bup = b && b.parentNode;\n    return a === bup || !!(bup && bup.nodeType === 1 && a.compareDocumentPosition(bup) & 16);\n  }; // Convert global point into the coordinate space of this element.\n\n\n  VPrototype.toLocalPoint = function (x, y) {\n    var svg = this.svg().node;\n    var p = svg.createSVGPoint();\n    p.x = x;\n    p.y = y;\n\n    try {\n      var globalPoint = p.matrixTransform(svg.getScreenCTM().inverse());\n      var globalToLocalMatrix = this.getTransformToElement(svg).inverse();\n    } catch (e) {\n      // IE9 throws an exception in odd cases. (`Unexpected call to method or property access`)\n      // We have to make do with the original coordianates.\n      return p;\n    }\n\n    return globalPoint.matrixTransform(globalToLocalMatrix);\n  };\n\n  VPrototype.translateCenterToPoint = function (p) {\n    var bbox = this.getBBox({\n      target: this.svg()\n    });\n    var center = bbox.center();\n    this.translate(p.x - center.x, p.y - center.y);\n    return this;\n  }; // Efficiently auto-orient an element. This basically implements the orient=auto attribute\n  // of markers. The easiest way of understanding on what this does is to imagine the element is an\n  // arrowhead. Calling this method on the arrowhead makes it point to the `position` point while\n  // being auto-oriented (properly rotated) towards the `reference` point.\n  // `target` is the element relative to which the transformations are applied. Usually a viewport.\n\n\n  VPrototype.translateAndAutoOrient = function (position, reference, target) {\n    position = new g.Point(position);\n    reference = new g.Point(reference);\n    target || (target = this.svg()); // Clean-up previously set transformations except the scale. If we didn't clean up the\n    // previous transformations then they'd add up with the old ones. Scale is an exception as\n    // it doesn't add up, consider: `this.scale(2).scale(2).scale(2)`. The result is that the\n    // element is scaled by the factor 2, not 8.\n\n    var scale = this.scale();\n    this.attr('transform', '');\n    var bbox = this.getBBox({\n      target: target\n    }).scale(scale.sx, scale.sy); // 1. Translate to origin.\n\n    var translateToOrigin = V.createSVGTransform();\n    translateToOrigin.setTranslate(-bbox.x - bbox.width / 2, -bbox.y - bbox.height / 2); // 2. Rotate around origin.\n\n    var rotateAroundOrigin = V.createSVGTransform();\n    var angle = position.angleBetween(reference, position.clone().offset(1, 0));\n    if (angle) rotateAroundOrigin.setRotate(angle, 0, 0); // 3. Translate to the `position` + the offset (half my width) towards the `reference` point.\n\n    var translateFromOrigin = V.createSVGTransform();\n    var finalPosition = position.clone().move(reference, bbox.width / 2);\n    translateFromOrigin.setTranslate(2 * position.x - finalPosition.x, 2 * position.y - finalPosition.y); // 4. Get the current transformation matrix of this node\n\n    var ctm = this.getTransformToElement(target); // 5. Apply transformations and the scale\n\n    var transform = V.createSVGTransform();\n    transform.setMatrix(translateFromOrigin.matrix.multiply(rotateAroundOrigin.matrix.multiply(translateToOrigin.matrix.multiply(ctm.scale(scale.sx, scale.sy)))));\n    this.attr('transform', V.matrixToTransformString(transform.matrix));\n    return this;\n  };\n\n  VPrototype.animateAlongPath = function (attrs, path) {\n    path = V.toNode(path);\n    var id = V.ensureId(path);\n    var animateMotion = V('animateMotion', attrs);\n    var mpath = V('mpath', {\n      'xlink:href': '#' + id\n    });\n    animateMotion.append(mpath);\n    this.append(animateMotion);\n\n    try {\n      animateMotion.node.beginElement();\n    } catch (e) {\n      // Fallback for IE 9.\n      // Run the animation programmatically if FakeSmile (`http://leunen.me/fakesmile/`) present\n      if (document.documentElement.getAttribute('smiling') === 'fake') {\n        /* global getTargets:true, Animator:true, animators:true id2anim:true */\n        // Register the animation. (See `https://answers.launchpad.net/smil/+question/203333`)\n        var animation = animateMotion.node;\n        animation.animators = [];\n        var animationID = animation.getAttribute('id');\n        if (animationID) id2anim[animationID] = animation;\n        var targets = getTargets(animation);\n\n        for (var i = 0, len = targets.length; i < len; i++) {\n          var target = targets[i];\n          var animator = new Animator(animation, target, i);\n          animators.push(animator);\n          animation.animators[i] = animator;\n          animator.register();\n        }\n      }\n    }\n\n    return this;\n  };\n\n  VPrototype.hasClass = function (className) {\n    return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(this.node.getAttribute('class'));\n  };\n\n  VPrototype.addClass = function (className) {\n    if (className && !this.hasClass(className)) {\n      var prevClasses = this.node.getAttribute('class') || '';\n      this.node.setAttribute('class', (prevClasses + ' ' + className).trim());\n    }\n\n    return this;\n  };\n\n  VPrototype.removeClass = function (className) {\n    if (className && this.hasClass(className)) {\n      var newClasses = this.node.getAttribute('class').replace(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)', 'g'), '$2');\n      this.node.setAttribute('class', newClasses);\n    }\n\n    return this;\n  };\n\n  VPrototype.toggleClass = function (className, toAdd) {\n    var toRemove = V.isUndefined(toAdd) ? this.hasClass(className) : !toAdd;\n\n    if (toRemove) {\n      this.removeClass(className);\n    } else {\n      this.addClass(className);\n    }\n\n    return this;\n  }; // Interpolate path by discrete points. The precision of the sampling\n  // is controlled by `interval`. In other words, `sample()` will generate\n  // a point on the path starting at the beginning of the path going to the end\n  // every `interval` pixels.\n  // The sampler can be very useful for e.g. finding intersection between two\n  // paths (finding the two closest points from two samples).\n\n\n  VPrototype.sample = function (interval) {\n    interval = interval || 1;\n    var node = this.node;\n    var length = node.getTotalLength();\n    var samples = [];\n    var distance = 0;\n    var sample;\n\n    while (distance < length) {\n      sample = node.getPointAtLength(distance);\n      samples.push({\n        x: sample.x,\n        y: sample.y,\n        distance: distance\n      });\n      distance += interval;\n    }\n\n    return samples;\n  };\n\n  VPrototype.convertToPath = function () {\n    var path = V('path');\n    path.attr(this.attr());\n    var d = this.convertToPathData();\n\n    if (d) {\n      path.attr('d', d);\n    }\n\n    return path;\n  };\n\n  VPrototype.convertToPathData = function () {\n    var tagName = this.tagName();\n\n    switch (tagName) {\n      case 'PATH':\n        return this.attr('d');\n\n      case 'LINE':\n        return V.convertLineToPathData(this.node);\n\n      case 'POLYGON':\n        return V.convertPolygonToPathData(this.node);\n\n      case 'POLYLINE':\n        return V.convertPolylineToPathData(this.node);\n\n      case 'ELLIPSE':\n        return V.convertEllipseToPathData(this.node);\n\n      case 'CIRCLE':\n        return V.convertCircleToPathData(this.node);\n\n      case 'RECT':\n        return V.convertRectToPathData(this.node);\n    }\n\n    throw new Error(tagName + ' cannot be converted to PATH.');\n  };\n\n  V.prototype.toGeometryShape = function () {\n    var x, y, width, height, cx, cy, r, rx, ry, points, d, x1, x2, y1, y2;\n\n    switch (this.tagName()) {\n      case 'RECT':\n        x = parseFloat(this.attr('x')) || 0;\n        y = parseFloat(this.attr('y')) || 0;\n        width = parseFloat(this.attr('width')) || 0;\n        height = parseFloat(this.attr('height')) || 0;\n        return new g.Rect(x, y, width, height);\n\n      case 'CIRCLE':\n        cx = parseFloat(this.attr('cx')) || 0;\n        cy = parseFloat(this.attr('cy')) || 0;\n        r = parseFloat(this.attr('r')) || 0;\n        return new g.Ellipse({\n          x: cx,\n          y: cy\n        }, r, r);\n\n      case 'ELLIPSE':\n        cx = parseFloat(this.attr('cx')) || 0;\n        cy = parseFloat(this.attr('cy')) || 0;\n        rx = parseFloat(this.attr('rx')) || 0;\n        ry = parseFloat(this.attr('ry')) || 0;\n        return new g.Ellipse({\n          x: cx,\n          y: cy\n        }, rx, ry);\n\n      case 'POLYLINE':\n        points = V.getPointsFromSvgNode(this);\n        return new g.Polyline(points);\n\n      case 'POLYGON':\n        points = V.getPointsFromSvgNode(this);\n        if (points.length > 1) points.push(points[0]);\n        return new g.Polyline(points);\n\n      case 'PATH':\n        d = this.attr('d');\n        if (!g.Path.isDataSupported(d)) d = V.normalizePathData(d);\n        return new g.Path(d);\n\n      case 'LINE':\n        x1 = parseFloat(this.attr('x1')) || 0;\n        y1 = parseFloat(this.attr('y1')) || 0;\n        x2 = parseFloat(this.attr('x2')) || 0;\n        y2 = parseFloat(this.attr('y2')) || 0;\n        return new g.Line({\n          x: x1,\n          y: y1\n        }, {\n          x: x2,\n          y: y2\n        });\n    } // Anything else is a rectangle\n\n\n    return this.getBBox();\n  }; // Find the intersection of a line starting in the center\n  // of the SVG `node` ending in the point `ref`.\n  // `target` is an SVG element to which `node`s transformations are relative to.\n  // Note that `ref` point must be in the coordinate system of the `target` for this function to work properly.\n  // Returns a point in the `target` coordinate system (the same system as `ref` is in) if\n  // an intersection is found. Returns `undefined` otherwise.\n\n\n  VPrototype.findIntersection = function (ref, target) {\n    var svg = this.svg().node;\n    target = target || svg;\n    var bbox = this.getBBox({\n      target: target\n    });\n    var center = bbox.center();\n    if (!bbox.intersectionWithLineFromCenterToPoint(ref)) return undefined;\n    var spot;\n    var tagName = this.tagName(); // Little speed up optimization for `<rect>` element. We do not do conversion\n    // to path element and sampling but directly calculate the intersection through\n    // a transformed geometrical rectangle.\n\n    if (tagName === 'RECT') {\n      var gRect = new g.Rect(parseFloat(this.attr('x') || 0), parseFloat(this.attr('y') || 0), parseFloat(this.attr('width')), parseFloat(this.attr('height'))); // Get the rect transformation matrix with regards to the SVG document.\n\n      var rectMatrix = this.getTransformToElement(target); // Decompose the matrix to find the rotation angle.\n\n      var rectMatrixComponents = V.decomposeMatrix(rectMatrix); // Now we want to rotate the rectangle back so that we\n      // can use `intersectionWithLineFromCenterToPoint()` passing the angle as the second argument.\n\n      var resetRotation = svg.createSVGTransform();\n      resetRotation.setRotate(-rectMatrixComponents.rotation, center.x, center.y);\n      var rect = V.transformRect(gRect, resetRotation.matrix.multiply(rectMatrix));\n      spot = new g.Rect(rect).intersectionWithLineFromCenterToPoint(ref, rectMatrixComponents.rotation);\n    } else if (tagName === 'PATH' || tagName === 'POLYGON' || tagName === 'POLYLINE' || tagName === 'CIRCLE' || tagName === 'ELLIPSE') {\n      var pathNode = tagName === 'PATH' ? this : this.convertToPath();\n      var samples = pathNode.sample();\n      var minDistance = Infinity;\n      var closestSamples = [];\n      var i, sample, gp, centerDistance, refDistance, distance;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i]; // Convert the sample point in the local coordinate system to the global coordinate system.\n\n        gp = V.createSVGPoint(sample.x, sample.y);\n        gp = gp.matrixTransform(this.getTransformToElement(target));\n        sample = new g.Point(gp);\n        centerDistance = sample.distance(center); // Penalize a higher distance to the reference point by 10%.\n        // This gives better results. This is due to\n        // inaccuracies introduced by rounding errors and getPointAtLength() returns.\n\n        refDistance = sample.distance(ref) * 1.1;\n        distance = centerDistance + refDistance;\n\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestSamples = [{\n            sample: sample,\n            refDistance: refDistance\n          }];\n        } else if (distance < minDistance + 1) {\n          closestSamples.push({\n            sample: sample,\n            refDistance: refDistance\n          });\n        }\n      }\n\n      closestSamples.sort(function (a, b) {\n        return a.refDistance - b.refDistance;\n      });\n\n      if (closestSamples[0]) {\n        spot = closestSamples[0].sample;\n      }\n    }\n\n    return spot;\n  };\n  /**\n   * @private\n   * @param {string} name\n   * @param {string} value\n   * @returns {Vectorizer}\n   */\n\n\n  VPrototype.setAttribute = function (name, value) {\n    var el = this.node;\n\n    if (value === null) {\n      this.removeAttr(name);\n      return this;\n    }\n\n    var qualifiedName = V.qualifyAttr(name);\n\n    if (qualifiedName.ns) {\n      // Attribute names can be namespaced. E.g. `image` elements\n      // have a `xlink:href` attribute to set the source of the image.\n      el.setAttributeNS(qualifiedName.ns, name, value);\n    } else if (name === 'id') {\n      el.id = value;\n    } else {\n      el.setAttribute(name, value);\n    }\n\n    return this;\n  }; // Create an SVG document element.\n  // If `content` is passed, it will be used as the SVG content of the `<svg>` root element.\n\n\n  V.createSvgDocument = function (content) {\n    if (content) {\n      const XMLString = `<svg xmlns=\"${ns.svg}\" xmlns:xlink=\"${ns.xlink}\" version=\"${SVGVersion}\">${content}</svg>`;\n      const {\n        documentElement\n      } = V.parseXML(XMLString, {\n        async: false\n      });\n      return documentElement;\n    }\n\n    const svg = document.createElementNS(ns.svg, 'svg');\n    svg.setAttributeNS(ns.xmlns, 'xmlns:xlink', ns.xlink);\n    svg.setAttribute('version', SVGVersion);\n    return svg;\n  };\n\n  V.createSVGStyle = function (stylesheet) {\n    const {\n      node\n    } = V('style', {\n      type: 'text/css'\n    }, [V.createCDATASection(stylesheet)]);\n    return node;\n  }, V.createCDATASection = function (data = '') {\n    const xml = document.implementation.createDocument(null, 'xml', null);\n    return xml.createCDATASection(data);\n  };\n  V.idCounter = 0; // A function returning a unique identifier for this client session with every call.\n\n  V.uniqueId = function () {\n    return 'v-' + ++V.idCounter;\n  };\n\n  V.toNode = function (el) {\n    return V.isV(el) ? el.node : el.nodeName && el || el[0];\n  };\n\n  V.ensureId = function (node) {\n    node = V.toNode(node);\n    return node.id || (node.id = V.uniqueId());\n  }; // Replace all spaces with the Unicode No-break space (http://www.fileformat.info/info/unicode/char/a0/index.htm).\n  // IE would otherwise collapse all spaces into one. This is used in the text() method but it is\n  // also exposed so that the programmer can use it in case he needs to. This is useful e.g. in tests\n  // when you want to compare the actual DOM text content without having to add the unicode character in\n  // the place of all spaces.\n\n\n  V.sanitizeText = function (text) {\n    return (text || '').replace(/ /g, '\\u00A0');\n  };\n\n  V.isUndefined = function (value) {\n    return typeof value === 'undefined';\n  };\n\n  V.isString = function (value) {\n    return typeof value === 'string';\n  };\n\n  V.isObject = function (value) {\n    return value && typeof value === 'object';\n  };\n\n  V.isArray = Array.isArray;\n\n  V.parseXML = function (data, opt) {\n    opt = opt || {};\n    var xml;\n\n    try {\n      var parser = new DOMParser();\n\n      if (!V.isUndefined(opt.async)) {\n        parser.async = opt.async;\n      }\n\n      xml = parser.parseFromString(data, 'text/xml');\n    } catch (error) {\n      xml = undefined;\n    }\n\n    if (!xml || xml.getElementsByTagName('parsererror').length) {\n      throw new Error('Invalid XML: ' + data);\n    }\n\n    return xml;\n  };\n  /**\n   * @param {string} name\n   * @returns {{ns: string|null, local: string}} namespace and attribute name\n   */\n\n\n  V.qualifyAttr = function (name) {\n    if (name.indexOf(':') !== -1) {\n      var combinedKey = name.split(':');\n      return {\n        ns: ns[combinedKey[0]],\n        local: combinedKey[1]\n      };\n    }\n\n    return {\n      ns: null,\n      local: name\n    };\n  };\n\n  V.transformRegex = /(\\w+)\\(([^,)]+),?([^)]+)?\\)/gi;\n  V.transformSeparatorRegex = /[ ,]+/;\n  V.transformationListRegex = /^(\\w+)\\((.*)\\)/;\n\n  V.transformStringToMatrix = function (transform) {\n    var transformationMatrix = V.createSVGMatrix();\n    var matches = transform && transform.match(V.transformRegex);\n\n    if (!matches) {\n      return transformationMatrix;\n    }\n\n    for (var i = 0, n = matches.length; i < n; i++) {\n      var transformationString = matches[i];\n      var transformationMatch = transformationString.match(V.transformationListRegex);\n\n      if (transformationMatch) {\n        var sx, sy, tx, ty, angle;\n        var ctm = V.createSVGMatrix();\n        var args = transformationMatch[2].split(V.transformSeparatorRegex);\n\n        switch (transformationMatch[1].toLowerCase()) {\n          case 'scale':\n            sx = parseFloat(args[0]);\n            sy = args[1] === undefined ? sx : parseFloat(args[1]);\n            ctm = ctm.scaleNonUniform(sx, sy);\n            break;\n\n          case 'translate':\n            tx = parseFloat(args[0]);\n            ty = parseFloat(args[1]);\n            ctm = ctm.translate(tx, ty);\n            break;\n\n          case 'rotate':\n            angle = parseFloat(args[0]);\n            tx = parseFloat(args[1]) || 0;\n            ty = parseFloat(args[2]) || 0;\n\n            if (tx !== 0 || ty !== 0) {\n              ctm = ctm.translate(tx, ty).rotate(angle).translate(-tx, -ty);\n            } else {\n              ctm = ctm.rotate(angle);\n            }\n\n            break;\n\n          case 'skewx':\n            angle = parseFloat(args[0]);\n            ctm = ctm.skewX(angle);\n            break;\n\n          case 'skewy':\n            angle = parseFloat(args[0]);\n            ctm = ctm.skewY(angle);\n            break;\n\n          case 'matrix':\n            ctm.a = parseFloat(args[0]);\n            ctm.b = parseFloat(args[1]);\n            ctm.c = parseFloat(args[2]);\n            ctm.d = parseFloat(args[3]);\n            ctm.e = parseFloat(args[4]);\n            ctm.f = parseFloat(args[5]);\n            break;\n\n          default:\n            continue;\n        }\n\n        transformationMatrix = transformationMatrix.multiply(ctm);\n      }\n    }\n\n    return transformationMatrix;\n  };\n\n  V.matrixToTransformString = function (matrix) {\n    matrix || (matrix = true);\n    return 'matrix(' + (matrix.a !== undefined ? matrix.a : 1) + ',' + (matrix.b !== undefined ? matrix.b : 0) + ',' + (matrix.c !== undefined ? matrix.c : 0) + ',' + (matrix.d !== undefined ? matrix.d : 1) + ',' + (matrix.e !== undefined ? matrix.e : 0) + ',' + (matrix.f !== undefined ? matrix.f : 0) + ')';\n  };\n\n  V.parseTransformString = function (transform) {\n    var translate, rotate, scale;\n\n    if (transform) {\n      var separator = V.transformSeparatorRegex; // Allow reading transform string with a single matrix\n\n      if (transform.trim().indexOf('matrix') >= 0) {\n        var matrix = V.transformStringToMatrix(transform);\n        var decomposedMatrix = V.decomposeMatrix(matrix);\n        translate = [decomposedMatrix.translateX, decomposedMatrix.translateY];\n        scale = [decomposedMatrix.scaleX, decomposedMatrix.scaleY];\n        rotate = [decomposedMatrix.rotation];\n        var transformations = [];\n\n        if (translate[0] !== 0 || translate[1] !== 0) {\n          transformations.push('translate(' + translate + ')');\n        }\n\n        if (scale[0] !== 1 || scale[1] !== 1) {\n          transformations.push('scale(' + scale + ')');\n        }\n\n        if (rotate[0] !== 0) {\n          transformations.push('rotate(' + rotate + ')');\n        }\n\n        transform = transformations.join(' ');\n      } else {\n        var translateMatch = transform.match(/translate\\((.*?)\\)/);\n\n        if (translateMatch) {\n          translate = translateMatch[1].split(separator);\n        }\n\n        var rotateMatch = transform.match(/rotate\\((.*?)\\)/);\n\n        if (rotateMatch) {\n          rotate = rotateMatch[1].split(separator);\n        }\n\n        var scaleMatch = transform.match(/scale\\((.*?)\\)/);\n\n        if (scaleMatch) {\n          scale = scaleMatch[1].split(separator);\n        }\n      }\n    }\n\n    var sx = scale && scale[0] ? parseFloat(scale[0]) : 1;\n    return {\n      value: transform,\n      translate: {\n        tx: translate && translate[0] ? parseInt(translate[0], 10) : 0,\n        ty: translate && translate[1] ? parseInt(translate[1], 10) : 0\n      },\n      rotate: {\n        angle: rotate && rotate[0] ? parseInt(rotate[0], 10) : 0,\n        cx: rotate && rotate[1] ? parseInt(rotate[1], 10) : undefined,\n        cy: rotate && rotate[2] ? parseInt(rotate[2], 10) : undefined\n      },\n      scale: {\n        sx: sx,\n        sy: scale && scale[1] ? parseFloat(scale[1]) : sx\n      }\n    };\n  };\n\n  V.deltaTransformPoint = function (matrix, point) {\n    var dx = point.x * matrix.a + point.y * matrix.c + 0;\n    var dy = point.x * matrix.b + point.y * matrix.d + 0;\n    return {\n      x: dx,\n      y: dy\n    };\n  };\n\n  V.decomposeMatrix = function (matrix) {\n    // @see https://gist.github.com/2052247\n    // calculate delta transform point\n    var px = V.deltaTransformPoint(matrix, {\n      x: 0,\n      y: 1\n    });\n    var py = V.deltaTransformPoint(matrix, {\n      x: 1,\n      y: 0\n    }); // calculate skew\n\n    var skewX = 180 / PI * atan2(px.y, px.x) - 90;\n    var skewY = 180 / PI * atan2(py.y, py.x);\n    return {\n      translateX: matrix.e,\n      translateY: matrix.f,\n      scaleX: sqrt(matrix.a * matrix.a + matrix.b * matrix.b),\n      scaleY: sqrt(matrix.c * matrix.c + matrix.d * matrix.d),\n      skewX: skewX,\n      skewY: skewY,\n      rotation: skewX // rotation is the same as skew x\n\n    };\n  }; // Return the `scale` transformation from the following equation:\n  // `translate(tx, ty) . rotate(angle) . scale(sx, sy) === matrix(a,b,c,d,e,f)`\n\n\n  V.matrixToScale = function (matrix) {\n    var a, b, c, d;\n\n    if (matrix) {\n      a = V.isUndefined(matrix.a) ? 1 : matrix.a;\n      d = V.isUndefined(matrix.d) ? 1 : matrix.d;\n      b = matrix.b;\n      c = matrix.c;\n    } else {\n      a = d = 1;\n    }\n\n    return {\n      sx: b ? sqrt(a * a + b * b) : a,\n      sy: c ? sqrt(c * c + d * d) : d\n    };\n  }; // Return the `rotate` transformation from the following equation:\n  // `translate(tx, ty) . rotate(angle) . scale(sx, sy) === matrix(a,b,c,d,e,f)`\n\n\n  V.matrixToRotate = function (matrix) {\n    var p = {\n      x: 0,\n      y: 1\n    };\n\n    if (matrix) {\n      p = V.deltaTransformPoint(matrix, p);\n    }\n\n    return {\n      angle: g.normalizeAngle(g.toDeg(atan2(p.y, p.x)) - 90)\n    };\n  }; // Return the `translate` transformation from the following equation:\n  // `translate(tx, ty) . rotate(angle) . scale(sx, sy) === matrix(a,b,c,d,e,f)`\n\n\n  V.matrixToTranslate = function (matrix) {\n    return {\n      tx: matrix && matrix.e || 0,\n      ty: matrix && matrix.f || 0\n    };\n  };\n\n  V.isV = function (object) {\n    return object instanceof V;\n  }; // For backwards compatibility:\n\n\n  V.isVElement = V.isV; // Element implements `getBBox()`, `getCTM()` and `getScreenCTM()`\n  // https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement\n\n  V.isSVGGraphicsElement = function (node) {\n    if (!node) return false;\n    node = V.toNode(node); // IE/Edge does not implement SVGGraphicsElement interface, thus check for `getScreenCTM` below\n\n    return node instanceof SVGElement && typeof node.getScreenCTM === 'function';\n  };\n\n  var svgDocument = V('svg').node;\n\n  V.createSVGMatrix = function (matrix) {\n    var svgMatrix = svgDocument.createSVGMatrix();\n\n    for (var component in matrix) {\n      svgMatrix[component] = matrix[component];\n    }\n\n    return svgMatrix;\n  };\n\n  V.createSVGTransform = function (matrix) {\n    if (!V.isUndefined(matrix)) {\n      if (!(matrix instanceof SVGMatrix)) {\n        matrix = V.createSVGMatrix(matrix);\n      }\n\n      return svgDocument.createSVGTransformFromMatrix(matrix);\n    }\n\n    return svgDocument.createSVGTransform();\n  };\n\n  V.createSVGPoint = function (x, y) {\n    var p = svgDocument.createSVGPoint();\n    p.x = x;\n    p.y = y;\n    return p;\n  };\n\n  V.transformRect = function (r, matrix) {\n    var p = svgDocument.createSVGPoint();\n    p.x = r.x;\n    p.y = r.y;\n    var corner1 = p.matrixTransform(matrix);\n    p.x = r.x + r.width;\n    p.y = r.y;\n    var corner2 = p.matrixTransform(matrix);\n    p.x = r.x + r.width;\n    p.y = r.y + r.height;\n    var corner3 = p.matrixTransform(matrix);\n    p.x = r.x;\n    p.y = r.y + r.height;\n    var corner4 = p.matrixTransform(matrix);\n    var minX = min(corner1.x, corner2.x, corner3.x, corner4.x);\n    var maxX = max(corner1.x, corner2.x, corner3.x, corner4.x);\n    var minY = min(corner1.y, corner2.y, corner3.y, corner4.y);\n    var maxY = max(corner1.y, corner2.y, corner3.y, corner4.y);\n    return new g.Rect(minX, minY, maxX - minX, maxY - minY);\n  };\n\n  V.transformPoint = function (p, matrix) {\n    return new g.Point(V.createSVGPoint(p.x, p.y).matrixTransform(matrix));\n  };\n\n  V.transformLine = function (l, matrix) {\n    return new g.Line(V.transformPoint(l.start, matrix), V.transformPoint(l.end, matrix));\n  };\n\n  V.transformPolyline = function (p, matrix) {\n    var inPoints = p instanceof g.Polyline ? p.points : p;\n    if (!V.isArray(inPoints)) inPoints = [];\n    var outPoints = [];\n\n    for (var i = 0, n = inPoints.length; i < n; i++) outPoints[i] = V.transformPoint(inPoints[i], matrix);\n\n    return new g.Polyline(outPoints);\n  }; // Convert a style represented as string (e.g. `'fill=\"blue\"; stroke=\"red\"'`) to\n  // an object (`{ fill: 'blue', stroke: 'red' }`).\n\n\n  V.styleToObject = function (styleString) {\n    var ret = {};\n    var styles = styleString.split(';');\n\n    for (var i = 0; i < styles.length; i++) {\n      var style = styles[i];\n      var pair = style.split('=');\n      ret[pair[0].trim()] = pair[1].trim();\n    }\n\n    return ret;\n  }; // Inspired by d3.js https://github.com/mbostock/d3/blob/master/src/svg/arc.js\n\n\n  V.createSlicePathData = function (innerRadius, outerRadius, startAngle, endAngle) {\n    var svgArcMax = 2 * PI - 1e-6;\n    var r0 = innerRadius;\n    var r1 = outerRadius;\n    var a0 = startAngle;\n    var a1 = endAngle;\n    var da = (a1 < a0 && (da = a0, a0 = a1, a1 = da), a1 - a0);\n    var df = da < PI ? '0' : '1';\n    var c0 = cos(a0);\n    var s0 = sin(a0);\n    var c1 = cos(a1);\n    var s1 = sin(a1);\n    return da >= svgArcMax ? r0 ? 'M0,' + r1 + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + -r1 + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + r1 + 'M0,' + r0 + 'A' + r0 + ',' + r0 + ' 0 1,0 0,' + -r0 + 'A' + r0 + ',' + r0 + ' 0 1,0 0,' + r0 + 'Z' : 'M0,' + r1 + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + -r1 + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + r1 + 'Z' : r0 ? 'M' + r1 * c0 + ',' + r1 * s0 + 'A' + r1 + ',' + r1 + ' 0 ' + df + ',1 ' + r1 * c1 + ',' + r1 * s1 + 'L' + r0 * c1 + ',' + r0 * s1 + 'A' + r0 + ',' + r0 + ' 0 ' + df + ',0 ' + r0 * c0 + ',' + r0 * s0 + 'Z' : 'M' + r1 * c0 + ',' + r1 * s0 + 'A' + r1 + ',' + r1 + ' 0 ' + df + ',1 ' + r1 * c1 + ',' + r1 * s1 + 'L0,0' + 'Z';\n  }; // Merge attributes from object `b` with attributes in object `a`.\n  // Note that this modifies the object `a`.\n  // Also important to note that attributes are merged but CSS classes are concatenated.\n\n\n  V.mergeAttrs = function (a, b) {\n    for (var attr in b) {\n      if (attr === 'class') {\n        // Concatenate classes.\n        a[attr] = a[attr] ? a[attr] + ' ' + b[attr] : b[attr];\n      } else if (attr === 'style') {\n        // `style` attribute can be an object.\n        if (V.isObject(a[attr]) && V.isObject(b[attr])) {\n          // `style` stored in `a` is an object.\n          a[attr] = V.mergeAttrs(a[attr], b[attr]);\n        } else if (V.isObject(a[attr])) {\n          // `style` in `a` is an object but it's a string in `b`.\n          // Convert the style represented as a string to an object in `b`.\n          a[attr] = V.mergeAttrs(a[attr], V.styleToObject(b[attr]));\n        } else if (V.isObject(b[attr])) {\n          // `style` in `a` is a string, in `b` it's an object.\n          a[attr] = V.mergeAttrs(V.styleToObject(a[attr]), b[attr]);\n        } else {\n          // Both styles are strings.\n          a[attr] = V.mergeAttrs(V.styleToObject(a[attr]), V.styleToObject(b[attr]));\n        }\n      } else {\n        a[attr] = b[attr];\n      }\n    }\n\n    return a;\n  };\n\n  V.annotateString = function (t, annotations, opt) {\n    annotations = annotations || [];\n    opt = opt || {};\n    var offset = opt.offset || 0;\n    var compacted = [];\n    var batch;\n    var ret = [];\n    var item;\n    var prev;\n\n    for (var i = 0; i < t.length; i++) {\n      item = ret[i] = t[i];\n\n      for (var j = 0; j < annotations.length; j++) {\n        var annotation = annotations[j];\n        var start = annotation.start + offset;\n        var end = annotation.end + offset;\n\n        if (i >= start && i < end) {\n          // Annotation applies.\n          if (V.isObject(item)) {\n            // There is more than one annotation to be applied => Merge attributes.\n            item.attrs = V.mergeAttrs(V.mergeAttrs({}, item.attrs), annotation.attrs);\n          } else {\n            item = ret[i] = {\n              t: t[i],\n              attrs: annotation.attrs\n            };\n          }\n\n          if (opt.includeAnnotationIndices) {\n            (item.annotations || (item.annotations = [])).push(j);\n          }\n        }\n      }\n\n      prev = ret[i - 1];\n\n      if (!prev) {\n        batch = item;\n      } else if (V.isObject(item) && V.isObject(prev)) {\n        // Both previous item and the current one are annotations. If the attributes\n        // didn't change, merge the text.\n        if (JSON.stringify(item.attrs) === JSON.stringify(prev.attrs)) {\n          batch.t += item.t;\n        } else {\n          compacted.push(batch);\n          batch = item;\n        }\n      } else if (V.isObject(item)) {\n        // Previous item was a string, current item is an annotation.\n        compacted.push(batch);\n        batch = item;\n      } else if (V.isObject(prev)) {\n        // Previous item was an annotation, current item is a string.\n        compacted.push(batch);\n        batch = item;\n      } else {\n        // Both previous and current item are strings.\n        batch = (batch || '') + item;\n      }\n    }\n\n    if (batch) {\n      compacted.push(batch);\n    }\n\n    return compacted;\n  };\n\n  V.findAnnotationsAtIndex = function (annotations, index) {\n    var found = [];\n\n    if (annotations) {\n      annotations.forEach(function (annotation) {\n        if (annotation.start < index && index <= annotation.end) {\n          found.push(annotation);\n        }\n      });\n    }\n\n    return found;\n  };\n\n  V.findAnnotationsBetweenIndexes = function (annotations, start, end) {\n    var found = [];\n\n    if (annotations) {\n      annotations.forEach(function (annotation) {\n        if (start >= annotation.start && start < annotation.end || end > annotation.start && end <= annotation.end || annotation.start >= start && annotation.end < end) {\n          found.push(annotation);\n        }\n      });\n    }\n\n    return found;\n  }; // Shift all the text annotations after character `index` by `offset` positions.\n\n\n  V.shiftAnnotations = function (annotations, index, offset) {\n    if (annotations) {\n      annotations.forEach(function (annotation) {\n        if (annotation.start < index && annotation.end >= index) {\n          annotation.end += offset;\n        } else if (annotation.start >= index) {\n          annotation.start += offset;\n          annotation.end += offset;\n        }\n      });\n    }\n\n    return annotations;\n  };\n\n  V.convertLineToPathData = function (line) {\n    line = V(line);\n    var d = ['M', line.attr('x1'), line.attr('y1'), 'L', line.attr('x2'), line.attr('y2')].join(' ');\n    return d;\n  };\n\n  V.convertPolygonToPathData = function (polygon) {\n    var points = V.getPointsFromSvgNode(polygon);\n    if (points.length === 0) return null;\n    return V.svgPointsToPath(points) + ' Z';\n  };\n\n  V.convertPolylineToPathData = function (polyline) {\n    var points = V.getPointsFromSvgNode(polyline);\n    if (points.length === 0) return null;\n    return V.svgPointsToPath(points);\n  };\n\n  V.svgPointsToPath = function (points) {\n    for (var i = 0, n = points.length; i < n; i++) {\n      points[i] = points[i].x + ' ' + points[i].y;\n    }\n\n    return 'M ' + points.join(' L');\n  };\n\n  V.getPointsFromSvgNode = function (node) {\n    node = V.toNode(node);\n    var points = [];\n    var nodePoints = node.points;\n\n    if (nodePoints) {\n      for (var i = 0, n = nodePoints.numberOfItems; i < n; i++) {\n        points.push(nodePoints.getItem(i));\n      }\n    }\n\n    return points;\n  };\n\n  V.KAPPA = 0.551784;\n\n  V.convertCircleToPathData = function (circle) {\n    circle = V(circle);\n    var cx = parseFloat(circle.attr('cx')) || 0;\n    var cy = parseFloat(circle.attr('cy')) || 0;\n    var r = parseFloat(circle.attr('r'));\n    var cd = r * V.KAPPA; // Control distance.\n\n    var d = ['M', cx, cy - r, // Move to the first point.\n    'C', cx + cd, cy - r, cx + r, cy - cd, cx + r, cy, // I. Quadrant.\n    'C', cx + r, cy + cd, cx + cd, cy + r, cx, cy + r, // II. Quadrant.\n    'C', cx - cd, cy + r, cx - r, cy + cd, cx - r, cy, // III. Quadrant.\n    'C', cx - r, cy - cd, cx - cd, cy - r, cx, cy - r, // IV. Quadrant.\n    'Z'].join(' ');\n    return d;\n  };\n\n  V.convertEllipseToPathData = function (ellipse) {\n    ellipse = V(ellipse);\n    var cx = parseFloat(ellipse.attr('cx')) || 0;\n    var cy = parseFloat(ellipse.attr('cy')) || 0;\n    var rx = parseFloat(ellipse.attr('rx'));\n    var ry = parseFloat(ellipse.attr('ry')) || rx;\n    var cdx = rx * V.KAPPA; // Control distance x.\n\n    var cdy = ry * V.KAPPA; // Control distance y.\n\n    var d = ['M', cx, cy - ry, // Move to the first point.\n    'C', cx + cdx, cy - ry, cx + rx, cy - cdy, cx + rx, cy, // I. Quadrant.\n    'C', cx + rx, cy + cdy, cx + cdx, cy + ry, cx, cy + ry, // II. Quadrant.\n    'C', cx - cdx, cy + ry, cx - rx, cy + cdy, cx - rx, cy, // III. Quadrant.\n    'C', cx - rx, cy - cdy, cx - cdx, cy - ry, cx, cy - ry, // IV. Quadrant.\n    'Z'].join(' ');\n    return d;\n  };\n\n  V.convertRectToPathData = function (rect) {\n    rect = V(rect);\n    return V.rectToPath({\n      x: parseFloat(rect.attr('x')) || 0,\n      y: parseFloat(rect.attr('y')) || 0,\n      width: parseFloat(rect.attr('width')) || 0,\n      height: parseFloat(rect.attr('height')) || 0,\n      rx: parseFloat(rect.attr('rx')) || 0,\n      ry: parseFloat(rect.attr('ry')) || 0\n    });\n  }; // Convert a rectangle to SVG path commands. `r` is an object of the form:\n  // `{ x: [number], y: [number], width: [number], height: [number], top-ry: [number], top-ry: [number], bottom-rx: [number], bottom-ry: [number] }`,\n  // where `x, y, width, height` are the usual rectangle attributes and [top-/bottom-]rx/ry allows for\n  // specifying radius of the rectangle for all its sides (as opposed to the built-in SVG rectangle\n  // that has only `rx` and `ry` attributes).\n\n\n  V.rectToPath = function (r) {\n    var d;\n    var x = r.x;\n    var y = r.y;\n    var width = r.width;\n    var height = r.height;\n    var topRx = min(r.rx || r['top-rx'] || 0, width / 2);\n    var bottomRx = min(r.rx || r['bottom-rx'] || 0, width / 2);\n    var topRy = min(r.ry || r['top-ry'] || 0, height / 2);\n    var bottomRy = min(r.ry || r['bottom-ry'] || 0, height / 2);\n\n    if (topRx || bottomRx || topRy || bottomRy) {\n      d = ['M', x, y + topRy, 'v', height - topRy - bottomRy, 'a', bottomRx, bottomRy, 0, 0, 0, bottomRx, bottomRy, 'h', width - 2 * bottomRx, 'a', bottomRx, bottomRy, 0, 0, 0, bottomRx, -bottomRy, 'v', -(height - bottomRy - topRy), 'a', topRx, topRy, 0, 0, 0, -topRx, -topRy, 'h', -(width - 2 * topRx), 'a', topRx, topRy, 0, 0, 0, -topRx, topRy, 'Z'];\n    } else {\n      d = ['M', x, y, 'H', x + width, 'V', y + height, 'H', x, 'V', y, 'Z'];\n    }\n\n    return d.join(' ');\n  }; // Take a path data string\n  // Return a normalized path data string\n  // If data cannot be parsed, return 'M 0 0'\n  // Adapted from Rappid normalizePath polyfill\n  // Highly inspired by Raphael Library (www.raphael.com)\n\n\n  V.normalizePathData = function () {\n    var spaces = '\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029';\n    var pathCommand = new RegExp('([a-z])[' + spaces + ',]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[' + spaces + ']*,?[' + spaces + ']*)+)', 'ig');\n    var pathValues = new RegExp('(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[' + spaces + ']*,?[' + spaces + ']*', 'ig');\n    var math = Math;\n    var PI = math.PI;\n    var sin = math.sin;\n    var cos = math.cos;\n    var tan = math.tan;\n    var asin = math.asin;\n    var sqrt = math.sqrt;\n    var abs = math.abs;\n\n    function q2c(x1, y1, ax, ay, x2, y2) {\n      var _13 = 1 / 3;\n\n      var _23 = 2 / 3;\n\n      return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n    }\n\n    function rotate(x, y, rad) {\n      var X = x * cos(rad) - y * sin(rad);\n      var Y = x * sin(rad) + y * cos(rad);\n      return {\n        x: X,\n        y: Y\n      };\n    }\n\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n      // for more information of where this math came from visit:\n      // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n      var _120 = PI * 120 / 180;\n\n      var rad = PI / 180 * (+angle || 0);\n      var res = [];\n      var xy;\n\n      if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        var x = (x1 - x2) / 2;\n        var y = (y1 - y2) / 2;\n        var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n        if (h > 1) {\n          h = sqrt(h);\n          rx = h * rx;\n          ry = h * ry;\n        }\n\n        var rx2 = rx * rx;\n        var ry2 = ry * ry;\n        var k = (large_arc_flag == sweep_flag ? -1 : 1) * sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n        var cx = k * rx * y / ry + (x1 + x2) / 2;\n        var cy = k * -ry * x / rx + (y1 + y2) / 2;\n        var f1 = asin(((y1 - cy) / ry).toFixed(9));\n        var f2 = asin(((y2 - cy) / ry).toFixed(9));\n        f1 = x1 < cx ? PI - f1 : f1;\n        f2 = x2 < cx ? PI - f2 : f2;\n        if (f1 < 0) f1 = PI * 2 + f1;\n        if (f2 < 0) f2 = PI * 2 + f2;\n        if (sweep_flag && f1 > f2) f1 = f1 - PI * 2;\n        if (!sweep_flag && f2 > f1) f2 = f2 - PI * 2;\n      } else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n      }\n\n      var df = f2 - f1;\n\n      if (abs(df) > _120) {\n        var f2old = f2;\n        var x2old = x2;\n        var y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * cos(f2);\n        y2 = cy + ry * sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n      }\n\n      df = f2 - f1;\n      var c1 = cos(f1);\n      var s1 = sin(f1);\n      var c2 = cos(f2);\n      var s2 = sin(f2);\n      var t = tan(df / 4);\n      var hx = 4 / 3 * (rx * t);\n      var hy = 4 / 3 * (ry * t);\n      var m1 = [x1, y1];\n      var m2 = [x1 + hx * s1, y1 - hy * c1];\n      var m3 = [x2 + hx * s2, y2 - hy * c2];\n      var m4 = [x2, y2];\n      m2[0] = 2 * m1[0] - m2[0];\n      m2[1] = 2 * m1[1] - m2[1];\n\n      if (recursive) {\n        return [m2, m3, m4].concat(res);\n      } else {\n        res = [m2, m3, m4].concat(res).join().split(',');\n        var newres = [];\n        var ii = res.length;\n\n        for (var i = 0; i < ii; i++) {\n          newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n        }\n\n        return newres;\n      }\n    }\n\n    function parsePathString(pathString) {\n      if (!pathString) return null;\n      var paramCounts = {\n        a: 7,\n        c: 6,\n        h: 1,\n        l: 2,\n        m: 2,\n        q: 4,\n        s: 4,\n        t: 2,\n        v: 1,\n        z: 0\n      };\n      var data = [];\n      String(pathString).replace(pathCommand, function (a, b, c) {\n        var params = [];\n        var name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n          if (b) params.push(+b);\n        });\n\n        if (name === 'm' && params.length > 2) {\n          data.push([b].concat(params.splice(0, 2)));\n          name = 'l';\n          b = b === 'm' ? 'l' : 'L';\n        }\n\n        while (params.length >= paramCounts[name]) {\n          data.push([b].concat(params.splice(0, paramCounts[name])));\n          if (!paramCounts[name]) break;\n        }\n      });\n      return data;\n    }\n\n    function pathToAbsolute(pathArray) {\n      if (!Array.isArray(pathArray) || !Array.isArray(pathArray && pathArray[0])) {\n        // rough assumption\n        pathArray = parsePathString(pathArray);\n      } // if invalid string, return 'M 0 0'\n\n\n      if (!pathArray || !pathArray.length) return [['M', 0, 0]];\n      var res = [];\n      var x = 0;\n      var y = 0;\n      var mx = 0;\n      var my = 0;\n      var start = 0;\n      var pa0;\n      var ii = pathArray.length;\n\n      for (var i = start; i < ii; i++) {\n        var r = [];\n        res.push(r);\n        var pa = pathArray[i];\n        pa0 = pa[0];\n\n        if (pa0 != pa0.toUpperCase()) {\n          r[0] = pa0.toUpperCase();\n          var jj;\n          var j;\n\n          switch (r[0]) {\n            case 'A':\n              r[1] = pa[1];\n              r[2] = pa[2];\n              r[3] = pa[3];\n              r[4] = pa[4];\n              r[5] = pa[5];\n              r[6] = +pa[6] + x;\n              r[7] = +pa[7] + y;\n              break;\n\n            case 'V':\n              r[1] = +pa[1] + y;\n              break;\n\n            case 'H':\n              r[1] = +pa[1] + x;\n              break;\n\n            case 'M':\n              mx = +pa[1] + x;\n              my = +pa[2] + y;\n              jj = pa.length;\n\n              for (j = 1; j < jj; j++) {\n                r[j] = +pa[j] + (j % 2 ? x : y);\n              }\n\n              break;\n\n            default:\n              jj = pa.length;\n\n              for (j = 1; j < jj; j++) {\n                r[j] = +pa[j] + (j % 2 ? x : y);\n              }\n\n              break;\n          }\n        } else {\n          var kk = pa.length;\n\n          for (var k = 0; k < kk; k++) {\n            r[k] = pa[k];\n          }\n        }\n\n        switch (r[0]) {\n          case 'Z':\n            x = +mx;\n            y = +my;\n            break;\n\n          case 'H':\n            x = r[1];\n            break;\n\n          case 'V':\n            y = r[1];\n            break;\n\n          case 'M':\n            mx = r[r.length - 2];\n            my = r[r.length - 1];\n            x = r[r.length - 2];\n            y = r[r.length - 1];\n            break;\n\n          default:\n            x = r[r.length - 2];\n            y = r[r.length - 1];\n            break;\n        }\n      }\n\n      return res;\n    }\n\n    function normalize(path) {\n      var p = pathToAbsolute(path);\n      var attrs = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null\n      };\n\n      function processPath(path, d, pcom) {\n        var nx, ny;\n        if (!path) return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n\n        if (!(path[0] in {\n          T: 1,\n          Q: 1\n        })) {\n          d.qx = null;\n          d.qy = null;\n        }\n\n        switch (path[0]) {\n          case 'M':\n            d.X = path[1];\n            d.Y = path[2];\n            break;\n\n          case 'A':\n            if (parseFloat(path[1]) === 0 || parseFloat(path[2]) === 0) {\n              // https://www.w3.org/TR/SVG/paths.html#ArcOutOfRangeParameters\n              // \"If either rx or ry is 0, then this arc is treated as a\n              // straight line segment (a \"lineto\") joining the endpoints.\"\n              path = ['L', path[6], path[7]];\n            } else {\n              path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n            }\n\n            break;\n\n          case 'S':\n            if (pcom === 'C' || pcom === 'S') {\n              // In 'S' case we have to take into account, if the previous command is C/S.\n              nx = d.x * 2 - d.bx; // And reflect the previous\n\n              ny = d.y * 2 - d.by; // command's control point relative to the current point.\n            } else {\n              // or some else or nothing\n              nx = d.x;\n              ny = d.y;\n            }\n\n            path = ['C', nx, ny].concat(path.slice(1));\n            break;\n\n          case 'T':\n            if (pcom === 'Q' || pcom === 'T') {\n              // In 'T' case we have to take into account, if the previous command is Q/T.\n              d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n              d.qy = d.y * 2 - d.qy; // to case 'S'.\n            } else {\n              // or something else or nothing\n              d.qx = d.x;\n              d.qy = d.y;\n            }\n\n            path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n            break;\n\n          case 'Q':\n            d.qx = path[1];\n            d.qy = path[2];\n            path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n            break;\n\n          case 'H':\n            path = ['L'].concat(path[1], d.y);\n            break;\n\n          case 'V':\n            path = ['L'].concat(d.x, path[1]);\n            break;\n\n          case 'L':\n            break;\n\n          case 'Z':\n            break;\n        }\n\n        return path;\n      }\n\n      function fixArc(pp, i) {\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n\n          while (pi.length) {\n            pcoms[i] = 'A'; // if created multiple 'C's, their original seg is saved\n\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n          }\n\n          pp.splice(i, 1);\n          ii = p.length;\n        }\n      }\n\n      var pcoms = []; // path commands of original path p\n\n      var pfirst = ''; // temporary holder for original path command\n\n      var pcom = ''; // holder for previous path command of original path\n\n      var ii = p.length;\n\n      for (var i = 0; i < ii; i++) {\n        if (p[i]) pfirst = p[i][0]; // save current path command\n\n        if (pfirst !== 'C') {\n          // C is not saved yet, because it may be result of conversion\n          pcoms[i] = pfirst; // Save current path command\n\n          if (i > 0) pcom = pcoms[i - 1]; // Get previous path command pcom\n        }\n\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n        if (pcoms[i] !== 'A' && pfirst === 'C') pcoms[i] = 'C'; // 'A' is the only command\n        // which may produce multiple 'C's\n        // so we have to make sure that 'C' is also 'C' in original path\n\n        fixArc(p, i); // fixArc adds also the right amount of 'A's to pcoms\n\n        var seg = p[i];\n        var seglen = seg.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n      } // make sure normalized path data string starts with an M segment\n\n\n      if (!p[0][0] || p[0][0] !== 'M') {\n        p.unshift(['M', 0, 0]);\n      }\n\n      return p;\n    }\n\n    return function (pathData) {\n      return normalize(pathData).join(',').split(',').join(' ');\n    };\n  }();\n\n  V.namespace = ns;\n  V.g = g;\n  return V;\n}();\n\nexport default V;","map":{"version":3,"names":["g","V","hasSvg","window","SVGAngle","document","implementation","hasFeature","Error","ns","svg","xmlns","xml","xlink","xhtml","SVGVersion","math","Math","PI","atan2","sqrt","min","max","cos","sin","el","attrs","children","apply","Object","create","prototype","arguments","isV","node","isString","trim","toLowerCase","createSvgDocument","svgDoc","childNodes","length","arrayOfVels","i","len","childNode","push","importNode","firstChild","createElementNS","ensureId","setAttributes","append","VPrototype","defineProperty","enumerable","get","id","set","getTransformToElement","target","isSVGGraphicsElement","targetCTM","toNode","getScreenCTM","nodeCTM","inverse","multiply","createSVGMatrix","transform","matrix","opt","isUndefined","transformStringToMatrix","attr","absolute","matrixToTransformString","svgTransform","createSVGTransform","baseVal","appendItem","translate","tx","ty","transformAttr","parseTransformString","value","replace","newTx","newTy","newTranslate","rotate","angle","cx","cy","newAngle","newOrigin","undefined","newRotate","scale","sx","sy","newScale","bbox","withoutTransformations","box","ownerSVGElement","Rect","getBBox","e","x","clientLeft","y","clientTop","width","clientWidth","height","clientHeight","transformRect","options","outputBBox","recursive","n","currentChild","childBBox","union","createTextPathNode","vel","textPathElement","d","linkedPath","appendTo","defs","isObject","annotateTextLine","lineNode","lineAnnotations","includeAnnotationIndices","eol","lineHeight","baseSize","maxFontSize","fontMetrics","lastJ","j","annotation","fontSize","annotationAttrs","vTSpan","tspanNode","t","textContent","annotationClass","addClass","annotations","parseFloat","isFinite","createTextNode","appendChild","emRegex","convertEmToPx","em","numerical","test","calculateDY","alignment","linesMetrics","baseSizePx","Array","isArray","lineMetrics","flMaxFont","rLineHeights","lineHeightPx","iLineHeight","llMaxFont","dy","text","content","sanitizeText","displayEmpty","textPath","verticalAnchor","textVerticalAnchor","namedVerticalAnchor","iai","defaultLineHeight","autoLineHeight","empty","doc","containerNode","createDocumentFragment","offset","lines","split","annotatedY","lastI","lineClassName","line","annotateString","lineNodeStyle","style","fillOpacity","strokeOpacity","setAttribute","className","rh","removeAttr","name","qualifiedName","qualifyAttr","hasAttributeNS","local","removeAttributeNS","hasAttribute","removeAttribute","attributes","getAttribute","attrName","hasOwnProperty","normalizePath","tagName","normalizePathData","remove","parentNode","removeChild","key","els","prepend","child","before","parent","insertBefore","SVGSVGElement","toUpperCase","context","defsNode","getElementsByTagName","clone","cloneNode","uniqueId","findOne","selector","found","querySelector","find","vels","nodes","querySelectorAll","outputArray","nodeType","index","previousSibling","findParentByClass","terminator","hasClass","contains","a","b","bup","compareDocumentPosition","toLocalPoint","p","createSVGPoint","globalPoint","matrixTransform","globalToLocalMatrix","translateCenterToPoint","center","translateAndAutoOrient","position","reference","Point","translateToOrigin","setTranslate","rotateAroundOrigin","angleBetween","setRotate","translateFromOrigin","finalPosition","move","ctm","setMatrix","animateAlongPath","path","animateMotion","mpath","beginElement","documentElement","animation","animators","animationID","id2anim","targets","getTargets","animator","Animator","register","RegExp","prevClasses","removeClass","newClasses","toggleClass","toAdd","toRemove","sample","interval","getTotalLength","samples","distance","getPointAtLength","convertToPath","convertToPathData","convertLineToPathData","convertPolygonToPathData","convertPolylineToPathData","convertEllipseToPathData","convertCircleToPathData","convertRectToPathData","toGeometryShape","r","rx","ry","points","x1","x2","y1","y2","Ellipse","getPointsFromSvgNode","Polyline","Path","isDataSupported","Line","findIntersection","ref","intersectionWithLineFromCenterToPoint","spot","gRect","rectMatrix","rectMatrixComponents","decomposeMatrix","resetRotation","rotation","rect","pathNode","minDistance","Infinity","closestSamples","gp","centerDistance","refDistance","sort","setAttributeNS","XMLString","parseXML","async","createSVGStyle","stylesheet","type","createCDATASection","data","createDocument","idCounter","nodeName","parser","DOMParser","parseFromString","error","indexOf","combinedKey","transformRegex","transformSeparatorRegex","transformationListRegex","transformationMatrix","matches","match","transformationString","transformationMatch","args","scaleNonUniform","skewX","skewY","c","f","separator","decomposedMatrix","translateX","translateY","scaleX","scaleY","transformations","join","translateMatch","rotateMatch","scaleMatch","parseInt","deltaTransformPoint","point","dx","px","py","matrixToScale","matrixToRotate","normalizeAngle","toDeg","matrixToTranslate","object","isVElement","SVGElement","svgDocument","svgMatrix","component","SVGMatrix","createSVGTransformFromMatrix","corner1","corner2","corner3","corner4","minX","maxX","minY","maxY","transformPoint","transformLine","l","start","end","transformPolyline","inPoints","outPoints","styleToObject","styleString","ret","styles","pair","createSlicePathData","innerRadius","outerRadius","startAngle","endAngle","svgArcMax","r0","r1","a0","a1","da","df","c0","s0","c1","s1","mergeAttrs","compacted","batch","item","prev","JSON","stringify","findAnnotationsAtIndex","forEach","findAnnotationsBetweenIndexes","shiftAnnotations","polygon","svgPointsToPath","polyline","nodePoints","numberOfItems","getItem","KAPPA","circle","cd","ellipse","cdx","cdy","rectToPath","topRx","bottomRx","topRy","bottomRy","spaces","pathCommand","pathValues","tan","asin","abs","q2c","ax","ay","_13","_23","rad","X","Y","a2c","large_arc_flag","sweep_flag","_120","res","xy","h","rx2","ry2","k","f1","toFixed","f2","f2old","x2old","y2old","c2","s2","hx","hy","m1","m2","m3","m4","concat","newres","ii","parsePathString","pathString","paramCounts","m","q","s","v","z","String","params","splice","pathToAbsolute","pathArray","mx","my","pa0","pa","jj","kk","normalize","bx","by","qx","qy","processPath","pcom","nx","ny","T","Q","slice","fixArc","pp","shift","pi","pcoms","pfirst","seg","seglen","unshift","pathData","namespace"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/V/index.mjs"],"sourcesContent":["// Vectorizer.\n// -----------\n\n// A tiny library for making your life easier when dealing with SVG.\n// The only Vectorizer dependency is the Geometry library.\n\nimport * as g from '../g/index.mjs';\n\nconst V = (function() {\n\n    var hasSvg = typeof window === 'object' &&\n        !!(\n            window.SVGAngle ||\n            document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')\n        );\n\n    // SVG support is required.\n    if (!hasSvg) {\n\n        // Return a function that throws an error when it is used.\n        return function() {\n            throw new Error('SVG is required to use Vectorizer.');\n        };\n    }\n\n    // XML namespaces.\n    var ns = {\n        svg: 'http://www.w3.org/2000/svg',\n        xmlns: 'http://www.w3.org/2000/xmlns/',\n        xml: 'http://www.w3.org/XML/1998/namespace',\n        xlink: 'http://www.w3.org/1999/xlink',\n        xhtml: 'http://www.w3.org/1999/xhtml'\n    };\n\n    var SVGVersion = '1.1';\n\n    // Declare shorthands to the most used math functions.\n    var math = Math;\n    var PI = math.PI;\n    var atan2 = math.atan2;\n    var sqrt = math.sqrt;\n    var min = math.min;\n    var max = math.max;\n    var cos = math.cos;\n    var sin = math.sin;\n\n    var V = function(el, attrs, children) {\n\n        // This allows using V() without the new keyword.\n        if (!(this instanceof V)) {\n            return V.apply(Object.create(V.prototype), arguments);\n        }\n\n        if (!el) return;\n\n        if (V.isV(el)) {\n            el = el.node;\n        }\n\n        attrs = attrs || {};\n\n        if (V.isString(el)) {\n\n            el = el.trim();\n\n            if (el.toLowerCase() === 'svg') {\n\n                // Create a new SVG canvas.\n                el = V.createSvgDocument();\n\n            } else if (el[0] === '<') {\n\n                // Create element from an SVG string.\n                // Allows constructs of type: `document.appendChild(V('<rect></rect>').node)`.\n\n                var svgDoc = V.createSvgDocument(el);\n\n                // Note that `V()` might also return an array should the SVG string passed as\n                // the first argument contain more than one root element.\n                if (svgDoc.childNodes.length > 1) {\n\n                    // Map child nodes to `V`s.\n                    var arrayOfVels = [];\n                    var i, len;\n\n                    for (i = 0, len = svgDoc.childNodes.length; i < len; i++) {\n\n                        var childNode = svgDoc.childNodes[i];\n                        arrayOfVels.push(new V(document.importNode(childNode, true)));\n                    }\n\n                    return arrayOfVels;\n                }\n\n                el = document.importNode(svgDoc.firstChild, true);\n\n            } else {\n\n                el = document.createElementNS(ns.svg, el);\n            }\n\n            V.ensureId(el);\n        }\n\n        this.node = el;\n\n        this.setAttributes(attrs);\n\n        if (children) {\n            this.append(children);\n        }\n\n        return this;\n    };\n\n    var VPrototype = V.prototype;\n\n    Object.defineProperty(VPrototype, 'id', {\n        enumerable: true,\n        get: function() {\n            return this.node.id;\n        },\n        set: function(id) {\n            this.node.id = id;\n        }\n    });\n\n    /**\n     * @param {SVGGElement} toElem\n     * @returns {SVGMatrix}\n     */\n    VPrototype.getTransformToElement = function(target) {\n        var node = this.node;\n        if (V.isSVGGraphicsElement(target) && V.isSVGGraphicsElement(node)) {\n            var targetCTM = V.toNode(target).getScreenCTM();\n            var nodeCTM = node.getScreenCTM();\n            if (targetCTM && nodeCTM) {\n                return targetCTM.inverse().multiply(nodeCTM);\n            }\n        }\n        // Could not get actual transformation matrix\n        return V.createSVGMatrix();\n    };\n\n    /**\n     * @param {SVGMatrix} matrix\n     * @param {Object=} opt\n     * @returns {Vectorizer|SVGMatrix} Setter / Getter\n     */\n    VPrototype.transform = function(matrix, opt) {\n\n        var node = this.node;\n        if (V.isUndefined(matrix)) {\n            return V.transformStringToMatrix(this.attr('transform'));\n        }\n\n        if (opt && opt.absolute) {\n            return this.attr('transform', V.matrixToTransformString(matrix));\n        }\n\n        var svgTransform = V.createSVGTransform(matrix);\n        node.transform.baseVal.appendItem(svgTransform);\n        return this;\n    };\n\n    VPrototype.translate = function(tx, ty, opt) {\n\n        opt = opt || {};\n        ty = ty || 0;\n\n        var transformAttr = this.attr('transform') || '';\n        var transform = V.parseTransformString(transformAttr);\n        transformAttr = transform.value;\n        // Is it a getter?\n        if (V.isUndefined(tx)) {\n            return transform.translate;\n        }\n\n        transformAttr = transformAttr.replace(/translate\\([^)]*\\)/g, '').trim();\n\n        var newTx = opt.absolute ? tx : transform.translate.tx + tx;\n        var newTy = opt.absolute ? ty : transform.translate.ty + ty;\n        var newTranslate = 'translate(' + newTx + ',' + newTy + ')';\n\n        // Note that `translate()` is always the first transformation. This is\n        // usually the desired case.\n        this.attr('transform', (newTranslate + ' ' + transformAttr).trim());\n        return this;\n    };\n\n    VPrototype.rotate = function(angle, cx, cy, opt) {\n\n        opt = opt || {};\n\n        var transformAttr = this.attr('transform') || '';\n        var transform = V.parseTransformString(transformAttr);\n        transformAttr = transform.value;\n\n        // Is it a getter?\n        if (V.isUndefined(angle)) {\n            return transform.rotate;\n        }\n\n        transformAttr = transformAttr.replace(/rotate\\([^)]*\\)/g, '').trim();\n\n        angle %= 360;\n\n        var newAngle = opt.absolute ? angle : transform.rotate.angle + angle;\n        var newOrigin = (cx !== undefined && cy !== undefined) ? ',' + cx + ',' + cy : '';\n        var newRotate = 'rotate(' + newAngle + newOrigin + ')';\n\n        this.attr('transform', (transformAttr + ' ' + newRotate).trim());\n        return this;\n    };\n\n    // Note that `scale` as the only transformation does not combine with previous values.\n    VPrototype.scale = function(sx, sy) {\n\n        sy = V.isUndefined(sy) ? sx : sy;\n\n        var transformAttr = this.attr('transform') || '';\n        var transform = V.parseTransformString(transformAttr);\n        transformAttr = transform.value;\n\n        // Is it a getter?\n        if (V.isUndefined(sx)) {\n            return transform.scale;\n        }\n\n        transformAttr = transformAttr.replace(/scale\\([^)]*\\)/g, '').trim();\n\n        var newScale = 'scale(' + sx + ',' + sy + ')';\n\n        this.attr('transform', (transformAttr + ' ' + newScale).trim());\n        return this;\n    };\n\n    // Get SVGRect that contains coordinates and dimension of the real bounding box,\n    // i.e. after transformations are applied.\n    // If `target` is specified, bounding box will be computed relatively to `target` element.\n    VPrototype.bbox = function(withoutTransformations, target) {\n\n        var box;\n        var node = this.node;\n        var ownerSVGElement = node.ownerSVGElement;\n\n        // If the element is not in the live DOM, it does not have a bounding box defined and\n        // so fall back to 'zero' dimension element.\n        if (!ownerSVGElement) {\n            return new g.Rect(0, 0, 0, 0);\n        }\n\n        try {\n\n            box = node.getBBox();\n\n        } catch (e) {\n\n            // Fallback for IE.\n            box = {\n                x: node.clientLeft,\n                y: node.clientTop,\n                width: node.clientWidth,\n                height: node.clientHeight\n            };\n        }\n\n        if (withoutTransformations) {\n            return new g.Rect(box);\n        }\n\n        var matrix = this.getTransformToElement(target || ownerSVGElement);\n\n        return V.transformRect(box, matrix);\n    };\n\n    // Returns an SVGRect that contains coordinates and dimensions of the real bounding box,\n    // i.e. after transformations are applied.\n    // Fixes a browser implementation bug that returns incorrect bounding boxes for groups of svg elements.\n    // Takes an (Object) `opt` argument (optional) with the following attributes:\n    // (Object) `target` (optional): if not undefined, transform bounding boxes relative to `target`; if undefined, transform relative to this\n    // (Boolean) `recursive` (optional): if true, recursively enter all groups and get a union of element bounding boxes (svg bbox fix); if false or undefined, return result of native function this.node.getBBox();\n    VPrototype.getBBox = function(opt) {\n\n        var options = {};\n\n        var outputBBox;\n        var node = this.node;\n        var ownerSVGElement = node.ownerSVGElement;\n\n        // If the element is not in the live DOM, it does not have a bounding box defined and\n        // so fall back to 'zero' dimension element.\n        // If the element is not an SVGGraphicsElement, we could not measure the bounding box either\n        if (!ownerSVGElement || !V.isSVGGraphicsElement(node)) {\n            return new g.Rect(0, 0, 0, 0);\n        }\n\n        if (opt) {\n            if (opt.target) { // check if target exists\n                options.target = V.toNode(opt.target); // works for V objects, jquery objects, and node objects\n            }\n            if (opt.recursive) {\n                options.recursive = opt.recursive;\n            }\n        }\n\n        if (!options.recursive) {\n            try {\n                outputBBox = node.getBBox();\n            } catch (e) {\n                // Fallback for IE.\n                outputBBox = {\n                    x: node.clientLeft,\n                    y: node.clientTop,\n                    width: node.clientWidth,\n                    height: node.clientHeight\n                };\n            }\n\n            if (!options.target) {\n                // transform like this (that is, not at all)\n                return new g.Rect(outputBBox);\n            } else {\n                // transform like target\n                var matrix = this.getTransformToElement(options.target);\n                return V.transformRect(outputBBox, matrix);\n            }\n        } else { // if we want to calculate the bbox recursively\n            // browsers report correct bbox around svg elements (one that envelops the path lines tightly)\n            // but some browsers fail to report the same bbox when the elements are in a group (returning a looser bbox that also includes control points, like node.getClientRect())\n            // this happens even if we wrap a single svg element into a group!\n            // this option setting makes the function recursively enter all the groups from this and deeper, get bboxes of the elements inside, then return a union of those bboxes\n\n            var children = this.children();\n            var n = children.length;\n\n            if (n === 0) {\n                return this.getBBox({ target: options.target, recursive: false });\n            }\n\n            // recursion's initial pass-through setting:\n            // recursive passes-through just keep the target as whatever was set up here during the initial pass-through\n            if (!options.target) {\n                // transform children/descendants like this (their parent/ancestor)\n                options.target = this;\n            } // else transform children/descendants like target\n\n            for (var i = 0; i < n; i++) {\n                var currentChild = children[i];\n\n                var childBBox;\n\n                // if currentChild is not a group element, get its bbox with a nonrecursive call\n                if (currentChild.children().length === 0) {\n                    childBBox = currentChild.getBBox({ target: options.target, recursive: false });\n                } else {\n                    // if currentChild is a group element (determined by checking the number of children), enter it with a recursive call\n                    childBBox = currentChild.getBBox({ target: options.target, recursive: true });\n                }\n\n                if (!outputBBox) {\n                    // if this is the first iteration\n                    outputBBox = childBBox;\n                } else {\n                    // make a new bounding box rectangle that contains this child's bounding box and previous bounding box\n                    outputBBox = outputBBox.union(childBBox);\n                }\n            }\n\n            return outputBBox;\n        }\n    };\n\n    // Text() helpers\n\n    function createTextPathNode(attrs, vel) {\n        attrs || (attrs = {});\n        var textPathElement = V('textPath');\n        var d = attrs.d;\n        if (d && attrs['xlink:href'] === undefined) {\n            // If `opt.attrs` is a plain string, consider it to be directly the\n            // SVG path data for the text to go along (this is a shortcut).\n            // Otherwise if it is an object and contains the `d` property, then this is our path.\n            // Wrap the text in the SVG <textPath> element that points\n            // to a path defined by `opt.attrs` inside the `<defs>` element.\n            var linkedPath = V('path').attr('d', d).appendTo(vel.defs());\n            textPathElement.attr('xlink:href', '#' + linkedPath.id);\n        }\n        if (V.isObject(attrs)) {\n            // Set attributes on the `<textPath>`. The most important one\n            // is the `xlink:href` that points to our newly created `<path/>` element in `<defs/>`.\n            // Note that we also allow the following construct:\n            // `t.text('my text', { textPath: { 'xlink:href': '#my-other-path' } })`.\n            // In other words, one can completely skip the auto-creation of the path\n            // and use any other arbitrary path that is in the document.\n            textPathElement.attr(attrs);\n        }\n        return textPathElement.node;\n    }\n\n    function annotateTextLine(lineNode, lineAnnotations, opt) {\n        opt || (opt = {});\n        var includeAnnotationIndices = opt.includeAnnotationIndices;\n        var eol = opt.eol;\n        var lineHeight = opt.lineHeight;\n        var baseSize = opt.baseSize;\n        var maxFontSize = 0;\n        var fontMetrics = {};\n        var lastJ = lineAnnotations.length - 1;\n        for (var j = 0; j <= lastJ; j++) {\n            var annotation = lineAnnotations[j];\n            var fontSize = null;\n            if (V.isObject(annotation)) {\n                var annotationAttrs = annotation.attrs;\n                var vTSpan = V('tspan', annotationAttrs);\n                var tspanNode = vTSpan.node;\n                var t = annotation.t;\n                if (eol && j === lastJ) t += eol;\n                tspanNode.textContent = t;\n                // Per annotation className\n                var annotationClass = annotationAttrs['class'];\n                if (annotationClass) vTSpan.addClass(annotationClass);\n                // If `opt.includeAnnotationIndices` is `true`,\n                // set the list of indices of all the applied annotations\n                // in the `annotations` attribute. This list is a comma\n                // separated list of indices.\n                if (includeAnnotationIndices) vTSpan.attr('annotations', annotation.annotations);\n                // Check for max font size\n                fontSize = parseFloat(annotationAttrs['font-size']);\n                if (!isFinite(fontSize)) fontSize = baseSize;\n                if (fontSize && fontSize > maxFontSize) maxFontSize = fontSize;\n            } else {\n                if (eol && j === lastJ) annotation += eol;\n                tspanNode = document.createTextNode(annotation || ' ');\n                if (baseSize && baseSize > maxFontSize) maxFontSize = baseSize;\n            }\n            lineNode.appendChild(tspanNode);\n        }\n\n        if (maxFontSize) fontMetrics.maxFontSize = maxFontSize;\n        if (lineHeight) {\n            fontMetrics.lineHeight = lineHeight;\n        } else if (maxFontSize) {\n            fontMetrics.lineHeight = (maxFontSize * 1.2);\n        }\n        return fontMetrics;\n    }\n\n    var emRegex = /em$/;\n\n    function convertEmToPx(em, fontSize) {\n        var numerical = parseFloat(em);\n        if (emRegex.test(em)) return numerical * fontSize;\n        return numerical;\n    }\n\n    function calculateDY(alignment, linesMetrics, baseSizePx, lineHeight) {\n        if (!Array.isArray(linesMetrics)) return 0;\n        var n = linesMetrics.length;\n        if (!n) return 0;\n        var lineMetrics = linesMetrics[0];\n        var flMaxFont = convertEmToPx(lineMetrics.maxFontSize, baseSizePx) || baseSizePx;\n        var rLineHeights = 0;\n        var lineHeightPx = convertEmToPx(lineHeight, baseSizePx);\n        for (var i = 1; i < n; i++) {\n            lineMetrics = linesMetrics[i];\n            var iLineHeight = convertEmToPx(lineMetrics.lineHeight, baseSizePx) || lineHeightPx;\n            rLineHeights += iLineHeight;\n        }\n        var llMaxFont = convertEmToPx(lineMetrics.maxFontSize, baseSizePx) || baseSizePx;\n        var dy;\n        switch (alignment) {\n            case 'middle':\n                dy = (flMaxFont / 2) - (0.15 * llMaxFont) - (rLineHeights / 2);\n                break;\n            case 'bottom':\n                dy = -(0.25 * llMaxFont) - rLineHeights;\n                break;\n            default:\n            case 'top':\n                dy = (0.8 * flMaxFont);\n                break;\n        }\n        return dy;\n    }\n\n    VPrototype.text = function(content, opt) {\n\n        if (content && typeof content !== 'string') throw new Error('Vectorizer: text() expects the first argument to be a string.');\n\n        // Replace all spaces with the Unicode No-break space (http://www.fileformat.info/info/unicode/char/a0/index.htm).\n        // IE would otherwise collapse all spaces into one.\n        content = V.sanitizeText(content);\n        opt || (opt = {});\n        // Should we allow the text to be selected?\n        var displayEmpty = opt.displayEmpty;\n        // End of Line character\n        var eol = opt.eol;\n        // Text along path\n        var textPath = opt.textPath;\n        // Vertical shift\n        var verticalAnchor = opt.textVerticalAnchor;\n        var namedVerticalAnchor = (verticalAnchor === 'middle' || verticalAnchor === 'bottom' || verticalAnchor === 'top');\n        // Horizontal shift applied to all the lines but the first.\n        var x = opt.x;\n        if (x === undefined) x = this.attr('x') || 0;\n        // Annotations\n        var iai = opt.includeAnnotationIndices;\n        var annotations = opt.annotations;\n        if (annotations && !V.isArray(annotations)) annotations = [annotations];\n        // Shift all the <tspan> but first by one line (`1em`)\n        var defaultLineHeight = opt.lineHeight;\n        var autoLineHeight = (defaultLineHeight === 'auto');\n        var lineHeight = (autoLineHeight) ? '1.5em' : (defaultLineHeight || '1em');\n        // Clearing the element\n        this.empty();\n        this.attr({\n            // Preserve spaces. In other words, we do not want consecutive spaces to get collapsed to one.\n            'xml:space': 'preserve',\n            // An empty text gets rendered into the DOM in webkit-based browsers.\n            // In order to unify this behaviour across all browsers\n            // we rather hide the text element when it's empty.\n            'display': (content || displayEmpty) ? null : 'none'\n        });\n\n        // Set default font-size if none\n        var fontSize = parseFloat(this.attr('font-size'));\n        if (!fontSize) {\n            fontSize = 16;\n            if (namedVerticalAnchor || annotations) this.attr('font-size', fontSize);\n        }\n\n        var doc = document;\n        var containerNode;\n        if (textPath) {\n            // Now all the `<tspan>`s will be inside the `<textPath>`.\n            if (typeof textPath === 'string') textPath = { d: textPath };\n            containerNode = createTextPathNode(textPath, this);\n        } else {\n            containerNode = doc.createDocumentFragment();\n        }\n        var offset = 0;\n        var lines = content.split('\\n');\n        var linesMetrics = [];\n        var annotatedY;\n        for (var i = 0, lastI = lines.length - 1; i <= lastI; i++) {\n            var dy = lineHeight;\n            var lineClassName = 'v-line';\n            var lineNode = doc.createElementNS(ns.svg, 'tspan');\n            var line = lines[i];\n            var lineMetrics;\n            if (line) {\n                if (annotations) {\n                    // Find the *compacted* annotations for this line.\n                    var lineAnnotations = V.annotateString(line, annotations, {\n                        offset: -offset,\n                        includeAnnotationIndices: iai\n                    });\n                    lineMetrics = annotateTextLine(lineNode, lineAnnotations, {\n                        includeAnnotationIndices: iai,\n                        eol: (i !== lastI && eol),\n                        lineHeight: (autoLineHeight) ? null : lineHeight,\n                        baseSize: fontSize\n                    });\n                    // Get the line height based on the biggest font size in the annotations for this line.\n                    var iLineHeight = lineMetrics.lineHeight;\n                    if (iLineHeight && autoLineHeight && i !== 0) dy = iLineHeight;\n                    if (i === 0) annotatedY = lineMetrics.maxFontSize * 0.8;\n                } else {\n                    if (eol && i !== lastI) line += eol;\n                    lineNode.textContent = line;\n                }\n            } else {\n                // Make sure the textContent is never empty. If it is, add a dummy\n                // character and make it invisible, making the following lines correctly\n                // relatively positioned. `dy=1em` won't work with empty lines otherwise.\n                lineNode.textContent = '-';\n                lineClassName += ' v-empty-line';\n                // 'opacity' needs to be specified with fill, stroke. Opacity without specification\n                // is not applied in Firefox\n                var lineNodeStyle = lineNode.style;\n                lineNodeStyle.fillOpacity = 0;\n                lineNodeStyle.strokeOpacity = 0;\n                if (annotations) lineMetrics = {};\n            }\n            if (lineMetrics) linesMetrics.push(lineMetrics);\n            if (i > 0) lineNode.setAttribute('dy', dy);\n            // Firefox requires 'x' to be set on the first line when inside a text path\n            if (i > 0 || textPath) lineNode.setAttribute('x', x);\n            lineNode.className.baseVal = lineClassName;\n            containerNode.appendChild(lineNode);\n            offset += line.length + 1;      // + 1 = newline character.\n        }\n        // Y Alignment calculation\n        if (namedVerticalAnchor) {\n            if (annotations) {\n                dy = calculateDY(verticalAnchor, linesMetrics, fontSize, lineHeight);\n            } else if (verticalAnchor === 'top') {\n                // A shortcut for top alignment. It does not depend on font-size nor line-height\n                dy = '0.8em';\n            } else {\n                var rh; // remaining height\n                if (lastI > 0) {\n                    rh = parseFloat(lineHeight) || 1;\n                    rh *= lastI;\n                    if (!emRegex.test(lineHeight)) rh /= fontSize;\n                } else {\n                    // Single-line text\n                    rh = 0;\n                }\n                switch (verticalAnchor) {\n                    case 'middle':\n                        dy = (0.3 - (rh / 2)) + 'em';\n                        break;\n                    case 'bottom':\n                        dy = (-rh - 0.3) + 'em';\n                        break;\n                }\n            }\n        } else {\n            if (verticalAnchor === 0) {\n                dy = '0em';\n            } else if (verticalAnchor) {\n                dy = verticalAnchor;\n            } else {\n                // No vertical anchor is defined\n                dy = 0;\n                // Backwards compatibility - we change the `y` attribute instead of `dy`.\n                if (this.attr('y') === null) this.attr('y', annotatedY || '0.8em');\n            }\n        }\n        containerNode.firstChild.setAttribute('dy', dy);\n        // Appending lines to the element.\n        this.append(containerNode);\n        return this;\n    };\n\n    /**\n     * @public\n     * @param {string} name\n     * @returns {Vectorizer}\n     */\n    VPrototype.removeAttr = function(name) {\n\n        var qualifiedName = V.qualifyAttr(name);\n        var el = this.node;\n\n        if (qualifiedName.ns) {\n            if (el.hasAttributeNS(qualifiedName.ns, qualifiedName.local)) {\n                el.removeAttributeNS(qualifiedName.ns, qualifiedName.local);\n            }\n        } else if (el.hasAttribute(name)) {\n            el.removeAttribute(name);\n        }\n        return this;\n    };\n\n    VPrototype.attr = function(name, value) {\n\n        if (V.isUndefined(name)) {\n\n            // Return all attributes.\n            var attributes = this.node.attributes;\n            var attrs = {};\n\n            for (var i = 0; i < attributes.length; i++) {\n                attrs[attributes[i].name] = attributes[i].value;\n            }\n\n            return attrs;\n        }\n\n        if (V.isString(name) && V.isUndefined(value)) {\n            return this.node.getAttribute(name);\n        }\n\n        if (typeof name === 'object') {\n\n            for (var attrName in name) {\n                if (name.hasOwnProperty(attrName)) {\n                    this.setAttribute(attrName, name[attrName]);\n                }\n            }\n\n        } else {\n\n            this.setAttribute(name, value);\n        }\n\n        return this;\n    };\n\n    VPrototype.normalizePath = function() {\n\n        var tagName = this.tagName();\n        if (tagName === 'PATH') {\n            this.attr('d', V.normalizePathData(this.attr('d')));\n        }\n\n        return this;\n    };\n\n    VPrototype.remove = function() {\n\n        if (this.node.parentNode) {\n            this.node.parentNode.removeChild(this.node);\n        }\n\n        return this;\n    };\n\n    VPrototype.empty = function() {\n\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n\n        return this;\n    };\n\n    /**\n     * @private\n     * @param {object} attrs\n     * @returns {Vectorizer}\n     */\n    VPrototype.setAttributes = function(attrs) {\n\n        for (var key in attrs) {\n            if (attrs.hasOwnProperty(key)) {\n                this.setAttribute(key, attrs[key]);\n            }\n        }\n\n        return this;\n    };\n\n    VPrototype.append = function(els) {\n\n        if (!V.isArray(els)) {\n            els = [els];\n        }\n\n        for (var i = 0, len = els.length; i < len; i++) {\n            this.node.appendChild(V.toNode(els[i])); // lgtm [js/xss-through-dom]\n        }\n\n        return this;\n    };\n\n    VPrototype.prepend = function(els) {\n\n        var child = this.node.firstChild;\n        return child ? V(child).before(els) : this.append(els);\n    };\n\n    VPrototype.before = function(els) {\n\n        var node = this.node;\n        var parent = node.parentNode;\n\n        if (parent) {\n\n            if (!V.isArray(els)) {\n                els = [els];\n            }\n\n            for (var i = 0, len = els.length; i < len; i++) {\n                parent.insertBefore(V.toNode(els[i]), node);\n            }\n        }\n\n        return this;\n    };\n\n    VPrototype.appendTo = function(node) {\n        V.toNode(node).appendChild(this.node); // lgtm [js/xss-through-dom]\n        return this;\n    };\n\n    VPrototype.svg = function() {\n\n        return this.node instanceof window.SVGSVGElement ? this : V(this.node.ownerSVGElement);\n    };\n\n    VPrototype.tagName = function() {\n\n        return this.node.tagName.toUpperCase();\n    };\n\n    VPrototype.defs = function() {\n        var context = this.svg() || this;\n        var defsNode = context.node.getElementsByTagName('defs')[0];\n        if (defsNode) return V(defsNode);\n        return V('defs').appendTo(context);\n    };\n\n    VPrototype.clone = function() {\n\n        var clone = V(this.node.cloneNode(true/* deep */));\n        // Note that clone inherits also ID. Therefore, we need to change it here.\n        clone.node.id = V.uniqueId();\n        return clone;\n    };\n\n    VPrototype.findOne = function(selector) {\n\n        var found = this.node.querySelector(selector);\n        return found ? V(found) : undefined;\n    };\n\n    VPrototype.find = function(selector) {\n\n        var vels = [];\n        var nodes = this.node.querySelectorAll(selector);\n\n        if (nodes) {\n\n            // Map DOM elements to `V`s.\n            for (var i = 0; i < nodes.length; i++) {\n                vels.push(V(nodes[i]));\n            }\n        }\n\n        return vels;\n    };\n\n    // Returns an array of V elements made from children of this.node.\n    VPrototype.children = function() {\n\n        var children = this.node.childNodes;\n\n        var outputArray = [];\n        for (var i = 0; i < children.length; i++) {\n            var currentChild = children[i];\n            if (currentChild.nodeType === 1) {\n                outputArray.push(V(children[i]));\n            }\n        }\n        return outputArray;\n    };\n\n    // Returns the V element from parentNode of this.node.\n    VPrototype.parent = function() {\n        return V(this.node.parentNode) || null;\n    },\n\n    // Find an index of an element inside its container.\n    VPrototype.index = function() {\n\n        var index = 0;\n        var node = this.node.previousSibling;\n\n        while (node) {\n            // nodeType 1 for ELEMENT_NODE\n            if (node.nodeType === 1) index++;\n            node = node.previousSibling;\n        }\n\n        return index;\n    };\n\n    VPrototype.findParentByClass = function(className, terminator) {\n\n        var ownerSVGElement = this.node.ownerSVGElement;\n        var node = this.node.parentNode;\n\n        while (node && node !== terminator && node !== ownerSVGElement) {\n\n            var vel = V(node);\n            if (vel.hasClass(className)) {\n                return vel;\n            }\n\n            node = node.parentNode;\n        }\n\n        return null;\n    };\n\n    // https://jsperf.com/get-common-parent\n    VPrototype.contains = function(el) {\n\n        var a = this.node;\n        var b = V.toNode(el);\n        var bup = b && b.parentNode;\n\n        return (a === bup) || !!(bup && bup.nodeType === 1 && (a.compareDocumentPosition(bup) & 16));\n    };\n\n    // Convert global point into the coordinate space of this element.\n    VPrototype.toLocalPoint = function(x, y) {\n\n        var svg = this.svg().node;\n\n        var p = svg.createSVGPoint();\n        p.x = x;\n        p.y = y;\n\n        try {\n\n            var globalPoint = p.matrixTransform(svg.getScreenCTM().inverse());\n            var globalToLocalMatrix = this.getTransformToElement(svg).inverse();\n\n        } catch (e) {\n            // IE9 throws an exception in odd cases. (`Unexpected call to method or property access`)\n            // We have to make do with the original coordianates.\n            return p;\n        }\n\n        return globalPoint.matrixTransform(globalToLocalMatrix);\n    };\n\n    VPrototype.translateCenterToPoint = function(p) {\n\n        var bbox = this.getBBox({ target: this.svg() });\n        var center = bbox.center();\n\n        this.translate(p.x - center.x, p.y - center.y);\n        return this;\n    };\n\n    // Efficiently auto-orient an element. This basically implements the orient=auto attribute\n    // of markers. The easiest way of understanding on what this does is to imagine the element is an\n    // arrowhead. Calling this method on the arrowhead makes it point to the `position` point while\n    // being auto-oriented (properly rotated) towards the `reference` point.\n    // `target` is the element relative to which the transformations are applied. Usually a viewport.\n    VPrototype.translateAndAutoOrient = function(position, reference, target) {\n\n        position = new g.Point(position);\n        reference =  new g.Point(reference);\n        target || (target = this.svg());\n\n        // Clean-up previously set transformations except the scale. If we didn't clean up the\n        // previous transformations then they'd add up with the old ones. Scale is an exception as\n        // it doesn't add up, consider: `this.scale(2).scale(2).scale(2)`. The result is that the\n        // element is scaled by the factor 2, not 8.\n        var scale = this.scale();\n        this.attr('transform', '');\n        var bbox = this.getBBox({ target: target }).scale(scale.sx, scale.sy);\n\n        // 1. Translate to origin.\n        var translateToOrigin = V.createSVGTransform();\n        translateToOrigin.setTranslate(-bbox.x - bbox.width / 2, -bbox.y - bbox.height / 2);\n\n        // 2. Rotate around origin.\n        var rotateAroundOrigin = V.createSVGTransform();\n        var angle = position.angleBetween(reference, position.clone().offset(1, 0));\n        if (angle) rotateAroundOrigin.setRotate(angle, 0, 0);\n\n        // 3. Translate to the `position` + the offset (half my width) towards the `reference` point.\n        var translateFromOrigin = V.createSVGTransform();\n        var finalPosition = position.clone().move(reference, bbox.width / 2);\n        translateFromOrigin.setTranslate(2 * position.x - finalPosition.x, 2 * position.y - finalPosition.y);\n\n        // 4. Get the current transformation matrix of this node\n        var ctm = this.getTransformToElement(target);\n\n        // 5. Apply transformations and the scale\n        var transform = V.createSVGTransform();\n        transform.setMatrix(\n            translateFromOrigin.matrix.multiply(\n                rotateAroundOrigin.matrix.multiply(\n                    translateToOrigin.matrix.multiply(\n                        ctm.scale(scale.sx, scale.sy)))));\n\n        this.attr('transform', V.matrixToTransformString(transform.matrix));\n\n        return this;\n    };\n\n    VPrototype.animateAlongPath = function(attrs, path) {\n\n        path = V.toNode(path);\n\n        var id = V.ensureId(path);\n        var animateMotion = V('animateMotion', attrs);\n        var mpath = V('mpath', { 'xlink:href': '#' + id });\n\n        animateMotion.append(mpath);\n\n        this.append(animateMotion);\n        try {\n            animateMotion.node.beginElement();\n        } catch (e) {\n            // Fallback for IE 9.\n            // Run the animation programmatically if FakeSmile (`http://leunen.me/fakesmile/`) present\n            if (document.documentElement.getAttribute('smiling') === 'fake') {\n                /* global getTargets:true, Animator:true, animators:true id2anim:true */\n                // Register the animation. (See `https://answers.launchpad.net/smil/+question/203333`)\n                var animation = animateMotion.node;\n                animation.animators = [];\n\n                var animationID = animation.getAttribute('id');\n                if (animationID) id2anim[animationID] = animation;\n\n                var targets = getTargets(animation);\n                for (var i = 0, len = targets.length; i < len; i++) {\n                    var target = targets[i];\n                    var animator = new Animator(animation, target, i);\n                    animators.push(animator);\n                    animation.animators[i] = animator;\n                    animator.register();\n                }\n            }\n        }\n        return this;\n    };\n\n    VPrototype.hasClass = function(className) {\n\n        return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(this.node.getAttribute('class'));\n    };\n\n    VPrototype.addClass = function(className) {\n\n        if (className && !this.hasClass(className)) {\n            var prevClasses = this.node.getAttribute('class') || '';\n            this.node.setAttribute('class', (prevClasses + ' ' + className).trim());\n        }\n\n        return this;\n    };\n\n    VPrototype.removeClass = function(className) {\n\n        if (className && this.hasClass(className)) {\n            var newClasses = this.node.getAttribute('class').replace(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)', 'g'), '$2');\n            this.node.setAttribute('class', newClasses);\n        }\n\n        return this;\n    };\n\n    VPrototype.toggleClass = function(className, toAdd) {\n\n        var toRemove = V.isUndefined(toAdd) ? this.hasClass(className) : !toAdd;\n\n        if (toRemove) {\n            this.removeClass(className);\n        } else {\n            this.addClass(className);\n        }\n\n        return this;\n    };\n\n    // Interpolate path by discrete points. The precision of the sampling\n    // is controlled by `interval`. In other words, `sample()` will generate\n    // a point on the path starting at the beginning of the path going to the end\n    // every `interval` pixels.\n    // The sampler can be very useful for e.g. finding intersection between two\n    // paths (finding the two closest points from two samples).\n    VPrototype.sample = function(interval) {\n\n        interval = interval || 1;\n        var node = this.node;\n        var length = node.getTotalLength();\n        var samples = [];\n        var distance = 0;\n        var sample;\n        while (distance < length) {\n            sample = node.getPointAtLength(distance);\n            samples.push({ x: sample.x, y: sample.y, distance: distance });\n            distance += interval;\n        }\n        return samples;\n    };\n\n    VPrototype.convertToPath = function() {\n\n        var path = V('path');\n        path.attr(this.attr());\n        var d = this.convertToPathData();\n        if (d) {\n            path.attr('d', d);\n        }\n        return path;\n    };\n\n    VPrototype.convertToPathData = function() {\n\n        var tagName = this.tagName();\n\n        switch (tagName) {\n            case 'PATH':\n                return this.attr('d');\n            case 'LINE':\n                return V.convertLineToPathData(this.node);\n            case 'POLYGON':\n                return V.convertPolygonToPathData(this.node);\n            case 'POLYLINE':\n                return V.convertPolylineToPathData(this.node);\n            case 'ELLIPSE':\n                return V.convertEllipseToPathData(this.node);\n            case 'CIRCLE':\n                return V.convertCircleToPathData(this.node);\n            case 'RECT':\n                return V.convertRectToPathData(this.node);\n        }\n\n        throw new Error(tagName + ' cannot be converted to PATH.');\n    };\n\n    V.prototype.toGeometryShape = function() {\n        var x, y, width, height, cx, cy, r, rx, ry, points, d, x1, x2, y1, y2;\n        switch (this.tagName()) {\n\n            case 'RECT':\n                x = parseFloat(this.attr('x')) || 0;\n                y = parseFloat(this.attr('y')) || 0;\n                width = parseFloat(this.attr('width')) || 0;\n                height = parseFloat(this.attr('height')) || 0;\n                return new g.Rect(x, y, width, height);\n\n            case 'CIRCLE':\n                cx = parseFloat(this.attr('cx')) || 0;\n                cy = parseFloat(this.attr('cy')) || 0;\n                r = parseFloat(this.attr('r')) || 0;\n                return new g.Ellipse({ x: cx, y: cy }, r, r);\n\n            case 'ELLIPSE':\n                cx = parseFloat(this.attr('cx')) || 0;\n                cy = parseFloat(this.attr('cy')) || 0;\n                rx = parseFloat(this.attr('rx')) || 0;\n                ry = parseFloat(this.attr('ry')) || 0;\n                return new g.Ellipse({ x: cx, y: cy }, rx, ry);\n\n            case 'POLYLINE':\n                points = V.getPointsFromSvgNode(this);\n                return new g.Polyline(points);\n\n            case 'POLYGON':\n                points = V.getPointsFromSvgNode(this);\n                if (points.length > 1) points.push(points[0]);\n                return new g.Polyline(points);\n\n            case 'PATH':\n                d = this.attr('d');\n                if (!g.Path.isDataSupported(d)) d = V.normalizePathData(d);\n                return new g.Path(d);\n\n            case 'LINE':\n                x1 = parseFloat(this.attr('x1')) || 0;\n                y1 = parseFloat(this.attr('y1')) || 0;\n                x2 = parseFloat(this.attr('x2')) || 0;\n                y2 = parseFloat(this.attr('y2')) || 0;\n                return new g.Line({ x: x1, y: y1 }, { x: x2, y: y2 });\n        }\n\n        // Anything else is a rectangle\n        return this.getBBox();\n    };\n\n    // Find the intersection of a line starting in the center\n    // of the SVG `node` ending in the point `ref`.\n    // `target` is an SVG element to which `node`s transformations are relative to.\n    // Note that `ref` point must be in the coordinate system of the `target` for this function to work properly.\n    // Returns a point in the `target` coordinate system (the same system as `ref` is in) if\n    // an intersection is found. Returns `undefined` otherwise.\n    VPrototype.findIntersection = function(ref, target) {\n\n        var svg = this.svg().node;\n        target = target || svg;\n        var bbox = this.getBBox({ target: target });\n        var center = bbox.center();\n\n        if (!bbox.intersectionWithLineFromCenterToPoint(ref)) return undefined;\n\n        var spot;\n        var tagName = this.tagName();\n\n        // Little speed up optimization for `<rect>` element. We do not do conversion\n        // to path element and sampling but directly calculate the intersection through\n        // a transformed geometrical rectangle.\n        if (tagName === 'RECT') {\n\n            var gRect = new g.Rect(\n                parseFloat(this.attr('x') || 0),\n                parseFloat(this.attr('y') || 0),\n                parseFloat(this.attr('width')),\n                parseFloat(this.attr('height'))\n            );\n            // Get the rect transformation matrix with regards to the SVG document.\n            var rectMatrix = this.getTransformToElement(target);\n            // Decompose the matrix to find the rotation angle.\n            var rectMatrixComponents = V.decomposeMatrix(rectMatrix);\n            // Now we want to rotate the rectangle back so that we\n            // can use `intersectionWithLineFromCenterToPoint()` passing the angle as the second argument.\n            var resetRotation = svg.createSVGTransform();\n            resetRotation.setRotate(-rectMatrixComponents.rotation, center.x, center.y);\n            var rect = V.transformRect(gRect, resetRotation.matrix.multiply(rectMatrix));\n            spot = (new g.Rect(rect)).intersectionWithLineFromCenterToPoint(ref, rectMatrixComponents.rotation);\n\n        } else if (tagName === 'PATH' || tagName === 'POLYGON' || tagName === 'POLYLINE' || tagName === 'CIRCLE' || tagName === 'ELLIPSE') {\n\n            var pathNode = (tagName === 'PATH') ? this : this.convertToPath();\n            var samples = pathNode.sample();\n            var minDistance = Infinity;\n            var closestSamples = [];\n\n            var i, sample, gp, centerDistance, refDistance, distance;\n\n            for (i = 0; i < samples.length; i++) {\n\n                sample = samples[i];\n                // Convert the sample point in the local coordinate system to the global coordinate system.\n                gp = V.createSVGPoint(sample.x, sample.y);\n                gp = gp.matrixTransform(this.getTransformToElement(target));\n                sample = new g.Point(gp);\n                centerDistance = sample.distance(center);\n                // Penalize a higher distance to the reference point by 10%.\n                // This gives better results. This is due to\n                // inaccuracies introduced by rounding errors and getPointAtLength() returns.\n                refDistance = sample.distance(ref) * 1.1;\n                distance = centerDistance + refDistance;\n\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    closestSamples = [{ sample: sample, refDistance: refDistance }];\n                } else if (distance < minDistance + 1) {\n                    closestSamples.push({ sample: sample, refDistance: refDistance });\n                }\n            }\n\n            closestSamples.sort(function(a, b) {\n                return a.refDistance - b.refDistance;\n            });\n\n            if (closestSamples[0]) {\n                spot = closestSamples[0].sample;\n            }\n        }\n\n        return spot;\n    };\n\n    /**\n     * @private\n     * @param {string} name\n     * @param {string} value\n     * @returns {Vectorizer}\n     */\n    VPrototype.setAttribute = function(name, value) {\n\n        var el = this.node;\n\n        if (value === null) {\n            this.removeAttr(name);\n            return this;\n        }\n\n        var qualifiedName = V.qualifyAttr(name);\n\n        if (qualifiedName.ns) {\n            // Attribute names can be namespaced. E.g. `image` elements\n            // have a `xlink:href` attribute to set the source of the image.\n            el.setAttributeNS(qualifiedName.ns, name, value);\n        } else if (name === 'id') {\n            el.id = value;\n        } else {\n            el.setAttribute(name, value);\n        }\n\n        return this;\n    };\n\n    // Create an SVG document element.\n    // If `content` is passed, it will be used as the SVG content of the `<svg>` root element.\n    V.createSvgDocument = function(content) {\n\n        if (content) {\n            const XMLString = `<svg xmlns=\"${ns.svg}\" xmlns:xlink=\"${ns.xlink}\" version=\"${SVGVersion}\">${content}</svg>`;\n            const { documentElement } = V.parseXML(XMLString, { async: false });\n            return documentElement;\n        }\n\n        const svg = document.createElementNS(ns.svg, 'svg');\n        svg.setAttributeNS(ns.xmlns, 'xmlns:xlink', ns.xlink);\n        svg.setAttribute('version', SVGVersion);\n        return svg;\n    };\n\n    V.createSVGStyle = function(stylesheet) {\n        const { node } = V('style', { type: 'text/css' }, [\n            V.createCDATASection(stylesheet)\n        ]);\n        return node;\n    },\n\n    V.createCDATASection = function(data = '') {\n        const xml = document.implementation.createDocument(null, 'xml', null);\n        return xml.createCDATASection(data);\n    };\n\n    V.idCounter = 0;\n\n    // A function returning a unique identifier for this client session with every call.\n    V.uniqueId = function() {\n\n        return 'v-' + (++V.idCounter);\n    };\n\n    V.toNode = function(el) {\n\n        return V.isV(el) ? el.node : (el.nodeName && el || el[0]);\n    };\n\n    V.ensureId = function(node) {\n\n        node = V.toNode(node);\n        return node.id || (node.id = V.uniqueId());\n    };\n\n    // Replace all spaces with the Unicode No-break space (http://www.fileformat.info/info/unicode/char/a0/index.htm).\n    // IE would otherwise collapse all spaces into one. This is used in the text() method but it is\n    // also exposed so that the programmer can use it in case he needs to. This is useful e.g. in tests\n    // when you want to compare the actual DOM text content without having to add the unicode character in\n    // the place of all spaces.\n    V.sanitizeText = function(text) {\n\n        return (text || '').replace(/ /g, '\\u00A0');\n    };\n\n    V.isUndefined = function(value) {\n\n        return typeof value === 'undefined';\n    };\n\n    V.isString = function(value) {\n\n        return typeof value === 'string';\n    };\n\n    V.isObject = function(value) {\n\n        return value && (typeof value === 'object');\n    };\n\n    V.isArray = Array.isArray;\n\n    V.parseXML = function(data, opt) {\n\n        opt = opt || {};\n\n        var xml;\n\n        try {\n            var parser = new DOMParser();\n\n            if (!V.isUndefined(opt.async)) {\n                parser.async = opt.async;\n            }\n\n            xml = parser.parseFromString(data, 'text/xml');\n        } catch (error) {\n            xml = undefined;\n        }\n\n        if (!xml || xml.getElementsByTagName('parsererror').length) {\n            throw new Error('Invalid XML: ' + data);\n        }\n\n        return xml;\n    };\n\n    /**\n     * @param {string} name\n     * @returns {{ns: string|null, local: string}} namespace and attribute name\n     */\n    V.qualifyAttr = function(name) {\n\n        if (name.indexOf(':') !== -1) {\n            var combinedKey = name.split(':');\n            return {\n                ns: ns[combinedKey[0]],\n                local: combinedKey[1]\n            };\n        }\n\n        return {\n            ns: null,\n            local: name\n        };\n    };\n\n    V.transformRegex = /(\\w+)\\(([^,)]+),?([^)]+)?\\)/gi;\n    V.transformSeparatorRegex = /[ ,]+/;\n    V.transformationListRegex = /^(\\w+)\\((.*)\\)/;\n\n    V.transformStringToMatrix = function(transform) {\n\n        var transformationMatrix = V.createSVGMatrix();\n        var matches = transform && transform.match(V.transformRegex);\n        if (!matches) {\n            return transformationMatrix;\n        }\n\n        for (var i = 0, n = matches.length; i < n; i++) {\n            var transformationString = matches[i];\n\n            var transformationMatch = transformationString.match(V.transformationListRegex);\n            if (transformationMatch) {\n                var sx, sy, tx, ty, angle;\n                var ctm = V.createSVGMatrix();\n                var args = transformationMatch[2].split(V.transformSeparatorRegex);\n                switch (transformationMatch[1].toLowerCase()) {\n                    case 'scale':\n                        sx = parseFloat(args[0]);\n                        sy = (args[1] === undefined) ? sx : parseFloat(args[1]);\n                        ctm = ctm.scaleNonUniform(sx, sy);\n                        break;\n                    case 'translate':\n                        tx = parseFloat(args[0]);\n                        ty = parseFloat(args[1]);\n                        ctm = ctm.translate(tx, ty);\n                        break;\n                    case 'rotate':\n                        angle = parseFloat(args[0]);\n                        tx = parseFloat(args[1]) || 0;\n                        ty = parseFloat(args[2]) || 0;\n                        if (tx !== 0 || ty !== 0) {\n                            ctm = ctm.translate(tx, ty).rotate(angle).translate(-tx, -ty);\n                        } else {\n                            ctm = ctm.rotate(angle);\n                        }\n                        break;\n                    case 'skewx':\n                        angle = parseFloat(args[0]);\n                        ctm = ctm.skewX(angle);\n                        break;\n                    case 'skewy':\n                        angle = parseFloat(args[0]);\n                        ctm = ctm.skewY(angle);\n                        break;\n                    case 'matrix':\n                        ctm.a = parseFloat(args[0]);\n                        ctm.b = parseFloat(args[1]);\n                        ctm.c = parseFloat(args[2]);\n                        ctm.d = parseFloat(args[3]);\n                        ctm.e = parseFloat(args[4]);\n                        ctm.f = parseFloat(args[5]);\n                        break;\n                    default:\n                        continue;\n                }\n\n                transformationMatrix = transformationMatrix.multiply(ctm);\n            }\n\n        }\n        return transformationMatrix;\n    };\n\n    V.matrixToTransformString = function(matrix) {\n        matrix || (matrix = true);\n\n        return 'matrix(' +\n            (matrix.a !== undefined ? matrix.a : 1) + ',' +\n            (matrix.b !== undefined ? matrix.b : 0) + ',' +\n            (matrix.c !== undefined ? matrix.c : 0) + ',' +\n            (matrix.d !== undefined ? matrix.d : 1) + ',' +\n            (matrix.e !== undefined ? matrix.e : 0) + ',' +\n            (matrix.f !== undefined ? matrix.f : 0) +\n            ')';\n    };\n\n    V.parseTransformString = function(transform) {\n\n        var translate, rotate, scale;\n\n        if (transform) {\n\n            var separator = V.transformSeparatorRegex;\n\n            // Allow reading transform string with a single matrix\n            if (transform.trim().indexOf('matrix') >= 0) {\n\n                var matrix = V.transformStringToMatrix(transform);\n                var decomposedMatrix = V.decomposeMatrix(matrix);\n\n                translate = [decomposedMatrix.translateX, decomposedMatrix.translateY];\n                scale = [decomposedMatrix.scaleX, decomposedMatrix.scaleY];\n                rotate = [decomposedMatrix.rotation];\n\n                var transformations = [];\n                if (translate[0] !== 0 || translate[1] !== 0) {\n                    transformations.push('translate(' + translate + ')');\n                }\n                if (scale[0] !== 1 || scale[1] !== 1) {\n                    transformations.push('scale(' + scale + ')');\n                }\n                if (rotate[0] !== 0) {\n                    transformations.push('rotate(' + rotate + ')');\n                }\n                transform = transformations.join(' ');\n\n            } else {\n\n                var translateMatch = transform.match(/translate\\((.*?)\\)/);\n                if (translateMatch) {\n                    translate = translateMatch[1].split(separator);\n                }\n                var rotateMatch = transform.match(/rotate\\((.*?)\\)/);\n                if (rotateMatch) {\n                    rotate = rotateMatch[1].split(separator);\n                }\n                var scaleMatch = transform.match(/scale\\((.*?)\\)/);\n                if (scaleMatch) {\n                    scale = scaleMatch[1].split(separator);\n                }\n            }\n        }\n\n        var sx = (scale && scale[0]) ? parseFloat(scale[0]) : 1;\n\n        return {\n            value: transform,\n            translate: {\n                tx: (translate && translate[0]) ? parseInt(translate[0], 10) : 0,\n                ty: (translate && translate[1]) ? parseInt(translate[1], 10) : 0\n            },\n            rotate: {\n                angle: (rotate && rotate[0]) ? parseInt(rotate[0], 10) : 0,\n                cx: (rotate && rotate[1]) ? parseInt(rotate[1], 10) : undefined,\n                cy: (rotate && rotate[2]) ? parseInt(rotate[2], 10) : undefined\n            },\n            scale: {\n                sx: sx,\n                sy: (scale && scale[1]) ? parseFloat(scale[1]) : sx\n            }\n        };\n    };\n\n    V.deltaTransformPoint = function(matrix, point) {\n\n        var dx = point.x * matrix.a + point.y * matrix.c + 0;\n        var dy = point.x * matrix.b + point.y * matrix.d + 0;\n        return { x: dx, y: dy };\n    };\n\n    V.decomposeMatrix = function(matrix) {\n\n        // @see https://gist.github.com/2052247\n\n        // calculate delta transform point\n        var px = V.deltaTransformPoint(matrix, { x: 0, y: 1 });\n        var py = V.deltaTransformPoint(matrix, { x: 1, y: 0 });\n\n        // calculate skew\n        var skewX = ((180 / PI) * atan2(px.y, px.x) - 90);\n        var skewY = ((180 / PI) * atan2(py.y, py.x));\n\n        return {\n\n            translateX: matrix.e,\n            translateY: matrix.f,\n            scaleX: sqrt(matrix.a * matrix.a + matrix.b * matrix.b),\n            scaleY: sqrt(matrix.c * matrix.c + matrix.d * matrix.d),\n            skewX: skewX,\n            skewY: skewY,\n            rotation: skewX // rotation is the same as skew x\n        };\n    };\n\n    // Return the `scale` transformation from the following equation:\n    // `translate(tx, ty) . rotate(angle) . scale(sx, sy) === matrix(a,b,c,d,e,f)`\n    V.matrixToScale = function(matrix) {\n\n        var a, b, c, d;\n        if (matrix) {\n            a = V.isUndefined(matrix.a) ? 1 : matrix.a;\n            d = V.isUndefined(matrix.d) ? 1 : matrix.d;\n            b = matrix.b;\n            c = matrix.c;\n        } else {\n            a = d = 1;\n        }\n        return {\n            sx: b ? sqrt(a * a + b * b) : a,\n            sy: c ? sqrt(c * c + d * d) : d\n        };\n    };\n\n    // Return the `rotate` transformation from the following equation:\n    // `translate(tx, ty) . rotate(angle) . scale(sx, sy) === matrix(a,b,c,d,e,f)`\n    V.matrixToRotate = function(matrix) {\n\n        var p = { x: 0, y: 1 };\n        if (matrix) {\n            p = V.deltaTransformPoint(matrix, p);\n        }\n\n        return {\n            angle: g.normalizeAngle(g.toDeg(atan2(p.y, p.x)) - 90)\n        };\n    };\n\n    // Return the `translate` transformation from the following equation:\n    // `translate(tx, ty) . rotate(angle) . scale(sx, sy) === matrix(a,b,c,d,e,f)`\n    V.matrixToTranslate = function(matrix) {\n\n        return {\n            tx: (matrix && matrix.e) || 0,\n            ty: (matrix && matrix.f) || 0\n        };\n    };\n\n    V.isV = function(object) {\n\n        return object instanceof V;\n    };\n\n    // For backwards compatibility:\n    V.isVElement = V.isV;\n\n    // Element implements `getBBox()`, `getCTM()` and `getScreenCTM()`\n    // https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement\n    V.isSVGGraphicsElement = function(node) {\n        if (!node) return false;\n        node = V.toNode(node);\n        // IE/Edge does not implement SVGGraphicsElement interface, thus check for `getScreenCTM` below\n        return node instanceof SVGElement && typeof node.getScreenCTM === 'function';\n    };\n\n    var svgDocument = V('svg').node;\n\n    V.createSVGMatrix = function(matrix) {\n\n        var svgMatrix = svgDocument.createSVGMatrix();\n        for (var component in matrix) {\n            svgMatrix[component] = matrix[component];\n        }\n\n        return svgMatrix;\n    };\n\n    V.createSVGTransform = function(matrix) {\n\n        if (!V.isUndefined(matrix)) {\n\n            if (!(matrix instanceof SVGMatrix)) {\n                matrix = V.createSVGMatrix(matrix);\n            }\n\n            return svgDocument.createSVGTransformFromMatrix(matrix);\n        }\n\n        return svgDocument.createSVGTransform();\n    };\n\n    V.createSVGPoint = function(x, y) {\n\n        var p = svgDocument.createSVGPoint();\n        p.x = x;\n        p.y = y;\n        return p;\n    };\n\n    V.transformRect = function(r, matrix) {\n\n        var p = svgDocument.createSVGPoint();\n\n        p.x = r.x;\n        p.y = r.y;\n        var corner1 = p.matrixTransform(matrix);\n\n        p.x = r.x + r.width;\n        p.y = r.y;\n        var corner2 = p.matrixTransform(matrix);\n\n        p.x = r.x + r.width;\n        p.y = r.y + r.height;\n        var corner3 = p.matrixTransform(matrix);\n\n        p.x = r.x;\n        p.y = r.y + r.height;\n        var corner4 = p.matrixTransform(matrix);\n\n        var minX = min(corner1.x, corner2.x, corner3.x, corner4.x);\n        var maxX = max(corner1.x, corner2.x, corner3.x, corner4.x);\n        var minY = min(corner1.y, corner2.y, corner3.y, corner4.y);\n        var maxY = max(corner1.y, corner2.y, corner3.y, corner4.y);\n\n        return new g.Rect(minX, minY, maxX - minX, maxY - minY);\n    };\n\n    V.transformPoint = function(p, matrix) {\n\n        return new g.Point(V.createSVGPoint(p.x, p.y).matrixTransform(matrix));\n    };\n\n    V.transformLine = function(l, matrix) {\n\n        return new g.Line(\n            V.transformPoint(l.start, matrix),\n            V.transformPoint(l.end, matrix)\n        );\n    };\n\n    V.transformPolyline = function(p, matrix) {\n\n        var inPoints = (p instanceof g.Polyline) ? p.points : p;\n        if (!V.isArray(inPoints)) inPoints = [];\n        var outPoints = [];\n        for (var i = 0, n = inPoints.length; i < n; i++) outPoints[i] = V.transformPoint(inPoints[i], matrix);\n        return new g.Polyline(outPoints);\n    };\n\n    // Convert a style represented as string (e.g. `'fill=\"blue\"; stroke=\"red\"'`) to\n    // an object (`{ fill: 'blue', stroke: 'red' }`).\n    V.styleToObject = function(styleString) {\n        var ret = {};\n        var styles = styleString.split(';');\n        for (var i = 0; i < styles.length; i++) {\n            var style = styles[i];\n            var pair = style.split('=');\n            ret[pair[0].trim()] = pair[1].trim();\n        }\n        return ret;\n    };\n\n    // Inspired by d3.js https://github.com/mbostock/d3/blob/master/src/svg/arc.js\n    V.createSlicePathData = function(innerRadius, outerRadius, startAngle, endAngle) {\n\n        var svgArcMax = 2 * PI - 1e-6;\n        var r0 = innerRadius;\n        var r1 = outerRadius;\n        var a0 = startAngle;\n        var a1 = endAngle;\n        var da = (a1 < a0 && (da = a0, a0 = a1, a1 = da), a1 - a0);\n        var df = da < PI ? '0' : '1';\n        var c0 = cos(a0);\n        var s0 = sin(a0);\n        var c1 = cos(a1);\n        var s1 = sin(a1);\n\n        return (da >= svgArcMax)\n            ? (r0\n                ? 'M0,' + r1\n                + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + (-r1)\n                + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + r1\n                + 'M0,' + r0\n                + 'A' + r0 + ',' + r0 + ' 0 1,0 0,' + (-r0)\n                + 'A' + r0 + ',' + r0 + ' 0 1,0 0,' + r0\n                + 'Z'\n                : 'M0,' + r1\n                + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + (-r1)\n                + 'A' + r1 + ',' + r1 + ' 0 1,1 0,' + r1\n                + 'Z')\n            : (r0\n                ? 'M' + r1 * c0 + ',' + r1 * s0\n                + 'A' + r1 + ',' + r1 + ' 0 ' + df + ',1 ' + r1 * c1 + ',' + r1 * s1\n                + 'L' + r0 * c1 + ',' + r0 * s1\n                + 'A' + r0 + ',' + r0 + ' 0 ' + df + ',0 ' + r0 * c0 + ',' + r0 * s0\n                + 'Z'\n                : 'M' + r1 * c0 + ',' + r1 * s0\n                + 'A' + r1 + ',' + r1 + ' 0 ' + df + ',1 ' + r1 * c1 + ',' + r1 * s1\n                + 'L0,0'\n                + 'Z');\n    };\n\n    // Merge attributes from object `b` with attributes in object `a`.\n    // Note that this modifies the object `a`.\n    // Also important to note that attributes are merged but CSS classes are concatenated.\n    V.mergeAttrs = function(a, b) {\n\n        for (var attr in b) {\n\n            if (attr === 'class') {\n                // Concatenate classes.\n                a[attr] = a[attr] ? a[attr] + ' ' + b[attr] : b[attr];\n            } else if (attr === 'style') {\n                // `style` attribute can be an object.\n                if (V.isObject(a[attr]) && V.isObject(b[attr])) {\n                    // `style` stored in `a` is an object.\n                    a[attr] = V.mergeAttrs(a[attr], b[attr]);\n                } else if (V.isObject(a[attr])) {\n                    // `style` in `a` is an object but it's a string in `b`.\n                    // Convert the style represented as a string to an object in `b`.\n                    a[attr] = V.mergeAttrs(a[attr], V.styleToObject(b[attr]));\n                } else if (V.isObject(b[attr])) {\n                    // `style` in `a` is a string, in `b` it's an object.\n                    a[attr] = V.mergeAttrs(V.styleToObject(a[attr]), b[attr]);\n                } else {\n                    // Both styles are strings.\n                    a[attr] = V.mergeAttrs(V.styleToObject(a[attr]), V.styleToObject(b[attr]));\n                }\n            } else {\n                a[attr] = b[attr];\n            }\n        }\n\n        return a;\n    };\n\n    V.annotateString = function(t, annotations, opt) {\n\n        annotations = annotations || [];\n        opt = opt || {};\n\n        var offset = opt.offset || 0;\n        var compacted = [];\n        var batch;\n        var ret = [];\n        var item;\n        var prev;\n\n        for (var i = 0; i < t.length; i++) {\n\n            item = ret[i] = t[i];\n\n            for (var j = 0; j < annotations.length; j++) {\n\n                var annotation = annotations[j];\n                var start = annotation.start + offset;\n                var end = annotation.end + offset;\n\n                if (i >= start && i < end) {\n                    // Annotation applies.\n                    if (V.isObject(item)) {\n                        // There is more than one annotation to be applied => Merge attributes.\n                        item.attrs = V.mergeAttrs(V.mergeAttrs({}, item.attrs), annotation.attrs);\n                    } else {\n                        item = ret[i] = { t: t[i], attrs: annotation.attrs };\n                    }\n                    if (opt.includeAnnotationIndices) {\n                        (item.annotations || (item.annotations = [])).push(j);\n                    }\n                }\n            }\n\n            prev = ret[i - 1];\n\n            if (!prev) {\n\n                batch = item;\n\n            } else if (V.isObject(item) && V.isObject(prev)) {\n                // Both previous item and the current one are annotations. If the attributes\n                // didn't change, merge the text.\n                if (JSON.stringify(item.attrs) === JSON.stringify(prev.attrs)) {\n                    batch.t += item.t;\n                } else {\n                    compacted.push(batch);\n                    batch = item;\n                }\n\n            } else if (V.isObject(item)) {\n                // Previous item was a string, current item is an annotation.\n                compacted.push(batch);\n                batch = item;\n\n            } else if (V.isObject(prev)) {\n                // Previous item was an annotation, current item is a string.\n                compacted.push(batch);\n                batch = item;\n\n            } else {\n                // Both previous and current item are strings.\n                batch = (batch || '') + item;\n            }\n        }\n\n        if (batch) {\n            compacted.push(batch);\n        }\n\n        return compacted;\n    };\n\n    V.findAnnotationsAtIndex = function(annotations, index) {\n\n        var found = [];\n\n        if (annotations) {\n\n            annotations.forEach(function(annotation) {\n\n                if (annotation.start < index && index <= annotation.end) {\n                    found.push(annotation);\n                }\n            });\n        }\n\n        return found;\n    };\n\n    V.findAnnotationsBetweenIndexes = function(annotations, start, end) {\n\n        var found = [];\n\n        if (annotations) {\n\n            annotations.forEach(function(annotation) {\n\n                if ((start >= annotation.start && start < annotation.end) || (end > annotation.start && end <= annotation.end) || (annotation.start >= start && annotation.end < end)) {\n                    found.push(annotation);\n                }\n            });\n        }\n\n        return found;\n    };\n\n    // Shift all the text annotations after character `index` by `offset` positions.\n    V.shiftAnnotations = function(annotations, index, offset) {\n\n        if (annotations) {\n\n            annotations.forEach(function(annotation) {\n\n                if (annotation.start < index && annotation.end >= index) {\n                    annotation.end += offset;\n                } else if (annotation.start >= index) {\n                    annotation.start += offset;\n                    annotation.end += offset;\n                }\n            });\n        }\n\n        return annotations;\n    };\n\n    V.convertLineToPathData = function(line) {\n\n        line = V(line);\n        var d = [\n            'M', line.attr('x1'), line.attr('y1'),\n            'L', line.attr('x2'), line.attr('y2')\n        ].join(' ');\n        return d;\n    };\n\n    V.convertPolygonToPathData = function(polygon) {\n\n        var points = V.getPointsFromSvgNode(polygon);\n        if (points.length === 0) return null;\n\n        return V.svgPointsToPath(points) + ' Z';\n    };\n\n    V.convertPolylineToPathData = function(polyline) {\n\n        var points = V.getPointsFromSvgNode(polyline);\n        if (points.length === 0) return null;\n\n        return V.svgPointsToPath(points);\n    };\n\n    V.svgPointsToPath = function(points) {\n\n        for (var i = 0, n = points.length; i < n; i++) {\n            points[i] = points[i].x + ' ' + points[i].y;\n        }\n\n        return 'M ' + points.join(' L');\n    };\n\n    V.getPointsFromSvgNode = function(node) {\n\n        node = V.toNode(node);\n        var points = [];\n        var nodePoints = node.points;\n        if (nodePoints) {\n            for (var i = 0, n = nodePoints.numberOfItems; i < n; i++) {\n                points.push(nodePoints.getItem(i));\n            }\n        }\n\n        return points;\n    };\n\n    V.KAPPA = 0.551784;\n\n    V.convertCircleToPathData = function(circle) {\n\n        circle = V(circle);\n        var cx = parseFloat(circle.attr('cx')) || 0;\n        var cy = parseFloat(circle.attr('cy')) || 0;\n        var r = parseFloat(circle.attr('r'));\n        var cd = r * V.KAPPA; // Control distance.\n\n        var d = [\n            'M', cx, cy - r,    // Move to the first point.\n            'C', cx + cd, cy - r, cx + r, cy - cd, cx + r, cy, // I. Quadrant.\n            'C', cx + r, cy + cd, cx + cd, cy + r, cx, cy + r, // II. Quadrant.\n            'C', cx - cd, cy + r, cx - r, cy + cd, cx - r, cy, // III. Quadrant.\n            'C', cx - r, cy - cd, cx - cd, cy - r, cx, cy - r, // IV. Quadrant.\n            'Z'\n        ].join(' ');\n        return d;\n    };\n\n    V.convertEllipseToPathData = function(ellipse) {\n\n        ellipse = V(ellipse);\n        var cx = parseFloat(ellipse.attr('cx')) || 0;\n        var cy = parseFloat(ellipse.attr('cy')) || 0;\n        var rx = parseFloat(ellipse.attr('rx'));\n        var ry = parseFloat(ellipse.attr('ry')) || rx;\n        var cdx = rx * V.KAPPA; // Control distance x.\n        var cdy = ry * V.KAPPA; // Control distance y.\n\n        var d = [\n            'M', cx, cy - ry,    // Move to the first point.\n            'C', cx + cdx, cy - ry, cx + rx, cy - cdy, cx + rx, cy, // I. Quadrant.\n            'C', cx + rx, cy + cdy, cx + cdx, cy + ry, cx, cy + ry, // II. Quadrant.\n            'C', cx - cdx, cy + ry, cx - rx, cy + cdy, cx - rx, cy, // III. Quadrant.\n            'C', cx - rx, cy - cdy, cx - cdx, cy - ry, cx, cy - ry, // IV. Quadrant.\n            'Z'\n        ].join(' ');\n        return d;\n    };\n\n    V.convertRectToPathData = function(rect) {\n\n        rect = V(rect);\n\n        return V.rectToPath({\n            x: parseFloat(rect.attr('x')) || 0,\n            y: parseFloat(rect.attr('y')) || 0,\n            width: parseFloat(rect.attr('width')) || 0,\n            height: parseFloat(rect.attr('height')) || 0,\n            rx: parseFloat(rect.attr('rx')) || 0,\n            ry: parseFloat(rect.attr('ry')) || 0\n        });\n    };\n\n    // Convert a rectangle to SVG path commands. `r` is an object of the form:\n    // `{ x: [number], y: [number], width: [number], height: [number], top-ry: [number], top-ry: [number], bottom-rx: [number], bottom-ry: [number] }`,\n    // where `x, y, width, height` are the usual rectangle attributes and [top-/bottom-]rx/ry allows for\n    // specifying radius of the rectangle for all its sides (as opposed to the built-in SVG rectangle\n    // that has only `rx` and `ry` attributes).\n    V.rectToPath = function(r) {\n\n        var d;\n        var x = r.x;\n        var y = r.y;\n        var width = r.width;\n        var height = r.height;\n        var topRx = min(r.rx || r['top-rx'] || 0, width / 2);\n        var bottomRx = min(r.rx || r['bottom-rx'] || 0, width / 2);\n        var topRy = min(r.ry || r['top-ry'] || 0, height / 2);\n        var bottomRy = min(r.ry || r['bottom-ry'] || 0, height / 2);\n\n        if (topRx || bottomRx || topRy || bottomRy) {\n            d = [\n                'M', x, y + topRy,\n                'v', height - topRy - bottomRy,\n                'a', bottomRx, bottomRy, 0, 0, 0, bottomRx, bottomRy,\n                'h', width - 2 * bottomRx,\n                'a', bottomRx, bottomRy, 0, 0, 0, bottomRx, -bottomRy,\n                'v', -(height - bottomRy - topRy),\n                'a', topRx, topRy, 0, 0, 0, -topRx, -topRy,\n                'h', -(width - 2 * topRx),\n                'a', topRx, topRy, 0, 0, 0, -topRx, topRy,\n                'Z'\n            ];\n        } else {\n            d = [\n                'M', x, y,\n                'H', x + width,\n                'V', y + height,\n                'H', x,\n                'V', y,\n                'Z'\n            ];\n        }\n\n        return d.join(' ');\n    };\n\n    // Take a path data string\n    // Return a normalized path data string\n    // If data cannot be parsed, return 'M 0 0'\n    // Adapted from Rappid normalizePath polyfill\n    // Highly inspired by Raphael Library (www.raphael.com)\n    V.normalizePathData = (function() {\n\n        var spaces = '\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029';\n        var pathCommand = new RegExp('([a-z])[' + spaces + ',]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[' + spaces + ']*,?[' + spaces + ']*)+)', 'ig');\n        var pathValues = new RegExp('(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[' + spaces + ']*,?[' + spaces + ']*', 'ig');\n\n        var math = Math;\n        var PI = math.PI;\n        var sin = math.sin;\n        var cos = math.cos;\n        var tan = math.tan;\n        var asin = math.asin;\n        var sqrt = math.sqrt;\n        var abs = math.abs;\n\n        function q2c(x1, y1, ax, ay, x2, y2) {\n\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n            return [(_13 * x1) + (_23 * ax), (_13 * y1) + (_23 * ay), (_13 * x2) + (_23 * ax), (_13 * y2) + (_23 * ay), x2, y2];\n        }\n\n        function rotate(x, y, rad) {\n\n            var X = (x * cos(rad)) - (y * sin(rad));\n            var Y = (x * sin(rad)) + (y * cos(rad));\n            return { x: X, y: Y };\n        }\n\n        function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n            // for more information of where this math came from visit:\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n            var _120 = (PI * 120) / 180;\n            var rad = (PI / 180) * (+angle || 0);\n            var res = [];\n            var xy;\n\n            if (!recursive) {\n                xy = rotate(x1, y1, -rad);\n                x1 = xy.x;\n                y1 = xy.y;\n\n                xy = rotate(x2, y2, -rad);\n                x2 = xy.x;\n                y2 = xy.y;\n\n                var x = (x1 - x2) / 2;\n                var y = (y1 - y2) / 2;\n                var h = ((x * x) / (rx * rx)) + ((y * y) / (ry * ry));\n\n                if (h > 1) {\n                    h = sqrt(h);\n                    rx = h * rx;\n                    ry = h * ry;\n                }\n\n                var rx2 = rx * rx;\n                var ry2 = ry * ry;\n\n                var k = ((large_arc_flag == sweep_flag) ? -1 : 1) * sqrt(abs(((rx2 * ry2) - (rx2 * y * y) - (ry2 * x * x)) / ((rx2 * y * y) + (ry2 * x * x))));\n\n                var cx = ((k * rx * y) / ry) + ((x1 + x2) / 2);\n                var cy = ((k * -ry * x) / rx) + ((y1 + y2) / 2);\n\n                var f1 = asin(((y1 - cy) / ry).toFixed(9));\n                var f2 = asin(((y2 - cy) / ry).toFixed(9));\n\n                f1 = ((x1 < cx) ? (PI - f1) : f1);\n                f2 = ((x2 < cx) ? (PI - f2) : f2);\n\n                if (f1 < 0) f1 = (PI * 2) + f1;\n                if (f2 < 0) f2 = (PI * 2) + f2;\n\n                if (sweep_flag && (f1 > f2)) f1 = f1 - (PI * 2);\n                if (!sweep_flag && (f2 > f1)) f2 = f2 - (PI * 2);\n\n            } else {\n                f1 = recursive[0];\n                f2 = recursive[1];\n                cx = recursive[2];\n                cy = recursive[3];\n            }\n\n            var df = f2 - f1;\n            if (abs(df) > _120) {\n                var f2old = f2;\n                var x2old = x2;\n                var y2old = y2;\n                f2 = f1 + (_120 * ((sweep_flag && (f2 > f1)) ? 1 : -1));\n                x2 = cx + (rx * cos(f2));\n                y2 = cy + (ry * sin(f2));\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n            }\n\n            df = f2 - f1;\n\n            var c1 = cos(f1);\n            var s1 = sin(f1);\n            var c2 = cos(f2);\n            var s2 = sin(f2);\n            var t = tan(df / 4);\n            var hx = (4 / 3) * (rx * t);\n            var hy = (4 / 3) * (ry * t);\n            var m1 = [x1, y1];\n            var m2 = [x1 + (hx * s1), y1 - (hy * c1)];\n            var m3 = [x2 + (hx * s2), y2 - (hy * c2)];\n            var m4 = [x2, y2];\n\n            m2[0] = (2 * m1[0]) - m2[0];\n            m2[1] = (2 * m1[1]) - m2[1];\n\n            if (recursive) {\n                return [m2, m3, m4].concat(res);\n            } else {\n                res = [m2, m3, m4].concat(res).join().split(',');\n                var newres = [];\n                var ii = res.length;\n                for (var i = 0; i < ii; i++) {\n                    newres[i] = (i % 2) ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n                }\n                return newres;\n            }\n        }\n\n        function parsePathString(pathString) {\n\n            if (!pathString) return null;\n\n            var paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0 };\n            var data = [];\n\n            String(pathString).replace(pathCommand, function(a, b, c) {\n\n                var params = [];\n                var name = b.toLowerCase();\n                c.replace(pathValues, function(a, b) {\n                    if (b) params.push(+b);\n                });\n\n                if ((name === 'm') && (params.length > 2)) {\n                    data.push([b].concat(params.splice(0, 2)));\n                    name = 'l';\n                    b = ((b === 'm') ? 'l' : 'L');\n                }\n\n                while (params.length >= paramCounts[name]) {\n                    data.push([b].concat(params.splice(0, paramCounts[name])));\n                    if (!paramCounts[name]) break;\n                }\n            });\n\n            return data;\n        }\n\n        function pathToAbsolute(pathArray) {\n\n            if (!Array.isArray(pathArray) || !Array.isArray(pathArray && pathArray[0])) { // rough assumption\n                pathArray = parsePathString(pathArray);\n            }\n\n            // if invalid string, return 'M 0 0'\n            if (!pathArray || !pathArray.length) return [['M', 0, 0]];\n\n            var res = [];\n            var x = 0;\n            var y = 0;\n            var mx = 0;\n            var my = 0;\n            var start = 0;\n            var pa0;\n\n            var ii = pathArray.length;\n            for (var i = start; i < ii; i++) {\n\n                var r = [];\n                res.push(r);\n\n                var pa = pathArray[i];\n                pa0 = pa[0];\n\n                if (pa0 != pa0.toUpperCase()) {\n                    r[0] = pa0.toUpperCase();\n\n                    var jj;\n                    var j;\n                    switch (r[0]) {\n                        case 'A':\n                            r[1] = pa[1];\n                            r[2] = pa[2];\n                            r[3] = pa[3];\n                            r[4] = pa[4];\n                            r[5] = pa[5];\n                            r[6] = +pa[6] + x;\n                            r[7] = +pa[7] + y;\n                            break;\n\n                        case 'V':\n                            r[1] = +pa[1] + y;\n                            break;\n\n                        case 'H':\n                            r[1] = +pa[1] + x;\n                            break;\n\n                        case 'M':\n                            mx = +pa[1] + x;\n                            my = +pa[2] + y;\n\n                            jj = pa.length;\n                            for (j = 1; j < jj; j++) {\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\n                            }\n                            break;\n\n                        default:\n                            jj = pa.length;\n                            for (j = 1; j < jj; j++) {\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\n                            }\n                            break;\n                    }\n                } else {\n                    var kk = pa.length;\n                    for (var k = 0; k < kk; k++) {\n                        r[k] = pa[k];\n                    }\n                }\n\n                switch (r[0]) {\n                    case 'Z':\n                        x = +mx;\n                        y = +my;\n                        break;\n\n                    case 'H':\n                        x = r[1];\n                        break;\n\n                    case 'V':\n                        y = r[1];\n                        break;\n\n                    case 'M':\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                        break;\n\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                        break;\n                }\n            }\n\n            return res;\n        }\n\n        function normalize(path) {\n\n            var p = pathToAbsolute(path);\n            var attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };\n\n            function processPath(path, d, pcom) {\n\n                var nx, ny;\n\n                if (!path) return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n\n                if (!(path[0] in { T: 1, Q: 1 })) {\n                    d.qx = null;\n                    d.qy = null;\n                }\n\n                switch (path[0]) {\n                    case 'M':\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n\n                    case 'A':\n                        if (parseFloat(path[1]) === 0 || parseFloat(path[2]) === 0) {\n                            // https://www.w3.org/TR/SVG/paths.html#ArcOutOfRangeParameters\n                            // \"If either rx or ry is 0, then this arc is treated as a\n                            // straight line segment (a \"lineto\") joining the endpoints.\"\n                            path = ['L', path[6], path[7]];\n                        } else {\n                            path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        }\n                        break;\n\n                    case 'S':\n                        if (pcom === 'C' || pcom === 'S') { // In 'S' case we have to take into account, if the previous command is C/S.\n                            nx = (d.x * 2) - d.bx;          // And reflect the previous\n                            ny = (d.y * 2) - d.by;          // command's control point relative to the current point.\n                        } else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = ['C', nx, ny].concat(path.slice(1));\n                        break;\n\n                    case 'T':\n                        if (pcom === 'Q' || pcom === 'T') { // In 'T' case we have to take into account, if the previous command is Q/T.\n                            d.qx = (d.x * 2) - d.qx;        // And make a reflection similar\n                            d.qy = (d.y * 2) - d.qy;        // to case 'S'.\n                        } else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n\n                    case 'Q':\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n\n                    case 'H':\n                        path = ['L'].concat(path[1], d.y);\n                        break;\n\n                    case 'V':\n                        path = ['L'].concat(d.x, path[1]);\n                        break;\n\n                    case 'L':\n                        break;\n\n                    case 'Z':\n                        break;\n                }\n\n                return path;\n            }\n\n            function fixArc(pp, i) {\n\n                if (pp[i].length > 7) {\n\n                    pp[i].shift();\n                    var pi = pp[i];\n\n                    while (pi.length) {\n                        pcoms[i] = 'A'; // if created multiple 'C's, their original seg is saved\n                        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n                    }\n\n                    pp.splice(i, 1);\n                    ii = p.length;\n                }\n            }\n\n            var pcoms = []; // path commands of original path p\n            var pfirst = ''; // temporary holder for original path command\n            var pcom = ''; // holder for previous path command of original path\n\n            var ii = p.length;\n            for (var i = 0; i < ii; i++) {\n                if (p[i]) pfirst = p[i][0]; // save current path command\n\n                if (pfirst !== 'C') { // C is not saved yet, because it may be result of conversion\n                    pcoms[i] = pfirst; // Save current path command\n                    if (i > 0) pcom = pcoms[i - 1]; // Get previous path command pcom\n                }\n\n                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n                if (pcoms[i] !== 'A' && pfirst === 'C') pcoms[i] = 'C'; // 'A' is the only command\n                // which may produce multiple 'C's\n                // so we have to make sure that 'C' is also 'C' in original path\n\n                fixArc(p, i); // fixArc adds also the right amount of 'A's to pcoms\n\n                var seg = p[i];\n                var seglen = seg.length;\n\n                attrs.x = seg[seglen - 2];\n                attrs.y = seg[seglen - 1];\n\n                attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n                attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n            }\n\n            // make sure normalized path data string starts with an M segment\n            if (!p[0][0] || p[0][0] !== 'M') {\n                p.unshift(['M', 0, 0]);\n            }\n\n            return p;\n        }\n\n        return function(pathData) {\n            return normalize(pathData).join(',').split(',').join(' ');\n        };\n    })();\n\n    V.namespace = ns;\n\n    V.g = g;\n\n    return V;\n\n})();\n\nexport default V;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}