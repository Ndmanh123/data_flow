{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Home\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"canvas\",\n  ref: \"canvas\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<div id=\\\"app\\\"><div class=\\\"btn_contain\\\"><button id=\\\"btn-zoomout\\\" class=\\\"btn\\\">zoom out</button><button id=\\\"btn-zoomin\\\" class=\\\"btn\\\">zoom in</button><button id=\\\"btn-center\\\" class=\\\"btn\\\">center</button><button id=\\\"btn-center-content\\\" class=\\\"btn\\\">center content</button></div><div id=\\\"stencil\\\"></div><div id=\\\"paper\\\"></div><div id=\\\"navigator\\\"></div></div>\", 1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, null, 512\n  /* NEED_PATCH */\n  ), _hoisted_3], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAEAA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;EACOC,KAAK,EAAC;EAASC,GAAG,EAAC;;;;;;6DAD1BC,YACEH,oBAAuC,KAAvC,cAAuC,IAAvC,EAAuC;EAAA;EAAvC,GAEAI","names":["_createElementVNode","class","ref","_hoisted_1","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["\n<template>\n<h1>Home</h1>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  \n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\n\n// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\n\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js');\n\n\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n    let graph = new joint.dia.Graph\n\n  new joint.dia.Paper({\n      el,\n      model: graph,\n      width: 600,\n      height: 300, // height had to be increased\n      gridSize: 10,\n      drawGrid: true,\n      background: {\n          color: 'rgba(0, 255, 0, 0.3)'\n      }\n  })\n\n  let rect = new joint.shapes.standard.Rectangle()\n  rect.position(100, 30)\n  rect.resize(100, 40)\n  rect.attr({\n      body: {\n          fill: 'blue'\n      },\n      label: {\n          text: 'Hello',\n          fill: 'white'\n      }\n  })\n  rect.addTo(graph)\n\n  let rect2 = new joint.shapes.standard.Rectangle()\n  rect2.position(400, 30)\n  rect2.resize(100, 40)\n  rect2.attr({\n      body: {\n          fill: '#2C3E50',\n          rx: 5,\n          ry: 5,\n          strokeWidth: 2\n      },\n      label: {\n          text: 'World!',\n          fill: '#3498DB',\n          fontSize: 18,\n          fontWeight: 'bold',\n          fontletiant: 'small-caps'\n      }\n  })\n  rect2.addTo(graph)\n\n  let link = new joint.shapes.standard.Link()\n  link.source(rect)\n  link.target(rect2)\n\n  // Use custom connector named `wobble`\n  link.connector('wobble', { spread: 10 })\n\n  link.addTo(graph)\n\n  let rect3 = new joint.shapes.standard.Rectangle()\n  rect3.position(100, 130)\n  rect3.resize(100, 40)\n  rect3.attr({\n      body: {\n          fill: '#E74C3C',\n          rx: 20,\n          ry: 20,\n          strokeWidth: 0\n      },\n      label: {\n          text: 'Hello',\n          fill: '#ECF0F1',\n          fontSize: 11,\n          fontletiant: 'small-caps'\n      }\n  })\n  rect3.addTo(graph)\n\n  let rect4 = new joint.shapes.standard.Rectangle()\n  rect4.position(400, 130)\n  rect4.resize(100, 40)\n  rect4.attr({\n      body: {\n          fill: '#8E44AD',\n          strokeWidth: 0\n      },\n      label: {\n          text: 'World!',\n          fill: 'white',\n          fontSize: 13\n      }\n  })\n  rect4.addTo(graph)\n\n  let link2 = new joint.shapes.standard.Link()\n  link2.source(rect3)\n  link2.target(rect4)\n\n  // Use custom connector named `wobble`\n  link2.connector('wobble', { spread: 10 })\n\n  link2.addTo(graph)\n\n  let rect5 = new joint.shapes.standard.Rectangle()\n  rect5.position(100, 230)\n  rect5.resize(100, 40)\n  rect5.attr({\n      body: {\n          fill: '#2ECC71',\n          strokeDasharray: '10,2'\n      },\n      label: {\n          text: 'Hello',\n          fill: 'black',\n          fontSize: 13\n      }\n  })\n  rect5.addTo(graph)\n\n  let rect6 = new joint.shapes.standard.Rectangle()\n  rect6.position(400, 230)\n  rect6.resize(100, 40)\n  rect6.attr({\n      body: {\n          fill: '#F39C12',\n          rx: 20,\n          ry: 20,\n          strokeDasharray: '1,1'\n      },\n      label: {\n          text: 'World!',\n          fill: 'gray',\n          fontSize: 18,\n          fontWeight: 'bold',\n          fontletiant: 'small-caps',\n          textShadow: '1px 1px 1px black'\n      }\n  })\n  rect6.addTo(graph)\n\n  let link3 = new joint.shapes.standard.Link()\n  link3.source(rect5)\n  link3.target(rect6)\n\n  // Use custom connector named `wobble`\n  link3.connector('wobble', { spread: 10 })\n\n  link3.addTo(graph)\n     \n    }\n  }\n\n  \n\n</script>\n\n<style >\n@import \"@/../public/vendor/jointJS/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}