{"ast":null,"code":"import { Generic } from './basic.mjs';\nimport { Link as LinkBase } from '../dia/Link.mjs';\nimport { uniq, difference, assign, toArray, without, isObject } from '../util/index.mjs';\n/**\n * @deprecated use the port api instead\n */\n\nexport const Model = Generic.define('devs.Model', {\n  inPorts: [],\n  outPorts: [],\n  size: {\n    width: 80,\n    height: 80\n  },\n  attrs: {\n    '.': {\n      magnet: false\n    },\n    '.label': {\n      text: 'Model',\n      'ref-x': .5,\n      'ref-y': 10,\n      'font-size': 18,\n      'text-anchor': 'middle',\n      fill: '#000'\n    },\n    '.body': {\n      'ref-width': '100%',\n      'ref-height': '100%',\n      stroke: '#000'\n    }\n  },\n  ports: {\n    groups: {\n      'in': {\n        position: {\n          name: 'left'\n        },\n        attrs: {\n          '.port-label': {\n            fill: '#000'\n          },\n          '.port-body': {\n            fill: '#fff',\n            stroke: '#000',\n            r: 10,\n            magnet: true\n          }\n        },\n        label: {\n          position: {\n            name: 'left',\n            args: {\n              y: 10\n            }\n          }\n        }\n      },\n      'out': {\n        position: {\n          name: 'right'\n        },\n        attrs: {\n          '.port-label': {\n            fill: '#000'\n          },\n          '.port-body': {\n            fill: '#fff',\n            stroke: '#000',\n            r: 10,\n            magnet: true\n          }\n        },\n        label: {\n          position: {\n            name: 'right',\n            args: {\n              y: 10\n            }\n          }\n        }\n      }\n    }\n  }\n}, {\n  markup: '<g class=\"rotatable\"><rect class=\"body\"/><text class=\"label\"/></g>',\n  portMarkup: '<circle class=\"port-body\"/>',\n  portLabelMarkup: '<text class=\"port-label\"/>',\n  initialize: function () {\n    Generic.prototype.initialize.apply(this, arguments);\n    this.on('change:inPorts change:outPorts', this.updatePortItems, this);\n    this.updatePortItems();\n  },\n  updatePortItems: function (model, changed, opt) {\n    // Make sure all ports are unique.\n    var inPorts = uniq(this.get('inPorts'));\n    var outPorts = difference(uniq(this.get('outPorts')), inPorts);\n    var inPortItems = this.createPortItems('in', inPorts);\n    var outPortItems = this.createPortItems('out', outPorts);\n    this.prop('ports/items', inPortItems.concat(outPortItems), assign({\n      rewrite: true\n    }, opt));\n  },\n  createPortItem: function (group, port) {\n    return {\n      id: port,\n      group: group,\n      attrs: {\n        '.port-label': {\n          text: port\n        }\n      }\n    };\n  },\n  createPortItems: function (group, ports) {\n    return toArray(ports).map(this.createPortItem.bind(this, group));\n  },\n  _addGroupPort: function (port, group, opt) {\n    var ports = this.get(group);\n    return this.set(group, Array.isArray(ports) ? ports.concat(port) : [port], opt);\n  },\n  addOutPort: function (port, opt) {\n    return this._addGroupPort(port, 'outPorts', opt);\n  },\n  addInPort: function (port, opt) {\n    return this._addGroupPort(port, 'inPorts', opt);\n  },\n  _removeGroupPort: function (port, group, opt) {\n    return this.set(group, without(this.get(group), port), opt);\n  },\n  removeOutPort: function (port, opt) {\n    return this._removeGroupPort(port, 'outPorts', opt);\n  },\n  removeInPort: function (port, opt) {\n    return this._removeGroupPort(port, 'inPorts', opt);\n  },\n  _changeGroup: function (group, properties, opt) {\n    return this.prop('ports/groups/' + group, isObject(properties) ? properties : {}, opt);\n  },\n  changeInGroup: function (properties, opt) {\n    return this._changeGroup('in', properties, opt);\n  },\n  changeOutGroup: function (properties, opt) {\n    return this._changeGroup('out', properties, opt);\n  }\n});\nexport const Atomic = Model.define('devs.Atomic', {\n  size: {\n    width: 80,\n    height: 80\n  },\n  attrs: {\n    '.label': {\n      text: 'Atomic'\n    }\n  }\n});\nexport const Coupled = Model.define('devs.Coupled', {\n  size: {\n    width: 200,\n    height: 300\n  },\n  attrs: {\n    '.label': {\n      text: 'Coupled'\n    }\n  }\n});\nexport const Link = LinkBase.define('devs.Link', {\n  attrs: {\n    '.connection': {\n      'stroke-width': 2\n    }\n  }\n});","map":{"version":3,"names":["Generic","Link","LinkBase","uniq","difference","assign","toArray","without","isObject","Model","define","inPorts","outPorts","size","width","height","attrs","magnet","text","fill","stroke","ports","groups","position","name","r","label","args","y","markup","portMarkup","portLabelMarkup","initialize","prototype","apply","arguments","on","updatePortItems","model","changed","opt","get","inPortItems","createPortItems","outPortItems","prop","concat","rewrite","createPortItem","group","port","id","map","bind","_addGroupPort","set","Array","isArray","addOutPort","addInPort","_removeGroupPort","removeOutPort","removeInPort","_changeGroup","properties","changeInGroup","changeOutGroup","Atomic","Coupled"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/shapes/devs.mjs"],"sourcesContent":["import { Generic } from './basic.mjs';\nimport { Link as LinkBase } from '../dia/Link.mjs';\nimport { uniq, difference, assign, toArray, without, isObject } from '../util/index.mjs';\n\n/**\n * @deprecated use the port api instead\n */\nexport const Model = Generic.define('devs.Model', {\n    inPorts: [],\n    outPorts: [],\n    size: {\n        width: 80,\n        height: 80\n    },\n    attrs: {\n        '.': {\n            magnet: false\n        },\n        '.label': {\n            text: 'Model',\n            'ref-x': .5,\n            'ref-y': 10,\n            'font-size': 18,\n            'text-anchor': 'middle',\n            fill: '#000'\n        },\n        '.body': {\n            'ref-width': '100%',\n            'ref-height': '100%',\n            stroke: '#000'\n        }\n    },\n    ports: {\n        groups: {\n            'in': {\n                position: {\n                    name: 'left'\n                },\n                attrs: {\n                    '.port-label': {\n                        fill: '#000'\n                    },\n                    '.port-body': {\n                        fill: '#fff',\n                        stroke: '#000',\n                        r: 10,\n                        magnet: true\n                    }\n                },\n                label: {\n                    position: {\n                        name: 'left',\n                        args: {\n                            y: 10\n                        }\n                    }\n                }\n            },\n            'out': {\n                position: {\n                    name: 'right'\n                },\n                attrs: {\n                    '.port-label': {\n                        fill: '#000'\n                    },\n                    '.port-body': {\n                        fill: '#fff',\n                        stroke: '#000',\n                        r: 10,\n                        magnet: true\n                    }\n                },\n                label: {\n                    position: {\n                        name: 'right',\n                        args: {\n                            y: 10\n                        }\n                    }\n                }\n            }\n        }\n    }\n}, {\n    markup: '<g class=\"rotatable\"><rect class=\"body\"/><text class=\"label\"/></g>',\n    portMarkup: '<circle class=\"port-body\"/>',\n    portLabelMarkup: '<text class=\"port-label\"/>',\n\n    initialize: function() {\n\n        Generic.prototype.initialize.apply(this, arguments);\n\n        this.on('change:inPorts change:outPorts', this.updatePortItems, this);\n        this.updatePortItems();\n    },\n\n    updatePortItems: function(model, changed, opt) {\n\n        // Make sure all ports are unique.\n        var inPorts = uniq(this.get('inPorts'));\n        var outPorts = difference(uniq(this.get('outPorts')), inPorts);\n\n        var inPortItems = this.createPortItems('in', inPorts);\n        var outPortItems = this.createPortItems('out', outPorts);\n\n        this.prop('ports/items', inPortItems.concat(outPortItems), assign({ rewrite: true }, opt));\n    },\n\n    createPortItem: function(group, port) {\n\n        return {\n            id: port,\n            group: group,\n            attrs: {\n                '.port-label': {\n                    text: port\n                }\n            }\n        };\n    },\n\n    createPortItems: function(group, ports) {\n\n        return toArray(ports).map(this.createPortItem.bind(this, group));\n    },\n\n    _addGroupPort: function(port, group, opt) {\n\n        var ports = this.get(group);\n        return this.set(group, Array.isArray(ports) ? ports.concat(port) : [port], opt);\n    },\n\n    addOutPort: function(port, opt) {\n\n        return this._addGroupPort(port, 'outPorts', opt);\n    },\n\n    addInPort: function(port, opt) {\n\n        return this._addGroupPort(port, 'inPorts', opt);\n    },\n\n    _removeGroupPort: function(port, group, opt) {\n\n        return this.set(group, without(this.get(group), port), opt);\n    },\n\n    removeOutPort: function(port, opt) {\n\n        return this._removeGroupPort(port, 'outPorts', opt);\n    },\n\n    removeInPort: function(port, opt) {\n\n        return this._removeGroupPort(port, 'inPorts', opt);\n    },\n\n    _changeGroup: function(group, properties, opt) {\n\n        return this.prop('ports/groups/' + group, isObject(properties) ? properties : {}, opt);\n    },\n\n    changeInGroup: function(properties, opt) {\n\n        return this._changeGroup('in', properties, opt);\n    },\n\n    changeOutGroup: function(properties, opt) {\n\n        return this._changeGroup('out', properties, opt);\n    }\n});\n\nexport const Atomic = Model.define('devs.Atomic', {\n    size: {\n        width: 80,\n        height: 80\n    },\n    attrs: {\n        '.label': {\n            text: 'Atomic'\n        }\n    }\n});\n\nexport const Coupled = Model.define('devs.Coupled', {\n    size: {\n        width: 200,\n        height: 300\n    },\n    attrs: {\n        '.label': {\n            text: 'Coupled'\n        }\n    }\n});\n\nexport const Link = LinkBase.define('devs.Link', {\n    attrs: {\n        '.connection': {\n            'stroke-width': 2\n        }\n    }\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}