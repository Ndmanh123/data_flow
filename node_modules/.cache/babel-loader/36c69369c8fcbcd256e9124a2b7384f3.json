{"ast":null,"code":"import { Point } from './point.mjs';\nimport { Polyline } from './polyline.mjs';\nimport { extend } from './extend.mjs';\nimport { types } from './types.mjs';\nimport { clonePoints, parsePoints, convexHull } from './points.mjs';\nexport const Polygon = function (points) {\n  if (!(this instanceof Polygon)) {\n    return new Polygon(points);\n  }\n\n  if (typeof points === 'string') {\n    return new Polygon.parse(points);\n  }\n\n  this.points = Array.isArray(points) ? points.map(Point) : [];\n};\n\nPolygon.parse = function (svgString) {\n  return new Polygon(parsePoints(svgString));\n};\n\nPolygon.fromRect = function (rect) {\n  return new Polygon([rect.topLeft(), rect.topRight(), rect.bottomRight(), rect.bottomLeft()]);\n};\n\nPolygon.prototype = extend(Polyline.prototype, {\n  type: types.Polygon,\n  clone: function () {\n    return new Polygon(clonePoints(this.points));\n  },\n  convexHull: function () {\n    return new Polygon(convexHull(this.points));\n  },\n  lengthPoints: function () {\n    const {\n      start,\n      end,\n      points\n    } = this;\n    if (points.length <= 1 || start.equals(end)) return points;\n    return [...points, start.clone()];\n  }\n});","map":{"version":3,"names":["Point","Polyline","extend","types","clonePoints","parsePoints","convexHull","Polygon","points","parse","Array","isArray","map","svgString","fromRect","rect","topLeft","topRight","bottomRight","bottomLeft","prototype","type","clone","lengthPoints","start","end","length","equals"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/g/polygon.mjs"],"sourcesContent":["import { Point } from './point.mjs';\nimport { Polyline } from './polyline.mjs';\nimport { extend } from './extend.mjs';\nimport { types } from './types.mjs';\nimport { clonePoints, parsePoints, convexHull } from './points.mjs';\n\nexport const Polygon = function(points) {\n\n    if (!(this instanceof Polygon)) {\n        return new Polygon(points);\n    }\n\n    if (typeof points === 'string') {\n        return new Polygon.parse(points);\n    }\n\n    this.points = (Array.isArray(points) ? points.map(Point) : []);\n};\n\nPolygon.parse = function(svgString) {\n    return new Polygon(parsePoints(svgString));\n};\n\nPolygon.fromRect = function(rect) {\n    return new Polygon([\n        rect.topLeft(),\n        rect.topRight(),\n        rect.bottomRight(),\n        rect.bottomLeft()\n    ]);\n};\n\nPolygon.prototype = extend(Polyline.prototype, {\n\n    type: types.Polygon,\n\n    clone: function() {\n        return new Polygon(clonePoints(this.points));\n    },\n\n    convexHull: function() {\n        return new Polygon(convexHull(this.points));\n    },\n\n    lengthPoints: function() {\n        const { start, end, points } = this;\n        if (points.length <= 1 || start.equals(end)) return points;\n        return [...points, start.clone()];\n    }\n\n});\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,QAAqD,cAArD;AAEA,OAAO,MAAMC,OAAO,GAAG,UAASC,MAAT,EAAiB;EAEpC,IAAI,EAAE,gBAAgBD,OAAlB,CAAJ,EAAgC;IAC5B,OAAO,IAAIA,OAAJ,CAAYC,MAAZ,CAAP;EACH;;EAED,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;IAC5B,OAAO,IAAID,OAAO,CAACE,KAAZ,CAAkBD,MAAlB,CAAP;EACH;;EAED,KAAKA,MAAL,GAAeE,KAAK,CAACC,OAAN,CAAcH,MAAd,IAAwBA,MAAM,CAACI,GAAP,CAAWZ,KAAX,CAAxB,GAA4C,EAA3D;AACH,CAXM;;AAaPO,OAAO,CAACE,KAAR,GAAgB,UAASI,SAAT,EAAoB;EAChC,OAAO,IAAIN,OAAJ,CAAYF,WAAW,CAACQ,SAAD,CAAvB,CAAP;AACH,CAFD;;AAIAN,OAAO,CAACO,QAAR,GAAmB,UAASC,IAAT,EAAe;EAC9B,OAAO,IAAIR,OAAJ,CAAY,CACfQ,IAAI,CAACC,OAAL,EADe,EAEfD,IAAI,CAACE,QAAL,EAFe,EAGfF,IAAI,CAACG,WAAL,EAHe,EAIfH,IAAI,CAACI,UAAL,EAJe,CAAZ,CAAP;AAMH,CAPD;;AASAZ,OAAO,CAACa,SAAR,GAAoBlB,MAAM,CAACD,QAAQ,CAACmB,SAAV,EAAqB;EAE3CC,IAAI,EAAElB,KAAK,CAACI,OAF+B;EAI3Ce,KAAK,EAAE,YAAW;IACd,OAAO,IAAIf,OAAJ,CAAYH,WAAW,CAAC,KAAKI,MAAN,CAAvB,CAAP;EACH,CAN0C;EAQ3CF,UAAU,EAAE,YAAW;IACnB,OAAO,IAAIC,OAAJ,CAAYD,UAAU,CAAC,KAAKE,MAAN,CAAtB,CAAP;EACH,CAV0C;EAY3Ce,YAAY,EAAE,YAAW;IACrB,MAAM;MAAEC,KAAF;MAASC,GAAT;MAAcjB;IAAd,IAAyB,IAA/B;IACA,IAAIA,MAAM,CAACkB,MAAP,IAAiB,CAAjB,IAAsBF,KAAK,CAACG,MAAN,CAAaF,GAAb,CAA1B,EAA6C,OAAOjB,MAAP;IAC7C,OAAO,CAAC,GAAGA,MAAJ,EAAYgB,KAAK,CAACF,KAAN,EAAZ,CAAP;EACH;AAhB0C,CAArB,CAA1B"},"metadata":{},"sourceType":"module"}