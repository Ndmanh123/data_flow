{"ast":null,"code":"// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js'); // import { Options, Vue } from 'vue-class-component';\n\n\nexport default {\n  mounted() {\n    var rectangle = new joint.shapes.standard.Rectangle({\n      z: 1,\n      size: {\n        width: 60,\n        height: 60\n      },\n      removable: false,\n      attrs: {\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0'\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 10,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      }\n    });\n    var stencilShapes = [rectangle.position(20, 10)];\n    let graph = new joint.dia.Graph();\n    var paper = new joint.dia.Paper({\n      el: document.getElementById('paper'),\n      width: 800,\n      height: 600,\n      model: graph,\n      async: true,\n      sorting: joint.dia.Paper.sorting.APPROX,\n      gridSize: 10,\n      drawGrid: true,\n      restrictTranslate: true,\n      stopDelegation: false,\n      linkView: CustomLinkView,\n      interactive: {\n        vertexAdd: false\n      },\n      // background: { color: '#F3F7F6' },\n      // defaultConnectionPoint: { name: 'boundary' },\n      // defaultConnector: {\n      //     name: \"rounded\"\n      //   },\n      //   defaultRouter: {\n      //     name: \"manhattan\",\n      //     args: {\n      //       step: 10,\n      //       endDirections: [\"bottom\"],\n      //       startDirections: [\"top\"],\n      //       padding: { bottom: 20 }\n      //     }\n      //   },\n      snapLinks: {\n        radius: 75\n      },\n      linkPinning: false,\n      multiLinks: false,\n      defaultRouter: {\n        name: 'manhattan',\n        args: {\n          padding: 10\n        }\n      },\n      defaultConnector: {\n        name: 'rounded'\n      },\n      validateConnection: function (cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n        // Prevent linking from input ports.\n        if (magnetS && magnetS.getAttribute('port-group') === 'in') return false; // Prevent linking from output ports to input ports within one element.\n\n        if (cellViewS === cellViewT) return false; // Prevent linking to input ports.\n\n        return magnetT && magnetT.getAttribute('port-group') === 'in' || cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer';\n      },\n      // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n      //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n      //     return view1 !== view2;\n      // },\n      interactive: {\n        linkMove: true,\n        labelMove: true,\n        arrowheadMove: true,\n        vertexMove: false,\n        vertexAdd: false,\n        vertexRemove: false,\n        useLinkTools: false\n      },\n      defaultLink: function () {\n        return new joint.shapes.standard.Link({\n          attrs: {\n            z: 1,\n            line: {\n              connection: true,\n              stroke: '#707070',\n              strokeLinejoin: 'round'\n            },\n            wrapper: {\n              connection: true,\n              strokeWidth: 10,\n              strokeLinejoin: 'round'\n            }\n          },\n          markup: [{\n            tagName: 'path',\n            selector: 'wrapper',\n            attributes: {\n              'fill': 'none',\n              'stroke': 'transparent'\n            }\n          }, {\n            tagName: 'path',\n            selector: 'line',\n            attributes: {\n              'fill': 'none'\n            }\n          }]\n        });\n      }\n    });\n    var stencil = new joint.ui.Stencil({\n      paper: paper,\n      width: 200,\n      height: 100,\n      dropAnimation: {\n        duration: 200,\n        easing: 'swing'\n      }\n    });\n    document.getElementById('stencil').appendChild(stencil.render().el);\n    stencil.load(stencilShapes);\n    var selection = new joint.ui.Selection({\n      theme: 'material',\n      paper: paper,\n      useModelGeometry: true,\n      boxContent: function () {\n        return ['<p>Use ', '<span style=\"background: white; border-radius: 3px; margin: 1px; display: inline-block;\">', '<img width=\"18\" height=\"18\" src=\"' + ADD_TO_STENCIL_ICON + '\" style=\"vertical-align: middle;\">', '</span>', ' to save this selection to the stencil</p>'].join('');\n      }\n    });\n    let rect = new joint.shapes.basic.Rect({\n      position: {\n        x: 100,\n        y: 30\n      },\n      size: {\n        width: 100,\n        height: 30\n      },\n      attrs: {\n        rect: {\n          fill: 'blue'\n        },\n        text: {\n          text: 'my box',\n          fill: 'white'\n        }\n      }\n    });\n    let rect2 = rect.clone();\n    rect2.translate(300);\n    let link = new joint.dia.Link({\n      source: {\n        id: rect.id\n      },\n      target: {\n        id: rect2.id\n      }\n    });\n    graph.addCells([rect, rect2, link]);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["require","mounted","rectangle","joint","shapes","standard","Rectangle","z","size","width","height","removable","attrs","root","magnet","body","fill","stroke","ports","items","id","group","groups","out","markup","tagName","selector","position","name","portBody","r","stencilShapes","graph","dia","Graph","paper","Paper","el","document","getElementById","model","async","sorting","APPROX","gridSize","drawGrid","restrictTranslate","stopDelegation","linkView","CustomLinkView","interactive","vertexAdd","snapLinks","radius","linkPinning","multiLinks","defaultRouter","args","padding","defaultConnector","validateConnection","cellViewS","magnetS","cellViewT","magnetT","end","getAttribute","get","linkMove","labelMove","arrowheadMove","vertexMove","vertexRemove","useLinkTools","defaultLink","Link","line","connection","strokeLinejoin","wrapper","strokeWidth","attributes","stencil","ui","Stencil","dropAnimation","duration","easing","appendChild","render","load","selection","Selection","theme","useModelGeometry","boxContent","ADD_TO_STENCIL_ICON","join","rect","basic","Rect","x","y","text","rect2","clone","translate","link","source","target","addCells"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["\n<template>\n<h1>Home</h1>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  \n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\n\n// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\n\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js');\n\n\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n      var rectangle = new joint.shapes.standard.Rectangle({\n        z: 1,\n        size: {\n            width: 60,\n            height: 60\n        },\n        removable: false,\n        attrs: {\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0'\n            }\n        },\n        ports: {\n            items: [{\n                id: 'out-port',\n                group: 'out'\n            }],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 10,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n                        }\n                    }\n                }\n            }\n        }\n    });var stencilShapes = [\n        rectangle.position(20, 10),\n        \n    ];\n            let graph = new joint.dia.Graph;\n\n             var paper = new joint.dia.Paper({  \n        el: document.getElementById('paper'),\n        width: 800,\n        height: 600,\n        model: graph,\n        async: true,\n        sorting: joint.dia.Paper.sorting.APPROX,\n        gridSize: 10,\n        drawGrid: true,\n        restrictTranslate: true,\n        stopDelegation: false,\n        linkView: CustomLinkView,\n        interactive: { vertexAdd: false } ,\n        // background: { color: '#F3F7F6' },\n        // defaultConnectionPoint: { name: 'boundary' },\n        // defaultConnector: {\n        //     name: \"rounded\"\n        //   },\n        //   defaultRouter: {\n        //     name: \"manhattan\",\n        //     args: {\n        //       step: 10,\n        //       endDirections: [\"bottom\"],\n        //       startDirections: [\"top\"],\n        //       padding: { bottom: 20 }\n        //     }\n        //   },\n        snapLinks: {\n            radius: 75\n        },\n        linkPinning: false,\n        multiLinks: false,\n        defaultRouter: { name: 'manhattan', args: { padding: 10 }},\n        defaultConnector: { name: 'rounded' },\n        validateConnection: function(cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n            // Prevent linking from input ports.\n            if (magnetS && magnetS.getAttribute('port-group') === 'in') return false;\n            // Prevent linking from output ports to input ports within one element.\n            if (cellViewS === cellViewT) return false;\n            // Prevent linking to input ports.\n            return (magnetT && magnetT.getAttribute('port-group') === 'in') || (cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer');\n        },\n        // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n        //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n        //     return view1 !== view2;\n        // },\n        interactive: {\n            linkMove: true,\n            labelMove: true,\n            arrowheadMove: true,\n            vertexMove: false,\n            vertexAdd: false,\n            vertexRemove: false,\n            useLinkTools: false,\n        },\n        defaultLink: function () {\n            return new joint.shapes.standard.Link({\n                attrs: {\n                    z:1,\n                    line: {\n                        connection: true,\n                        stroke: '#707070',\n                        strokeLinejoin: 'round',\n                    },\n                    wrapper: {\n                        connection: true,\n                        strokeWidth: 10,\n                        strokeLinejoin: 'round'\n                    },\n                    \n                },\n                \n                markup: [{\n                    tagName: 'path',\n                    selector: 'wrapper',\n                    attributes: {\n                        'fill': 'none',\n                        \n                        'stroke': 'transparent'\n                    }\n                }, {\n                    tagName: 'path',\n                    selector: 'line',\n                    attributes: {\n                        'fill': 'none',\n                        \n                    }\n                }]\n            });\n        }\n    });\nvar stencil = new joint.ui.Stencil({\n        paper: paper,\n        width: 200,\n        height: 100,\n        dropAnimation: { duration: 200, easing: 'swing' },\n        \n    });document.getElementById('stencil').appendChild(stencil.render().el);\n    stencil.load(stencilShapes);\nvar selection = new joint.ui.Selection({\n        theme: 'material',\n        paper: paper,\n        useModelGeometry: true,\n        boxContent: function() {\n            return [\n                '<p>Use ',\n                '<span style=\"background: white; border-radius: 3px; margin: 1px; display: inline-block;\">',\n                '<img width=\"18\" height=\"18\" src=\"' + ADD_TO_STENCIL_ICON + '\" style=\"vertical-align: middle;\">',\n                '</span>',\n                ' to save this selection to the stencil</p>'\n            ].join('');\n        }\n    });\n            let rect = new joint.shapes.basic.Rect({\n                position: { x: 100, y: 30 },\n                size: { width: 100, height: 30 },\n                attrs: { rect: { fill: 'blue' }, text: { text: 'my box', fill: 'white' } }\n            });\n\n            let rect2 = rect.clone();\n            rect2.translate(300);\n\n            let link = new joint.dia.Link({\n                source: { id: rect.id },\n                target: { id: rect2.id }\n            });\n\n            graph.addCells([rect, rect2, link]);\n        }\n  }\n\n  \n\n</script>\n\n<style >\n@import \"@/../public/vendor/jointJS/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}