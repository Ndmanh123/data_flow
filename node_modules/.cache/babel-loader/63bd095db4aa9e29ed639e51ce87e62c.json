{"ast":null,"code":"import * as g from '../g/index.mjs';\nexport const smooth = function (sourcePoint, targetPoint, route, opt) {\n  var raw = opt && opt.raw;\n  var path;\n\n  if (route && route.length !== 0) {\n    var points = [sourcePoint].concat(route).concat([targetPoint]);\n    var curves = g.Curve.throughPoints(points);\n    path = new g.Path(curves);\n  } else {\n    // if we have no route, use a default cubic bezier curve\n    // cubic bezier requires two control points\n    // the control points have `x` midway between source and target\n    // this produces an S-like curve\n    path = new g.Path();\n    var segment;\n    segment = g.Path.createSegment('M', sourcePoint);\n    path.appendSegment(segment);\n\n    if (Math.abs(sourcePoint.x - targetPoint.x) >= Math.abs(sourcePoint.y - targetPoint.y)) {\n      var controlPointX = (sourcePoint.x + targetPoint.x) / 2;\n      segment = g.Path.createSegment('C', controlPointX, sourcePoint.y, controlPointX, targetPoint.y, targetPoint.x, targetPoint.y);\n      path.appendSegment(segment);\n    } else {\n      var controlPointY = (sourcePoint.y + targetPoint.y) / 2;\n      segment = g.Path.createSegment('C', sourcePoint.x, controlPointY, targetPoint.x, controlPointY, targetPoint.x, targetPoint.y);\n      path.appendSegment(segment);\n    }\n  }\n\n  return raw ? path : path.serialize();\n};","map":{"version":3,"names":["g","smooth","sourcePoint","targetPoint","route","opt","raw","path","length","points","concat","curves","Curve","throughPoints","Path","segment","createSegment","appendSegment","Math","abs","x","y","controlPointX","controlPointY","serialize"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/connectors/smooth.mjs"],"sourcesContent":["import * as g from '../g/index.mjs';\n\nexport const smooth = function(sourcePoint, targetPoint, route, opt) {\n\n    var raw = opt && opt.raw;\n    var path;\n\n    if (route && route.length !== 0) {\n\n        var points = [sourcePoint].concat(route).concat([targetPoint]);\n        var curves = g.Curve.throughPoints(points);\n\n        path = new g.Path(curves);\n\n    } else {\n        // if we have no route, use a default cubic bezier curve\n        // cubic bezier requires two control points\n        // the control points have `x` midway between source and target\n        // this produces an S-like curve\n\n        path = new g.Path();\n\n        var segment;\n\n        segment = g.Path.createSegment('M', sourcePoint);\n        path.appendSegment(segment);\n\n        if ((Math.abs(sourcePoint.x - targetPoint.x)) >= (Math.abs(sourcePoint.y - targetPoint.y))) {\n            var controlPointX = (sourcePoint.x + targetPoint.x) / 2;\n\n            segment = g.Path.createSegment('C', controlPointX, sourcePoint.y, controlPointX, targetPoint.y, targetPoint.x, targetPoint.y);\n            path.appendSegment(segment);\n\n        } else {\n            var controlPointY = (sourcePoint.y + targetPoint.y) / 2;\n\n            segment = g.Path.createSegment('C', sourcePoint.x, controlPointY, targetPoint.x, controlPointY, targetPoint.x, targetPoint.y);\n            path.appendSegment(segment);\n\n        }\n    }\n\n    return (raw) ? path : path.serialize();\n};\n"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,gBAAnB;AAEA,OAAO,MAAMC,MAAM,GAAG,UAASC,WAAT,EAAsBC,WAAtB,EAAmCC,KAAnC,EAA0CC,GAA1C,EAA+C;EAEjE,IAAIC,GAAG,GAAGD,GAAG,IAAIA,GAAG,CAACC,GAArB;EACA,IAAIC,IAAJ;;EAEA,IAAIH,KAAK,IAAIA,KAAK,CAACI,MAAN,KAAiB,CAA9B,EAAiC;IAE7B,IAAIC,MAAM,GAAG,CAACP,WAAD,EAAcQ,MAAd,CAAqBN,KAArB,EAA4BM,MAA5B,CAAmC,CAACP,WAAD,CAAnC,CAAb;IACA,IAAIQ,MAAM,GAAGX,CAAC,CAACY,KAAF,CAAQC,aAAR,CAAsBJ,MAAtB,CAAb;IAEAF,IAAI,GAAG,IAAIP,CAAC,CAACc,IAAN,CAAWH,MAAX,CAAP;EAEH,CAPD,MAOO;IACH;IACA;IACA;IACA;IAEAJ,IAAI,GAAG,IAAIP,CAAC,CAACc,IAAN,EAAP;IAEA,IAAIC,OAAJ;IAEAA,OAAO,GAAGf,CAAC,CAACc,IAAF,CAAOE,aAAP,CAAqB,GAArB,EAA0Bd,WAA1B,CAAV;IACAK,IAAI,CAACU,aAAL,CAAmBF,OAAnB;;IAEA,IAAKG,IAAI,CAACC,GAAL,CAASjB,WAAW,CAACkB,CAAZ,GAAgBjB,WAAW,CAACiB,CAArC,CAAD,IAA8CF,IAAI,CAACC,GAAL,CAASjB,WAAW,CAACmB,CAAZ,GAAgBlB,WAAW,CAACkB,CAArC,CAAlD,EAA4F;MACxF,IAAIC,aAAa,GAAG,CAACpB,WAAW,CAACkB,CAAZ,GAAgBjB,WAAW,CAACiB,CAA7B,IAAkC,CAAtD;MAEAL,OAAO,GAAGf,CAAC,CAACc,IAAF,CAAOE,aAAP,CAAqB,GAArB,EAA0BM,aAA1B,EAAyCpB,WAAW,CAACmB,CAArD,EAAwDC,aAAxD,EAAuEnB,WAAW,CAACkB,CAAnF,EAAsFlB,WAAW,CAACiB,CAAlG,EAAqGjB,WAAW,CAACkB,CAAjH,CAAV;MACAd,IAAI,CAACU,aAAL,CAAmBF,OAAnB;IAEH,CAND,MAMO;MACH,IAAIQ,aAAa,GAAG,CAACrB,WAAW,CAACmB,CAAZ,GAAgBlB,WAAW,CAACkB,CAA7B,IAAkC,CAAtD;MAEAN,OAAO,GAAGf,CAAC,CAACc,IAAF,CAAOE,aAAP,CAAqB,GAArB,EAA0Bd,WAAW,CAACkB,CAAtC,EAAyCG,aAAzC,EAAwDpB,WAAW,CAACiB,CAApE,EAAuEG,aAAvE,EAAsFpB,WAAW,CAACiB,CAAlG,EAAqGjB,WAAW,CAACkB,CAAjH,CAAV;MACAd,IAAI,CAACU,aAAL,CAAmBF,OAAnB;IAEH;EACJ;;EAED,OAAQT,GAAD,GAAQC,IAAR,GAAeA,IAAI,CAACiB,SAAL,EAAtB;AACH,CAzCM"},"metadata":{},"sourceType":"module"}