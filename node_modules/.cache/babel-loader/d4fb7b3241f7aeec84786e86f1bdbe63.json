{"ast":null,"code":"import * as g from '../../g/index.mjs';\nimport * as util from '../../util/index.mjs';\n\nfunction portTransformAttrs(point, angle, opt) {\n  var trans = point.toJSON();\n  trans.angle = angle || 0;\n  return util.defaults({}, opt, trans);\n}\n\nfunction lineLayout(ports, p1, p2) {\n  return ports.map(function (port, index, ports) {\n    var p = this.pointAt((index + 0.5) / ports.length); // `dx`,`dy` per port offset option\n\n    if (port.dx || port.dy) {\n      p.offset(port.dx || 0, port.dy || 0);\n    }\n\n    return portTransformAttrs(p.round(), 0, port);\n  }, g.line(p1, p2));\n}\n\nfunction ellipseLayout(ports, elBBox, startAngle, stepFn) {\n  var center = elBBox.center();\n  var ratio = elBBox.width / elBBox.height;\n  var p1 = elBBox.topMiddle();\n  var ellipse = g.Ellipse.fromRect(elBBox);\n  return ports.map(function (port, index, ports) {\n    var angle = startAngle + stepFn(index, ports.length);\n    var p2 = p1.clone().rotate(center, -angle).scale(ratio, 1, center);\n    var theta = port.compensateRotation ? -ellipse.tangentTheta(p2) : 0; // `dx`,`dy` per port offset option\n\n    if (port.dx || port.dy) {\n      p2.offset(port.dx || 0, port.dy || 0);\n    } // `dr` delta radius option\n\n\n    if (port.dr) {\n      p2.move(center, port.dr);\n    }\n\n    return portTransformAttrs(p2.round(), theta, port);\n  });\n} // Creates a point stored in arguments\n\n\nfunction argPoint(bbox, args) {\n  var x = args.x;\n\n  if (util.isString(x)) {\n    x = parseFloat(x) / 100 * bbox.width;\n  }\n\n  var y = args.y;\n\n  if (util.isString(y)) {\n    y = parseFloat(y) / 100 * bbox.height;\n  }\n\n  return g.point(x || 0, y || 0);\n}\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\n\n\nexport const absolute = function (ports, elBBox, opt) {\n  //TODO v.talas angle\n  return ports.map(argPoint.bind(null, elBBox));\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const fn = function (ports, elBBox, opt) {\n  return opt.fn(ports, elBBox, opt);\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const line = function (ports, elBBox, opt) {\n  var start = argPoint(elBBox, opt.start || elBBox.origin());\n  var end = argPoint(elBBox, opt.end || elBBox.corner());\n  return lineLayout(ports, start, end);\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const left = function (ports, elBBox, opt) {\n  return lineLayout(ports, elBBox.origin(), elBBox.bottomLeft());\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const right = function (ports, elBBox, opt) {\n  return lineLayout(ports, elBBox.topRight(), elBBox.corner());\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const top = function (ports, elBBox, opt) {\n  return lineLayout(ports, elBBox.origin(), elBBox.topRight());\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const bottom = function (ports, elBBox, opt) {\n  return lineLayout(ports, elBBox.bottomLeft(), elBBox.corner());\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const ellipseSpread = function (ports, elBBox, opt) {\n  var startAngle = opt.startAngle || 0;\n  var stepAngle = opt.step || 360 / ports.length;\n  return ellipseLayout(ports, elBBox, startAngle, function (index) {\n    return index * stepAngle;\n  });\n};\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt Group options\n * @returns {Array<g.Point>}\n */\n\nexport const ellipse = function (ports, elBBox, opt) {\n  var startAngle = opt.startAngle || 0;\n  var stepAngle = opt.step || 20;\n  return ellipseLayout(ports, elBBox, startAngle, function (index, count) {\n    return (index + 0.5 - count / 2) * stepAngle;\n  });\n};","map":{"version":3,"names":["g","util","portTransformAttrs","point","angle","opt","trans","toJSON","defaults","lineLayout","ports","p1","p2","map","port","index","p","pointAt","length","dx","dy","offset","round","line","ellipseLayout","elBBox","startAngle","stepFn","center","ratio","width","height","topMiddle","ellipse","Ellipse","fromRect","clone","rotate","scale","theta","compensateRotation","tangentTheta","dr","move","argPoint","bbox","args","x","isString","parseFloat","y","absolute","bind","fn","start","origin","end","corner","left","bottomLeft","right","topRight","top","bottom","ellipseSpread","stepAngle","step","count"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/layout/ports/port.mjs"],"sourcesContent":["import * as g from '../../g/index.mjs';\nimport * as util from '../../util/index.mjs';\n\nfunction portTransformAttrs(point, angle, opt) {\n\n    var trans = point.toJSON();\n\n    trans.angle = angle || 0;\n\n    return util.defaults({}, opt, trans);\n}\n\nfunction lineLayout(ports, p1, p2) {\n    return ports.map(function(port, index, ports) {\n        var p = this.pointAt(((index + 0.5) / ports.length));\n        // `dx`,`dy` per port offset option\n        if (port.dx || port.dy) {\n            p.offset(port.dx || 0, port.dy || 0);\n        }\n\n        return portTransformAttrs(p.round(), 0, port);\n    }, g.line(p1, p2));\n}\n\nfunction ellipseLayout(ports, elBBox, startAngle, stepFn) {\n\n    var center = elBBox.center();\n    var ratio = elBBox.width / elBBox.height;\n    var p1 = elBBox.topMiddle();\n\n    var ellipse = g.Ellipse.fromRect(elBBox);\n\n    return ports.map(function(port, index, ports) {\n\n        var angle = startAngle + stepFn(index, ports.length);\n        var p2 = p1.clone()\n            .rotate(center, -angle)\n            .scale(ratio, 1, center);\n\n        var theta = port.compensateRotation ? -ellipse.tangentTheta(p2) : 0;\n\n        // `dx`,`dy` per port offset option\n        if (port.dx || port.dy) {\n            p2.offset(port.dx || 0, port.dy || 0);\n        }\n\n        // `dr` delta radius option\n        if (port.dr) {\n            p2.move(center, port.dr);\n        }\n\n        return portTransformAttrs(p2.round(), theta, port);\n    });\n}\n\n// Creates a point stored in arguments\nfunction argPoint(bbox, args) {\n\n    var x = args.x;\n    if (util.isString(x)) {\n        x = parseFloat(x) / 100 * bbox.width;\n    }\n\n    var y = args.y;\n    if (util.isString(y)) {\n        y = parseFloat(y) / 100 * bbox.height;\n    }\n\n    return g.point(x || 0, y || 0);\n}\n\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\nexport const absolute = function(ports, elBBox, opt) {\n    //TODO v.talas angle\n    return ports.map(argPoint.bind(null, elBBox));\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\nexport const fn = function(ports, elBBox, opt) {\n    return opt.fn(ports, elBBox, opt);\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\nexport const line = function(ports, elBBox, opt) {\n\n    var start = argPoint(elBBox, opt.start || elBBox.origin());\n    var end = argPoint(elBBox, opt.end || elBBox.corner());\n\n    return lineLayout(ports, start, end);\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\nexport const left = function(ports, elBBox, opt) {\n    return lineLayout(ports, elBBox.origin(), elBBox.bottomLeft());\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\nexport const right = function(ports, elBBox, opt) {\n    return lineLayout(ports, elBBox.topRight(), elBBox.corner());\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\nexport const top = function(ports, elBBox, opt) {\n    return lineLayout(ports, elBBox.origin(), elBBox.topRight());\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt opt Group options\n * @returns {Array<g.Point>}\n */\nexport const bottom = function(ports, elBBox, opt) {\n    return lineLayout(ports, elBBox.bottomLeft(), elBBox.corner());\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt Group options\n * @returns {Array<g.Point>}\n */\nexport const ellipseSpread = function(ports, elBBox, opt) {\n\n    var startAngle = opt.startAngle || 0;\n    var stepAngle = opt.step || 360 / ports.length;\n\n    return ellipseLayout(ports, elBBox, startAngle, function(index) {\n        return index * stepAngle;\n    });\n};\n\n/**\n * @param {Array<Object>} ports\n * @param {g.Rect} elBBox\n * @param {Object=} opt Group options\n * @returns {Array<g.Point>}\n */\nexport const ellipse = function(ports, elBBox, opt) {\n\n    var startAngle = opt.startAngle || 0;\n    var stepAngle = opt.step || 20;\n\n    return ellipseLayout(ports, elBBox, startAngle, function(index, count) {\n        return (index + 0.5 - count / 2) * stepAngle;\n    });\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}