{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Home\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"canvas\",\n  ref: \"canvas\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<div id=\\\"app\\\"><div class=\\\"btn_contain\\\"><button id=\\\"btn-zoomout\\\" class=\\\"btn\\\">zoom out</button><button id=\\\"btn-zoomin\\\" class=\\\"btn\\\">zoom in</button><button id=\\\"btn-center\\\" class=\\\"btn\\\">center</button><button id=\\\"btn-center-content\\\" class=\\\"btn\\\">center content</button></div><div id=\\\"stencil\\\"></div><div id=\\\"paper\\\"></div><div id=\\\"navigator\\\"></div></div>\", 1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, null, 512\n  /* NEED_PATCH */\n  ), _hoisted_3], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAEAA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;EACOC,KAAK,EAAC;EAASC,GAAG,EAAC;;;;;;6DAD1BC,YACEH,oBAAuC,KAAvC,cAAuC,IAAvC,EAAuC;EAAA;EAAvC,GAEAI","names":["_createElementVNode","class","ref","_hoisted_1","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["\n<template>\n<h1>Home</h1>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  \n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\n\n// import '@/../public/vendor/jointJS/js/lib/backbone.js'\nimport '@/../public/vendor/jointJS/js/lib/jquery.min.js'\nimport '@/../public/vendor/jointJS/js/lib/lodash.min.js'\nimport '@/../public/vendor/jointJS/js/lib/rappid.js'\nimport '@/../public/vendor/jointJS/js/lib/backbone.min.js'\n\n\n\n\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n    var rectangle = new joint.shapes.standard.Rectangle({\n        z: 1,\n        size: {\n            width: 60,\n            height: 60\n        },\n        removable: false,\n        attrs: {\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0'\n            }\n        },\n        ports: {\n            items: [{\n                id: 'out-port',\n                group: 'out'\n            }],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 10,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    var ellipse = new joint.shapes.standard.Ellipse({\n        z: 2,\n        size: {\n            width: 60,\n            height: 60\n        },\n        removable: false,\n        attrs: {\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                pointerEvents: 'bounding-box'\n            }\n        },\n        ports: {\n            items: [{\n                id: 'in-port',\n                group: 'in'\n            }],\n            groups: {\n                in: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'left'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 10,\n                            magnet: 'passive',\n                            fill: '#FFFFFF',\n                            stroke: '#187BD3',\n                            strokeWidth: 2\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    var stencilShapes = [\n        rectangle.position(20, 10),\n        ellipse.position(120, 10)\n    ];var graph = new joint.dia.Graph;\n\n    this.paper = new joint.dia.Paper({\n        el: document.getElementById('paper'),\n        width: 800,\n        height: 600,\n        model: graph,\n        async: true,\n        sorting: joint.dia.Paper.sorting.APPROX,\n        linkPinning: false,\n        background: { color: '#F3F7F6' },\n        defaultConnectionPoint: { name: 'boundary' },\n        validateConnection: function(view1, _magnet1, view2, _magnet2) {\n            // Do not allow loop links (Element to Link, Element A to Element B is valid).\n            return view1 !== view2;\n        },\n        highlighting: {\n            'default': {\n                name: 'stroke',\n                options: {\n                    padding: 8,\n                    attrs: {\n                        'stroke': '#187BD3',\n                        'stroke-width': 3\n                    }\n                }\n            }\n        },\n        defaultLink: function() {\n            return new joint.shapes.standard.Link({\n                attrs: {\n                    line: {\n                        stroke: '#707070'\n                    }\n                }\n            });\n        }\n    });\n        var stencil = new joint.ui.Stencil({\n        paper: paper,\n        width: 200,\n        height: 100,\n        dropAnimation: { duration: 200, easing: 'swing' },\n        layout: function(graph) {\n            var elements = graph.getElements().filter(function(el) {\n                return el.get('removable');\n            });\n            // Automatically layout the removable elements only.\n            joint.layout.GridLayout.layout(elements, {\n                marginY: 70,\n                columns: 1,\n                rowHeight: 'compact',\n                dx: 20,\n                dy: 10,\n                centre: false,\n                resizeToFit: false\n            });\n        }\n    }); stencil.load(stencilShapes);\n    }\n  }\n\n  \n\n</script>\n\n<style >\n@import \"@/../public/vendor/jointJS/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}