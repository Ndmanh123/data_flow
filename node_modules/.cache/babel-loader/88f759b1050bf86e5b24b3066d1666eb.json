{"ast":null,"code":"// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js'); // import { Options, Vue } from 'vue-class-component';\n\n\nexport default {\n  mounted() {\n    var highlighters = joint.highlighters;\n    var mask = joint.highlighters.mask;\n    let selectionNode = null;\n    let selectedElement = null;\n    let selectedLink = null; //check ctrl shift\n\n    var ctrlDown = false;\n    var shiftDown = false;\n    const color = \"rgb(255 136 0)\";\n    var customEl = joint.dia.Element.define('standard.Rectangle', {\n      z: 1,\n      size: {\n        width: 44,\n        height: 35\n      },\n      removable: false,\n      attrs: {\n        image: {\n          x: 5,\n          y: 5,\n          width: 'calc(w-10)',\n          height: 'calc(h-10 )'\n        },\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0',\n          width: 'calc(w)',\n          height: 'calc(h)',\n          strokeWidth: 2,\n          rx: 5,\n          ry: 5\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }, {\n          id: 'in-port',\n          group: 'in'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          },\n          in: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'left'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'passive',\n                fill: '#FFFFFF',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      },\n      markup: [{\n        tagName: 'rect',\n        selector: 'body'\n      }, {\n        tagName: 'image',\n        selector: 'image'\n      }, {\n        tagName: 'ports',\n        selector: 'ports'\n      }]\n    });\n    var customElNoInPorts = joint.dia.Element.define('standard.Rectangle', {\n      z: 1,\n      theme: 'material',\n      size: {\n        width: 44,\n        height: 35\n      },\n      removable: false,\n      attrs: {\n        image: {\n          x: 5,\n          y: 5,\n          width: 'calc(w-10)',\n          height: 'calc(h-10 )'\n        },\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0',\n          width: 'calc(w)',\n          height: 'calc(h)',\n          strokeWidth: 2\n        },\n        line: {\n          connection: true,\n          stroke: '#333333',\n          strokeWidth: 2,\n          strokeLinejoin: 'round',\n          targetMarker: {\n            'type': 'path',\n            'd': 'M 10 -5 0 0 10 5 z'\n          }\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      },\n      markup: [{\n        tagName: 'rect',\n        selector: 'body'\n      }, {\n        tagName: 'image',\n        selector: 'image'\n      }, {\n        tagName: 'ports',\n        selector: 'ports'\n      }]\n    }); //create link tool\n    //     var verticesTool = new joint.linkTools.Vertices();\n    // var segmentsTool = new joint.linkTools.Segments();\n    // var sourceArrowheadTool = new joint.linkTools.SourceArrowhead();\n\n    var targetArrowheadTool = new joint.linkTools.TargetArrowhead(); // var sourceAnchorTool = new joint.linkTools.SourceAnchor();\n    // var targetAnchorTool = new joint.linkTools.TargetAnchor();\n    // var boundaryTool = new joint.linkTools.Boundary();\n    // var removeButton = new joint.linkTools.Remove();\n\n    var toolsView = new joint.dia.ToolsView({\n      tools: [// verticesTool, segmentsTool,\n      // sourceArrowheadTool, \n      targetArrowheadTool // sourceAnchorTool, targetAnchorTool,\n      // boundaryTool, removeButton\n      ]\n    }); // 2) creating a tools view\n    // var linkView = link.findView(paper);\n    // linkView.addTools(toolsView);\n    //custom link \n\n    var CustomLinkView = joint.dia.LinkView.extend({\n      // custom interactions:\n      pointerdblclick: function (evt, x, y) {\n        this.addVertex(x, y);\n      },\n      contextmenu: function (evt, x, y) {\n        this.addLabel(x, y);\n      },\n      // custom options:\n      options: joint.util.defaults({\n        doubleLinkTools: true\n      }, joint.dia.LinkView.prototype.options)\n    }); // Paper & Graph\n\n    this.graph = new joint.dia.Graph(); //ctrl+z\n\n    var commandManager = new joint.dia.CommandManager({\n      graph: this.graph\n    }); //cấu hình paper\n\n    var paper = new joint.dia.Paper({\n      width: 800,\n      height: 600,\n      model: this.graph,\n      async: true,\n      sorting: joint.dia.Paper.sorting.APPROX,\n      gridSize: 10,\n      drawGrid: true,\n      restrictTranslate: true,\n      stopDelegation: false,\n      linkView: CustomLinkView,\n      interactive: {\n        vertexAdd: false\n      },\n      // background: { color: '#F3F7F6' },\n      // defaultConnectionPoint: { name: 'boundary' },\n      // defaultConnector: {\n      //     name: \"rounded\"\n      //   },\n      //   defaultRouter: {\n      //     name: \"manhattan\",\n      //     args: {\n      //       step: 10,\n      //       endDirections: [\"bottom\"],\n      //       startDirections: [\"top\"],\n      //       padding: { bottom: 20 }\n      //     }\n      //   },\n      snapLinks: {\n        radius: 75\n      },\n      linkPinning: false,\n      multiLinks: false,\n      defaultRouter: {\n        name: 'manhattan',\n        args: {\n          padding: 10\n        }\n      },\n      defaultConnector: {\n        name: 'rounded'\n      },\n      validateConnection: function (cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n        // Prevent linking from input ports.\n        if (magnetS && magnetS.getAttribute('port-group') === 'in') return false; // Prevent linking from output ports to input ports within one element.\n\n        if (cellViewS === cellViewT) return false; // Prevent linking to input ports.\n\n        return magnetT && magnetT.getAttribute('port-group') === 'in' || cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer';\n      },\n      // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n      //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n      //     return view1 !== view2;\n      // },\n      interactive: {\n        linkMove: true,\n        labelMove: true,\n        arrowheadMove: true,\n        vertexMove: false,\n        vertexAdd: false,\n        vertexRemove: false,\n        useLinkTools: false\n      },\n      defaultLink: function () {\n        return new joint.shapes.standard.Link({\n          attrs: {\n            z: 1,\n            line: {\n              connection: true,\n              stroke: '#707070',\n              strokeLinejoin: 'round'\n            },\n            wrapper: {\n              connection: true,\n              strokeWidth: 10,\n              strokeLinejoin: 'round'\n            }\n          },\n          markup: [{\n            tagName: 'path',\n            selector: 'wrapper',\n            attributes: {\n              'fill': 'none',\n              'stroke': 'transparent'\n            }\n          }, {\n            tagName: 'path',\n            selector: 'line',\n            attributes: {\n              'fill': 'none'\n            }\n          }]\n        });\n      }\n    }); //paperScroller\n\n    var paperScroller = new joint.ui.PaperScroller({\n      paper: paper,\n      autoResizePaper: true,\n      scrollWhileDragging: true,\n      cursor: 'grab'\n    }); // cấu hình snaplines\n\n    var snaplines = new joint.ui.Snaplines({\n      paper: paper\n    });\n    snaplines.startListening(); // cấu hình Stencil \n\n    var stencil = new joint.ui.Stencil({\n      paper: paperScroller,\n      width: 900,\n      height: 60,\n      dropAnimation: {\n        duration: 200,\n        easing: 'swing'\n      }\n    }); // cấu hình Selection\n\n    var selection = new joint.ui.Selection({\n      theme: 'material',\n      paper: paper,\n      useModelGeometry: true,\n      allowTranslate: true\n    }); //hàm viết hoa chữ đầu\n\n    function jsUcfirst(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    } //hàm render stencil\n\n\n    function stencilRenderHandler(positionX, positionY, arr, elNoInPorts = \"\", spaceBetweenElToX = 0, spaceBetweenElToY = 0) {\n      arr.forEach(element => {\n        //chuyển thành hoa chữ đầu cho đúng định dạng file ảnh lưu\n        let elementName = jsUcfirst(element);\n\n        if (elementName === jsUcfirst(elNoInPorts)) {\n          element = new customElNoInPorts();\n        } else {\n          element = new customEl();\n        }\n\n        element.prop('attrs/image/xlinkHref', `./assets/${elementName}.svg`);\n        stencilShapes.push(element.position(positionX, positionY));\n\n        if (spaceBetweenElToX > 0) {\n          positionX += element.attributes.size.width + spaceBetweenElToX;\n        }\n\n        if (spaceBetweenElToY > 0) {\n          positionY += element.attributes.size.height + spaceBetweenElToY;\n        }\n      });\n    } // const filter=new customEl();\n    // const formula =new customEl();\n    // const join =new customEl();\n    // const load =new customElNoInPorts();\n    // const pivot =new customEl();\n    // const sample =new customEl();\n    // const script =new customEl();\n    // const select =new customEl();\n    // const sort =new customEl();\n    // const summarize =new customEl();\n    // const transposeTable =new customEl();\n    // const union =new customEl();\n    // const weightAvg =new customEl();\n    // filter.prop('attrs/image/xlinkHref', './assets/Filter.svg');\n    // formula.prop('attrs/image/xlinkHref', './assets/Formula.svg');\n    // join.prop('attrs/image/xlinkHref', './assets/Join.svg');\n    // load.prop('attrs/image/xlinkHref', './assets/Load.svg');\n    // pivot.prop('attrs/image/xlinkHref', './assets/Pivot.svg');\n    // sample.prop('attrs/image/xlinkHref', './assets/Sample.svg');\n    // script.prop('attrs/image/xlinkHref', './assets/Script.svg');\n    // select.prop('attrs/image/xlinkHref', './assets/Select.svg');\n    // sort.prop('attrs/image/xlinkHref', './assets/Sort.svg');\n    // summarize.prop('attrs/image/xlinkHref', './assets/Summarize.svg');\n    // transposeTable.prop('attrs/image/xlinkHref', './assets/TransposeTable.svg');\n    // union.prop('attrs/image/xlinkHref', './assets/Union.svg');\n    // weightAvg.prop('attrs/image/xlinkHref', './assets/WeightAvg.svg');\n    //mảng tên của các stencil Shape\n\n\n    var arr = ['filter', 'formula', 'join', 'load', 'pivot', 'sample', 'script', 'select', 'sort', 'summarize', 'transposeTable', 'union', 'weightAvg']; //mảng chứa các vị trí của stencil Shape để sau đó render\n\n    var stencilShapes = [// filter.position(20, 20),\n      // formula.position(77, 20),\n      // join.position(132, 20),\n      // load.position(197, 20),\n      // pivot.position(252, 20),\n      // sample.position(307, 20),\n      // script.position(362, 20),\n      // select.position(417, 20),\n      // sort.position(472, 20),\n      // summarize.position(527, 20),\n      // transposeTable.position(582, 20),\n      // union.position(637, 20),\n      // weightAvg.position(692, 20),\n      // rectangle.position(812, 20)\n    ]; //gọi hàm render stencil \n\n    stencilRenderHandler(20, 20, arr, \"load\", 16); //cấu hình các cell dc chọn\n\n    paper.svg.prepend(V.createSVGStyle(`\n            .joint-element .selection {\n                stroke: ${color};\n            }\n            .joint-link .selection {\n                stroke: ${color}; \n                'fill': ${color},\n            }\n            \n        `)); //lấy tất cả link ở trc node\n\n    function getElementPredecessorLinks(el) {\n      return this.graph.getSubgraph([el, ...this.graph.getPredecessors(el)]).filter(cell => cell.isLink());\n    } //đổi màu cell\n\n\n    function highlightCell(cell) {\n      if (cell) {\n        highlighters.addClass.add(cell.findView(paper), cell.isElement() ? \"body\" : \"line\", \"selection\", {\n          className: \"selection\"\n        });\n      } else {\n        return;\n      }\n    } //chuyển màu cell lại như cũ\n\n\n    function unhighlightCell(cell) {\n      if (cell) {\n        highlighters.addClass.remove(cell.findView(paper), \"selection\");\n      } else {\n        return;\n      }\n    } //function xử lý hành dộng chọn el\n\n\n    function selectElement(el) {\n      if (selectionNode === el) return;\n\n      if (selectionNode) {\n        unhighlightCell(selectionNode);\n        this.graph.getLinks().forEach(link => unhighlightCell(link));\n      }\n\n      if (el) {\n        highlightCell(el);\n        getElementPredecessorLinks(el).forEach(link => {\n          highlightCell(link); //   link.toFront()\n\n          link.attributes.z += 1;\n        });\n        selectionNode = el;\n      } else {\n        selectionNode = null;\n      }\n    } //halo cấu hình\n\n\n    paper.on('cell:pointerup', function (cellView) {\n      var halo = new joint.ui.Halo({\n        cellView: cellView,\n        type: 'toolbar',\n        boxContent: false // bang phia duoi cell cho biet tọa độ height width và angle\n\n      });\n      halo.removeHandle('resize');\n      halo.removeHandle('rotate');\n      halo.removeHandle('direction');\n      halo.render(); //cho cell đang chọn lên trc và gán cho selectedEl để chạy những chức năng tiếp theo\n      // selectedElement = cellView.model;\n      // selectedElement.toFront()\n\n      cellView.$el[0].parentElement.appendChild(cellView.$el[0]); // console.log(graph.getLinks())\n    }); //xử lý khi các sự kiện với paper\n\n    paper.on({\n      //xử lý khi các sự kiện \n      \"cell:mouseenter\": cellView => {\n        cellView.$el[0].parentElement.appendChild(cellView.$el[0]); // .parentElement.appendChild($0)\n        // cellView.model.toFront()\n      },\n      \"cell:mouseleave\": cellView => {\n        // cellView.model.toBack()\n        if (selectionNode) {\n          getElementPredecessorLinks(selectionNode).forEach(link => {// link.toFront()\n          });\n        }\n      },\n      \"element:pointerclick\": cellView => {\n        //chỉ đổi màu khi ko bấm ctrl\n        if (ctrlDown === false) {\n          selectElement(cellView.model);\n        }\n      },\n      \"link:pointerclick\": cellView => {\n        selectElement(cellView.model); //chon vao link thi mo cho phep doi node\n\n        cellView.addTools(toolsView);\n      },\n      //chuyển lại màu cũ khi bấm ra ngoài\n      \"blank:pointerclick\": () => {\n        selectElement(null);\n        paper.removeTools();\n      },\n      'element:pointerup': function (cellView, evt) {\n        if (evt.ctrlKey || evt.metaKey) {\n          console.log(cellView);\n          selection.collection.add(cellView.model); //loop to all the element in selection and set it to front\n\n          selection.collection.models.forEach(element => {\n            cellView.$el[0].parentElement.appendChild(cellView.$el[0]);\n          });\n        }\n      },\n      //chuyển màu khi bấm vào link và cho nó lên trc\n      'link:pointerup': function (cellView) {\n        console.log(cellView);\n        selectedLink = cellView.model;\n        cellView.$el[0].parentElement.appendChild(cellView.$el[0]);\n      },\n      // lắng nghe sự kiện bấm ở ngoài khoange trống check shift để active select\n      'blank:pointerdown': function (evt, x, y) {\n        if (shiftDown === true) {\n          selectElement(null);\n          paperScroller.setCursor('crosshair');\n          selection.startSelecting(evt);\n          console.log(selection);\n        } else {\n          selection.collection.reset([]);\n          paperScroller.startPanning(evt, x, y);\n          paper.removeTools();\n          paperScroller.setCursor('grab');\n        }\n      }\n    }); //xóa el nếu chọn lại lần 2 khi bấm ctrl\n\n    selection.on('selection-box:pointerdown', function (cellView, evt) {\n      if (evt.ctrlKey || evt.metaKey) {\n        selection.collection.remove(cellView.model);\n      }\n    }); //xóa bằng nút delete\n\n    document.addEventListener('keyup', function (evt) {\n      if (!selectedElement && !selection) return;\n\n      if (evt.code === 'Backspace' || evt.code === 'Delete') {\n        //xóa 1 el\n        if (selectedElement) {\n          selectedElement.remove();\n          selectedElement = null;\n          selectionNode = null;\n        } //xóa toàn bộ  el đã chọn\n\n\n        if (selection) {\n          // chuyeent selection.collection thành mảng hảm remove cell nhận vào 1 mảng và xóa khỏi graph\n          evt.preventDefault();\n          this.graph.removeCells(selection.collection.toArray());\n          selectionNode = null;\n        }\n      }\n    }); //nếu bấm thì =true\n\n    document.addEventListener('keydown', function (evt) {\n      if (evt.code === \"ControlLeft\" || evt.code === \"ControlRight\") {\n        ctrlDown = true;\n      }\n\n      if (evt.code === \"ShiftLeft\" || evt.code === \"ShiftRight\") {\n        shiftDown = true;\n      }\n    }); //nếu thả nút thì =false\n\n    document.addEventListener('keyup', function (evt) {\n      if (evt.code === \"ShiftLeft\" || evt.code === \"ShiftRight\") {\n        shiftDown = false;\n      }\n\n      if (evt.code === \"ControlLeft\" || evt.code === \"ControlRight\") {\n        ctrlDown = false;\n      }\n    }); //kết hợp bấm ctrl để check các tổ hợp phím ctrl + C,V,Z,Y,A...\n\n    document.addEventListener('keydown', function (evt) {\n      var clipboard = new joint.ui.Clipboard();\n\n      if (evt.code === \"NumpadAdd\" && shiftDown === true) {\n        console.log(evt.code);\n        paperScroller.zoom(0.2, {\n          max: 4\n        });\n      }\n\n      if (evt.code === \"NumpadSubtract\" && shiftDown === true) {\n        paperScroller.zoom(-0.2, {\n          min: 0.2\n        });\n        console.log(evt.code);\n      } //check+ A\n\n\n      if (evt.code === \"KeyA\" && ctrlDown === true) {\n        selection.collection.reset(this.graph.getElements());\n        evt.preventDefault();\n      } //check ctrl + Z\n\n\n      if (evt.code === \"KeyZ\" && ctrlDown === true) {\n        commandManager.undo(); // unhighlightCell(selectionNode);\n        // graph.getLinks().forEach((link) => unhighlightCell(link));\n\n        console.log(selectionNode);\n        selectionNode = null;\n      } //check ctrl + Y\n\n\n      if (evt.code === \"KeyY\" && ctrlDown === true) {\n        commandManager.redo();\n        selectElement(null);\n      } //check ctrl + V ,ctrl + C, ctrl+X\n\n\n      if (evt.code === \"KeyX\" && ctrlDown === true) {\n        clipboard.cutElements(selection.collection, paper.model);\n      }\n\n      if (evt.code === \"KeyC\" && ctrlDown === true) {\n        clipboard.copyElements(selection.collection, this.graph);\n      }\n\n      if (evt.code === \"KeyV\" && ctrlDown === true) {\n        var pastedCells = clipboard.pasteCells(this.graph, {\n          translate: {\n            dx: 40,\n            dy: 40\n          },\n          useLocalStorage: true\n        });\n\n        var elements = _.filter(pastedCells, function (cell) {\n          return cell.isElement();\n        }); // Make sure pasted elements get selected immediately. This makes the UX better as\n        // the user can immediately manipulate the pasted elements.\n\n\n        selection.collection.reset(elements);\n      }\n    }); // nut zoomin zoom out can chuyen ve scroll\n\n    $('#btn-zoomin').on('click', function () {\n      paperScroller.zoom(0.2, {\n        max: 4\n      });\n    });\n    $('#btn-zoomout').on('click', function () {\n      paperScroller.zoom(-0.2, {\n        min: 0.2\n      });\n    });\n    $('#btn-center').on('click', _.bind(paperScroller.center, paperScroller));\n    $('#btn-center-content').on('click', _.bind(paperScroller.centerContent, paperScroller)); //render paper\n\n    document.getElementById('paper').appendChild(paperScroller.render().el); //render paperScroller\n\n    paperScroller.$el.css({\n      width: 900,\n      height: 600\n    }).appendTo('#paper');\n    paperScroller.center(); //render stencil ra màn hình\n\n    document.getElementById('stencil').appendChild(stencil.render().el);\n    stencil.load(stencilShapes);\n    selection.collection.reset(this.graph.getElements()); //  var linkView = paper.findViewByModel(link);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["require","mounted","highlighters","joint","mask","selectionNode","selectedElement","selectedLink","ctrlDown","shiftDown","color","customEl","dia","Element","define","z","size","width","height","removable","attrs","image","x","y","root","magnet","body","fill","stroke","strokeWidth","rx","ry","ports","items","id","group","groups","out","markup","tagName","selector","position","name","portBody","r","in","customElNoInPorts","theme","line","connection","strokeLinejoin","targetMarker","targetArrowheadTool","linkTools","TargetArrowhead","toolsView","ToolsView","tools","CustomLinkView","LinkView","extend","pointerdblclick","evt","addVertex","contextmenu","addLabel","options","util","defaults","doubleLinkTools","prototype","graph","Graph","commandManager","CommandManager","paper","Paper","model","async","sorting","APPROX","gridSize","drawGrid","restrictTranslate","stopDelegation","linkView","interactive","vertexAdd","snapLinks","radius","linkPinning","multiLinks","defaultRouter","args","padding","defaultConnector","validateConnection","cellViewS","magnetS","cellViewT","magnetT","end","getAttribute","get","linkMove","labelMove","arrowheadMove","vertexMove","vertexRemove","useLinkTools","defaultLink","shapes","standard","Link","wrapper","attributes","paperScroller","ui","PaperScroller","autoResizePaper","scrollWhileDragging","cursor","snaplines","Snaplines","startListening","stencil","Stencil","dropAnimation","duration","easing","selection","Selection","useModelGeometry","allowTranslate","jsUcfirst","string","charAt","toUpperCase","slice","stencilRenderHandler","positionX","positionY","arr","elNoInPorts","spaceBetweenElToX","spaceBetweenElToY","forEach","element","elementName","prop","stencilShapes","push","svg","prepend","V","createSVGStyle","getElementPredecessorLinks","el","getSubgraph","getPredecessors","filter","cell","isLink","highlightCell","addClass","add","findView","isElement","className","unhighlightCell","remove","selectElement","getLinks","link","on","cellView","halo","Halo","type","boxContent","removeHandle","render","$el","parentElement","appendChild","addTools","removeTools","ctrlKey","metaKey","console","log","collection","models","setCursor","startSelecting","reset","startPanning","document","addEventListener","code","preventDefault","removeCells","toArray","clipboard","Clipboard","zoom","max","min","getElements","undo","redo","cutElements","copyElements","pastedCells","pasteCells","translate","dx","dy","useLocalStorage","elements","_","$","bind","center","centerContent","getElementById","css","appendTo","load"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["\n<template>\n<h1>Home</h1>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  \n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\n\n// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\n\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js');\n\n\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n     var highlighters=joint.highlighters;\n    var mask = joint.highlighters.mask;\n    let selectionNode = null;\n    let selectedElement = null;\n    let selectedLink = null\n    \n    //check ctrl shift\n    var ctrlDown = false;\n    var shiftDown = false;\n    const color = \"rgb(255 136 0)\";\n    var customEl = joint.dia.Element.define('standard.Rectangle', {\n        z: 1,\n        size: {\n            width: 44,\n            height: 35\n        },\n        removable: false,\n        attrs: {\n            image: {\n                x: 5,\n                y: 5,\n                width: 'calc(w-10)',\n                height: 'calc(h-10 )'\n            },\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                width: 'calc(w)',\n                height: 'calc(h)',\n                strokeWidth: 2,\n                rx: 5,\n                ry: 5,\n\n            }\n        },\n        ports: {\n            items: [{\n                id: 'out-port',\n                group: 'out',\n\n            },\n            {\n                id: 'in-port',\n                group: 'in'\n            }\n            ],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n\n                        }\n                    }\n                },\n                in: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'left'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'passive',\n                            fill: '#FFFFFF',\n                            stroke: '#187BD3',\n\n                        }\n                    }\n                }\n            }\n        },\n        markup: [\n            {\n                tagName: 'rect',\n                selector: 'body',\n            },\n            {\n                tagName: 'image',\n                selector: 'image'\n            }, {\n                tagName: 'ports',\n                selector: 'ports'\n            }]\n    })\n    var customElNoInPorts = joint.dia.Element.define('standard.Rectangle', {\n        z: 1,\n        theme: 'material',\n        size: {\n            width: 44,\n            height: 35\n        },\n        removable: false,\n        attrs: {\n            image: {\n                x: 5,\n                y: 5,\n                width: 'calc(w-10)',\n                height: 'calc(h-10 )'\n            },\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                width: 'calc(w)',\n                height: 'calc(h)',\n                strokeWidth: 2,\n            },\n            line: {\n                connection: true,\n                stroke: '#333333',\n                strokeWidth: 2,\n                strokeLinejoin: 'round',\n                targetMarker: {\n                    'type': 'path',\n                    'd': 'M 10 -5 0 0 10 5 z'\n                }\n            },\n        },\n        ports: {\n            items: [\n                {\n                    id: 'out-port',\n                    group: 'out'\n                }\n            ],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n                        }\n                    }\n                },\n\n            }\n        },\n        markup: [\n            {\n                tagName: 'rect',\n                selector: 'body',\n            }, {\n                tagName: 'image',\n                selector: 'image'\n            }, {\n                tagName: 'ports',\n                selector: 'ports'\n            }]\n    })\n    //create link tool\n//     var verticesTool = new joint.linkTools.Vertices();\n// var segmentsTool = new joint.linkTools.Segments();\n// var sourceArrowheadTool = new joint.linkTools.SourceArrowhead();\nvar targetArrowheadTool = new joint.linkTools.TargetArrowhead();\n// var sourceAnchorTool = new joint.linkTools.SourceAnchor();\n// var targetAnchorTool = new joint.linkTools.TargetAnchor();\n// var boundaryTool = new joint.linkTools.Boundary();\n// var removeButton = new joint.linkTools.Remove();\n\nvar toolsView = new joint.dia.ToolsView({\n    tools: [\n        // verticesTool, segmentsTool,\n        // sourceArrowheadTool, \n        targetArrowheadTool,\n        // sourceAnchorTool, targetAnchorTool,\n        // boundaryTool, removeButton\n    ]\n});\n    // 2) creating a tools view\n    \n    // var linkView = link.findView(paper);\n    // linkView.addTools(toolsView);\n    //custom link \n    var CustomLinkView = joint.dia.LinkView.extend({\n        // custom interactions:\n        pointerdblclick: function(evt, x, y) {\n            this.addVertex(x, y);\n        },\n        contextmenu: function(evt, x, y) {\n            this.addLabel(x, y);\n        },\n    \n        // custom options:\n        options: joint.util.defaults({\n            doubleLinkTools: true,\n        }, joint.dia.LinkView.prototype.options)\n    });\n    // Paper & Graph\n    this.graph = new joint.dia.Graph;\n    //ctrl+z\n    var commandManager = new joint.dia.CommandManager({ graph: this.graph });\n    \n    //cấu hình paper\n    var paper = new joint.dia.Paper({  \n        width: 800,\n        height: 600,\n        model: this.graph,\n        async: true,\n        sorting: joint.dia.Paper.sorting.APPROX,\n        gridSize: 10,\n        drawGrid: true,\n        restrictTranslate: true,\n        stopDelegation: false,\n        linkView: CustomLinkView,\n        interactive: { vertexAdd: false } ,\n        // background: { color: '#F3F7F6' },\n        // defaultConnectionPoint: { name: 'boundary' },\n        // defaultConnector: {\n        //     name: \"rounded\"\n        //   },\n        //   defaultRouter: {\n        //     name: \"manhattan\",\n        //     args: {\n        //       step: 10,\n        //       endDirections: [\"bottom\"],\n        //       startDirections: [\"top\"],\n        //       padding: { bottom: 20 }\n        //     }\n        //   },\n        snapLinks: {\n            radius: 75\n        },\n        linkPinning: false,\n        multiLinks: false,\n        defaultRouter: { name: 'manhattan', args: { padding: 10 }},\n        defaultConnector: { name: 'rounded' },\n        validateConnection: function(cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n            // Prevent linking from input ports.\n            if (magnetS && magnetS.getAttribute('port-group') === 'in') return false;\n            // Prevent linking from output ports to input ports within one element.\n            if (cellViewS === cellViewT) return false;\n            // Prevent linking to input ports.\n            return (magnetT && magnetT.getAttribute('port-group') === 'in') || (cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer');\n        },\n        // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n        //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n        //     return view1 !== view2;\n        // },\n        interactive: {\n            linkMove: true,\n            labelMove: true,\n            arrowheadMove: true,\n            vertexMove: false,\n            vertexAdd: false,\n            vertexRemove: false,\n            useLinkTools: false,\n        },\n        defaultLink: function () {\n            return new joint.shapes.standard.Link({\n                attrs: {\n                    z:1,\n                    line: {\n                        connection: true,\n                        stroke: '#707070',\n                        strokeLinejoin: 'round',\n                    },\n                    wrapper: {\n                        connection: true,\n                        strokeWidth: 10,\n                        strokeLinejoin: 'round'\n                    },\n                    \n                },\n                \n                markup: [{\n                    tagName: 'path',\n                    selector: 'wrapper',\n                    attributes: {\n                        'fill': 'none',\n                        \n                        'stroke': 'transparent'\n                    }\n                }, {\n                    tagName: 'path',\n                    selector: 'line',\n                    attributes: {\n                        'fill': 'none',\n                        \n                    }\n                }]\n            });\n        }\n    });\n    //paperScroller\n    var paperScroller = new joint.ui.PaperScroller({\n        paper: paper,\n        autoResizePaper: true,\n        scrollWhileDragging: true,\n        cursor: 'grab'\n        \n    });\n    // cấu hình snaplines\n    var snaplines = new joint.ui.Snaplines({ paper: paper })\n    snaplines.startListening()\n    // cấu hình Stencil \n    var stencil = new joint.ui.Stencil({\n        paper: paperScroller,\n        width: 900,\n        height: 60,\n        dropAnimation: { duration: 200, easing: 'swing' },\n        \n    });\n    // cấu hình Selection\n    var selection = new joint.ui.Selection({\n        theme: 'material',\n        paper: paper,\n        useModelGeometry: true,\n        allowTranslate: true,\n    });\n    //hàm viết hoa chữ đầu\n    function jsUcfirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    //hàm render stencil\n    function stencilRenderHandler(positionX,positionY,arr,elNoInPorts =\"\",spaceBetweenElToX=0,spaceBetweenElToY=0){\n        arr.forEach(element => {\n            //chuyển thành hoa chữ đầu cho đúng định dạng file ảnh lưu\n            let elementName = jsUcfirst(element)\n            if (elementName === jsUcfirst(elNoInPorts)) {\n                element = new customElNoInPorts();\n            }\n            else {\n                element = new customEl();\n            }\n            element.prop('attrs/image/xlinkHref', `./assets/${elementName}.svg`)\n            stencilShapes.push(element.position(positionX, positionY))\n            if(spaceBetweenElToX>0){\n                positionX += element.attributes.size.width+spaceBetweenElToX;\n            }\n            if(spaceBetweenElToY>0){\n                positionY += element.attributes.size.height+spaceBetweenElToY;\n            }\n        });\n    }\n    \n    // const filter=new customEl();\n    // const formula =new customEl();\n    // const join =new customEl();\n    // const load =new customElNoInPorts();\n    // const pivot =new customEl();\n    // const sample =new customEl();\n    // const script =new customEl();\n    // const select =new customEl();\n    // const sort =new customEl();\n    // const summarize =new customEl();\n    // const transposeTable =new customEl();\n    // const union =new customEl();\n    // const weightAvg =new customEl();\n\n    // filter.prop('attrs/image/xlinkHref', './assets/Filter.svg');\n    // formula.prop('attrs/image/xlinkHref', './assets/Formula.svg');\n    // join.prop('attrs/image/xlinkHref', './assets/Join.svg');\n    // load.prop('attrs/image/xlinkHref', './assets/Load.svg');\n    // pivot.prop('attrs/image/xlinkHref', './assets/Pivot.svg');\n    // sample.prop('attrs/image/xlinkHref', './assets/Sample.svg');\n    // script.prop('attrs/image/xlinkHref', './assets/Script.svg');\n    // select.prop('attrs/image/xlinkHref', './assets/Select.svg');\n    // sort.prop('attrs/image/xlinkHref', './assets/Sort.svg');\n    // summarize.prop('attrs/image/xlinkHref', './assets/Summarize.svg');\n    // transposeTable.prop('attrs/image/xlinkHref', './assets/TransposeTable.svg');\n    // union.prop('attrs/image/xlinkHref', './assets/Union.svg');\n    // weightAvg.prop('attrs/image/xlinkHref', './assets/WeightAvg.svg');\n    //mảng tên của các stencil Shape\n    var arr = ['filter', 'formula', 'join', 'load', 'pivot', 'sample', 'script', 'select', 'sort', 'summarize', 'transposeTable', 'union', 'weightAvg'];\n    //mảng chứa các vị trí của stencil Shape để sau đó render\n    var stencilShapes = [\n        // filter.position(20, 20),\n        // formula.position(77, 20),\n        // join.position(132, 20),\n        // load.position(197, 20),\n        // pivot.position(252, 20),\n        // sample.position(307, 20),\n        // script.position(362, 20),\n        // select.position(417, 20),\n        // sort.position(472, 20),\n        // summarize.position(527, 20),\n        // transposeTable.position(582, 20),\n        // union.position(637, 20),\n        // weightAvg.position(692, 20),\n        // rectangle.position(812, 20)\n];\n    //gọi hàm render stencil \n    stencilRenderHandler(20,20,arr,\"load\",16)\n    //cấu hình các cell dc chọn\n    paper.svg.prepend(\n    V.createSVGStyle(`\n            .joint-element .selection {\n                stroke: ${color};\n            }\n            .joint-link .selection {\n                stroke: ${color}; \n                'fill': ${color},\n            }\n            \n        `)\n    );\n    \n    //lấy tất cả link ở trc node\n    function getElementPredecessorLinks(el) {\n        return this.graph\n          .getSubgraph([el, ...this.graph.getPredecessors(el)])\n          .filter((cell) => cell.isLink());\n      }\n      //đổi màu cell\n      function highlightCell(cell) {\n        if(cell){\n        highlighters.addClass.add(\n          cell.findView(paper),\n          cell.isElement() ? \"body\" : \"line\",\n          \"selection\",\n          { className: \"selection\" }\n        );\n        }else{return}\n      }\n      //chuyển màu cell lại như cũ\n      function unhighlightCell(cell) {\n        if(cell){\n        highlighters.addClass.remove(cell.findView(paper), \"selection\");\n        }\n        else{return}\n      }\n      //function xử lý hành dộng chọn el\n      function selectElement(el) {     \n        if (selectionNode === el) return;\n        if (selectionNode) {\n            \n          unhighlightCell(selectionNode);\n         this.graph.getLinks().forEach((link) => unhighlightCell(link));\n        }\n        if (el) {\n            \n          highlightCell(el);\n          getElementPredecessorLinks(el).forEach((link) => {\n              highlightCell(link)\n            //   link.toFront()\n              link.attributes.z+=1\n            \n              \n            });\n          selectionNode = el;\n        } else {\n            selectionNode = null;\n        }\n      }\n      //halo cấu hình\n       paper.on('cell:pointerup',function (cellView) {\n        var halo = new joint.ui.Halo({\n            cellView: cellView,\n            type: 'toolbar',\n            boxContent:false // bang phia duoi cell cho biet tọa độ height width và angle\n        });\n        halo.removeHandle('resize');\n        halo.removeHandle('rotate');\n        halo.removeHandle('direction');\n        halo.render();\n        //cho cell đang chọn lên trc và gán cho selectedEl để chạy những chức năng tiếp theo\n        // selectedElement = cellView.model;\n        // selectedElement.toFront()\n        cellView.$el[0].parentElement.appendChild(cellView.$el[0])\n        // console.log(graph.getLinks())\n    })\n   \n      //xử lý khi các sự kiện với paper\n      paper.on({\n          //xử lý khi các sự kiện \n        \"cell:mouseenter\":(cellView)=>{\n            \n            cellView.$el[0].parentElement.appendChild(cellView.$el[0])\n            // .parentElement.appendChild($0)\n                // cellView.model.toFront()\n        },\n        \"cell:mouseleave\":(cellView)=>{\n            // cellView.model.toBack()\n            if(selectionNode){\n                getElementPredecessorLinks(selectionNode).forEach((link) => {\n                   \n                    // link.toFront()\n                  });\n            }\n        },\n    \n        \"element:pointerclick\":(cellView) =>{\n            //chỉ đổi màu khi ko bấm ctrl\n            if(ctrlDown ===false )\n                { \n                    selectElement(cellView.model)\n                }\n            },\n            \"link:pointerclick\":(cellView) =>\n                {selectElement(cellView.model)\n                    //chon vao link thi mo cho phep doi node\n                    cellView.addTools(toolsView);\n                \n                },\n                \n                //chuyển lại màu cũ khi bấm ra ngoài\n            \"blank:pointerclick\":() => {selectElement(null)\n                paper.removeTools();\n                },\n            \n            'element:pointerup': function (cellView, evt) {\n                \n                if (evt.ctrlKey || evt.metaKey) {\n                    console.log(cellView)\n                    selection.collection.add(cellView.model);\n                    //loop to all the element in selection and set it to front\n                    selection.collection.models.forEach(element => {\n                        cellView.$el[0].parentElement.appendChild(cellView.$el[0])\n                    })               \n                }\n            },\n            //chuyển màu khi bấm vào link và cho nó lên trc\n            'link:pointerup': function (cellView) {\n                console.log(cellView)\n                selectedLink = cellView.model;\n                cellView.$el[0].parentElement.appendChild(cellView.$el[0])\n            },\n            \n            // lắng nghe sự kiện bấm ở ngoài khoange trống check shift để active select\n            'blank:pointerdown':function(evt, x, y) {\n                if (shiftDown===true) {\n                    selectElement(null)\n                    paperScroller.setCursor('crosshair')\n                    selection.startSelecting(evt);\n                    console.log(selection)\n                } else {\n                    selection.collection.reset([]);\n                    paperScroller.startPanning(evt, x, y);\n                    paper.removeTools();\n                    paperScroller.setCursor('grab');\n                }\n        \n            },\n      })\n      //xóa el nếu chọn lại lần 2 khi bấm ctrl\n      selection.on('selection-box:pointerdown', function (cellView, evt) {\n        if (evt.ctrlKey || evt.metaKey) {\n            selection.collection.remove(cellView.model);\n        }\n    });\n    //xóa bằng nút delete\n    document.addEventListener('keyup', function (evt) {\n        \n        if (!selectedElement && !selection) return;\n        if (evt.code === 'Backspace' || evt.code === 'Delete') {\n            //xóa 1 el\n            if (selectedElement) {\n                selectedElement.remove();\n                selectedElement = null;\n                selectionNode=null;\n            }\n            //xóa toàn bộ  el đã chọn\n            if (selection) {\n                // chuyeent selection.collection thành mảng hảm remove cell nhận vào 1 mảng và xóa khỏi graph\n                evt.preventDefault();\n                this.graph.removeCells(selection.collection.toArray())\n                selectionNode=null;\n            }\n        }\n    }\n    );\n    //nếu bấm thì =true\n    document.addEventListener('keydown', function (evt) {\n        if (evt.code === \"ControlLeft\" || evt.code === \"ControlRight\") {\n            ctrlDown = true;\n        }\n        if (evt.code === \"ShiftLeft\" || evt.code === \"ShiftRight\") {\n            shiftDown = true;\n        }\n    })\n    //nếu thả nút thì =false\n    document.addEventListener('keyup', function (evt) {\n        if (evt.code === \"ShiftLeft\" || evt.code === \"ShiftRight\") {\n            shiftDown = false;\n\n        }\n        if (evt.code === \"ControlLeft\" || evt.code === \"ControlRight\") {\n            ctrlDown = false;\n        }\n    })\n    //kết hợp bấm ctrl để check các tổ hợp phím ctrl + C,V,Z,Y,A...\n    document.addEventListener('keydown', function (evt) {\n        var clipboard = new joint.ui.Clipboard();\n        \n        \n        if (evt.code === \"NumpadAdd\" && shiftDown === true) {\n            console.log(evt.code)\n            paperScroller.zoom(0.2, { max: 4 });\n        }\n        if (evt.code === \"NumpadSubtract\" && shiftDown === true) {\n            paperScroller.zoom(-0.2, { min: 0.2 });\n            console.log(evt.code)\n        }\n        //check+ A\n        if (evt.code === \"KeyA\" && ctrlDown === true) {\n            selection.collection.reset(this.graph.getElements())\n            evt.preventDefault();\n        }//check ctrl + Z\n        if (evt.code === \"KeyZ\" && ctrlDown === true) {\n            commandManager.undo();\n            \n            // unhighlightCell(selectionNode);\n            // graph.getLinks().forEach((link) => unhighlightCell(link));\n            console.log(selectionNode)\n            selectionNode=null\n        }\n        //check ctrl + Y\n        if (evt.code === \"KeyY\" && ctrlDown === true) {\n            commandManager.redo();\n            selectElement(null)\n        }\n        //check ctrl + V ,ctrl + C, ctrl+X\n        if (evt.code === \"KeyX\" && ctrlDown === true) {\n\n            clipboard.cutElements(selection.collection, paper.model)\n        }\n        if (evt.code === \"KeyC\" && ctrlDown === true) {\n            clipboard.copyElements(selection.collection, this.graph);\n        }\n        if (evt.code === \"KeyV\" && ctrlDown === true) {\n            var pastedCells = clipboard.pasteCells(this.graph, {\n                translate: { dx: 40, dy: 40 },\n                useLocalStorage: true\n            });\n\n            var elements = _.filter(pastedCells, function (cell) {\n                return cell.isElement();\n            });\n            // Make sure pasted elements get selected immediately. This makes the UX better as\n            // the user can immediately manipulate the pasted elements.\n            selection.collection.reset(elements);\n\n        }\n    })\n   \n    // nut zoomin zoom out can chuyen ve scroll\n    $('#btn-zoomin').on('click', function() {\n        paperScroller.zoom(0.2, { max: 4 });\n    });\n    $('#btn-zoomout').on('click', function() {\n        paperScroller.zoom(-0.2, { min: 0.2 });\n    });\n    $('#btn-center').on('click', _.bind(paperScroller.center, paperScroller));\n    $('#btn-center-content').on('click', _.bind(paperScroller.centerContent, paperScroller));\n\n    //render paper\n    document.getElementById('paper').appendChild(paperScroller.render().el);\n    //render paperScroller\n    paperScroller.$el.css({ width: 900, height: 600 }).appendTo('#paper');\n    paperScroller.center();\n     //render stencil ra màn hình\n     document.getElementById('stencil').appendChild(stencil.render().el);\n     stencil.load(stencilShapes);\n     selection.collection.reset(this.graph.getElements());\n    //  var linkView = paper.findViewByModel(link);\n     \n    }\n  }\n\n  \n\n</script>\n\n<style >\n@import \"@/../public/vendor/jointJS/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}