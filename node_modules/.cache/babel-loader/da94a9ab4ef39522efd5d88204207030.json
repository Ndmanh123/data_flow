{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport V from '../V/index.mjs';\nimport { isNumber, assign, nextFrame, isObject, cancelFrame, defaults, defaultsDeep, addClassNamePrefix, normalizeSides, isFunction, isPlainObject, getByPath, sortElements, isString, guid, normalizeEvent, omit, result, merge, camelCase, cloneDeep, invoke, hashCode, filter as _filter, parseDOMJSON, toArray, has } from '../util/index.mjs';\nimport { Rect, Point, toRad } from '../g/index.mjs';\nimport { View, views } from '../mvc/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { ElementView } from './ElementView.mjs';\nimport { LinkView } from './LinkView.mjs';\nimport { Link } from './Link.mjs';\nimport { Cell } from './Cell.mjs';\nimport { Graph } from './Graph.mjs';\nimport { LayersNames, PaperLayer } from './PaperLayer.mjs';\nimport * as highlighters from '../highlighters/index.mjs';\nimport * as linkAnchors from '../linkAnchors/index.mjs';\nimport * as connectionPoints from '../connectionPoints/index.mjs';\nimport * as anchors from '../anchors/index.mjs';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nconst sortingTypes = {\n  NONE: 'sorting-none',\n  APPROX: 'sorting-approximate',\n  EXACT: 'sorting-exact'\n};\nconst MOUNT_BATCH_SIZE = 1000;\nconst UPDATE_BATCH_SIZE = Infinity;\nconst MIN_PRIORITY = 9007199254740991; // Number.MAX_SAFE_INTEGER\n\nconst HighlightingTypes = CellView.Highlighting;\nconst defaultHighlighting = {\n  [HighlightingTypes.DEFAULT]: {\n    name: 'stroke',\n    options: {\n      padding: 3\n    }\n  },\n  [HighlightingTypes.MAGNET_AVAILABILITY]: {\n    name: 'addClass',\n    options: {\n      className: 'available-magnet'\n    }\n  },\n  [HighlightingTypes.ELEMENT_AVAILABILITY]: {\n    name: 'addClass',\n    options: {\n      className: 'available-cell'\n    }\n  }\n};\nconst defaultLayers = [{\n  name: LayersNames.BACK\n}, {\n  name: LayersNames.CELLS\n}, {\n  name: LayersNames.LABELS\n}, {\n  name: LayersNames.FRONT\n}, {\n  name: LayersNames.TOOLS\n}];\nexport const Paper = View.extend({\n  className: 'paper',\n  options: {\n    width: 800,\n    height: 600,\n    origin: {\n      x: 0,\n      y: 0\n    },\n    // x,y coordinates in top-left corner\n    gridSize: 1,\n    // Whether or not to draw the grid lines on the paper's DOM element.\n    // e.g drawGrid: true, drawGrid: { color: 'red', thickness: 2 }\n    drawGrid: false,\n    // Whether or not to draw the background on the paper's DOM element.\n    // e.g. background: { color: 'lightblue', image: '/paper-background.png', repeat: 'flip-xy' }\n    background: false,\n    perpendicularLinks: false,\n    elementView: ElementView,\n    linkView: LinkView,\n    snapLabels: false,\n    // false, true\n    snapLinks: false,\n    // false, true, { radius: value }\n    // Should the link labels be rendered into its own layer?\n    // `false` - the labels are part of the links\n    // `true` - the labels are appended to LayersName.LABELS\n    // [LayersName] - the labels are appended to the layer specified\n    labelsLayer: false,\n    // When set to FALSE, an element may not have more than 1 link with the same source and target element.\n    multiLinks: true,\n    // For adding custom guard logic.\n    guard: function (evt, view) {\n      // FALSE means the event isn't guarded.\n      return false;\n    },\n    highlighting: defaultHighlighting,\n    // Prevent the default context menu from being displayed.\n    preventContextMenu: true,\n    // Prevent the default action for blank:pointer<action>.\n    preventDefaultBlankAction: true,\n    // Restrict the translation of elements by given bounding box.\n    // Option accepts a boolean:\n    //  true - the translation is restricted to the paper area\n    //  false - no restrictions\n    // A method:\n    // restrictTranslate: function(elementView) {\n    //     var parentId = elementView.model.get('parent');\n    //     return parentId && this.model.getCell(parentId).getBBox();\n    // },\n    // Or a bounding box:\n    // restrictTranslate: { x: 10, y: 10, width: 790, height: 590 }\n    restrictTranslate: false,\n    // Marks all available magnets with 'available-magnet' class name and all available cells with\n    // 'available-cell' class name. Marks them when dragging a link is started and unmark\n    // when the dragging is stopped.\n    markAvailable: false,\n    // Defines what link model is added to the graph after an user clicks on an active magnet.\n    // Value could be the Backbone.model or a function returning the Backbone.model\n    // defaultLink: function(elementView, magnet) { return condition ? new customLink1() : new customLink2() }\n    defaultLink: new Link(),\n    // A connector that is used by links with no connector defined on the model.\n    // e.g. { name: 'rounded', args: { radius: 5 }} or a function\n    defaultConnector: {\n      name: 'normal'\n    },\n    // A router that is used by links with no router defined on the model.\n    // e.g. { name: 'oneSide', args: { padding: 10 }} or a function\n    defaultRouter: {\n      name: 'normal'\n    },\n    defaultAnchor: {\n      name: 'center'\n    },\n    defaultLinkAnchor: {\n      name: 'connectionRatio'\n    },\n    defaultConnectionPoint: {\n      name: 'bbox'\n    },\n\n    /* CONNECTING */\n    connectionStrategy: null,\n    // Check whether to add a new link to the graph when user clicks on an a magnet.\n    validateMagnet: function (_cellView, magnet, _evt) {\n      return magnet.getAttribute('magnet') !== 'passive';\n    },\n    // Check whether to allow or disallow the link connection while an arrowhead end (source/target)\n    // being changed.\n    validateConnection: function (cellViewS, _magnetS, cellViewT, _magnetT, end, _linkView) {\n      return (end === 'target' ? cellViewT : cellViewS) instanceof ElementView;\n    },\n\n    /* EMBEDDING */\n    // Enables embedding. Re-parent the dragged element with elements under it and makes sure that\n    // all links and elements are visible taken the level of embedding into account.\n    embeddingMode: false,\n    // Check whether to allow or disallow the element embedding while an element being translated.\n    validateEmbedding: function (childView, parentView) {\n      // by default all elements can be in relation child-parent\n      return true;\n    },\n    // Check whether to allow or disallow an embedded element to be unembedded / to become a root.\n    validateUnembedding: function (childView) {\n      // by default all elements can become roots\n      return true;\n    },\n    // Determines the way how a cell finds a suitable parent when it's dragged over the paper.\n    // The cell with the highest z-index (visually on the top) will be chosen.\n    findParentBy: 'bbox',\n    // 'bbox'|'center'|'origin'|'corner'|'topRight'|'bottomLeft'\n    // If enabled only the element on the very front is taken into account for the embedding.\n    // If disabled the elements under the dragged view are tested one by one\n    // (from front to back) until a valid parent found.\n    frontParentOnly: true,\n    // Interactive flags. See online docs for the complete list of interactive flags.\n    interactive: {\n      labelMove: false\n    },\n    // When set to true the links can be pinned to the paper.\n    // i.e. link source/target can be a point e.g. link.get('source') ==> { x: 100, y: 100 };\n    linkPinning: true,\n    // Custom validation after an interaction with a link ends.\n    // Recognizes a function. If `false` is returned, the link is disallowed (removed or reverted)\n    // (linkView, paper) => boolean\n    allowLink: null,\n    // Allowed number of mousemove events after which the pointerclick event will be still triggered.\n    clickThreshold: 0,\n    // Number of required mousemove events before the first pointermove event will be triggered.\n    moveThreshold: 0,\n    // Number of required mousemove events before the a link is created out of the magnet.\n    // Or string `onleave` so the link is created when the pointer leaves the magnet\n    magnetThreshold: 0,\n    // Rendering Options\n    sorting: sortingTypes.EXACT,\n    frozen: false,\n    // no docs yet\n    onViewUpdate: function (view, flag, priority, opt, paper) {\n      // Do not update connected links when:\n      // 1. the view was just inserted (added to the graph and rendered)\n      // 2. the view was just mounted (added back to the paper by viewport function)\n      // 3. the change was marked as `isolate`.\n      // 4. the view model was just removed from the graph\n      if (flag & (view.FLAG_INSERT | view.FLAG_REMOVE) || opt.mounting || opt.isolate) return;\n      paper.requestConnectedLinksUpdate(view, priority, opt);\n    },\n    // no docs yet\n    onViewPostponed: function (view, flag, paper) {\n      return paper.forcePostponedViewUpdate(view, flag);\n    },\n    beforeRender: null,\n    // function(opt, paper) { },\n    afterRender: null,\n    // function(stats, opt, paper) {\n    viewport: null,\n    // Default namespaces\n    cellViewNamespace: null,\n    routerNamespace: null,\n    connectorNamespace: null,\n    highlighterNamespace: highlighters,\n    anchorNamespace: anchors,\n    linkAnchorNamespace: linkAnchors,\n    connectionPointNamespace: connectionPoints\n  },\n  events: {\n    'dblclick': 'pointerdblclick',\n    'contextmenu': 'contextmenu',\n    'mousedown': 'pointerdown',\n    'touchstart': 'pointerdown',\n    'mouseover': 'mouseover',\n    'mouseout': 'mouseout',\n    'mouseenter': 'mouseenter',\n    'mouseleave': 'mouseleave',\n    'wheel': 'mousewheel',\n    'mouseenter .joint-cell': 'mouseenter',\n    'mouseleave .joint-cell': 'mouseleave',\n    'mouseenter .joint-tools': 'mouseenter',\n    'mouseleave .joint-tools': 'mouseleave',\n    'mousedown .joint-cell [event]': 'onevent',\n    // interaction with cell with `event` attribute set\n    'touchstart .joint-cell [event]': 'onevent',\n    'mousedown .joint-cell [magnet]': 'onmagnet',\n    // interaction with cell with `magnet` attribute set\n    'touchstart .joint-cell [magnet]': 'onmagnet',\n    'dblclick .joint-cell [magnet]': 'magnetpointerdblclick',\n    'contextmenu .joint-cell [magnet]': 'magnetcontextmenu',\n    'mousedown .joint-link .label': 'onlabel',\n    // interaction with link label\n    'touchstart .joint-link .label': 'onlabel',\n    'dragstart .joint-cell image': 'onImageDragStart' // firefox fix\n\n  },\n  documentEvents: {\n    'mousemove': 'pointermove',\n    'touchmove': 'pointermove',\n    'mouseup': 'pointerup',\n    'touchend': 'pointerup',\n    'touchcancel': 'pointerup'\n  },\n  svg: null,\n  viewport: null,\n  defs: null,\n  tools: null,\n  $background: null,\n  layers: null,\n  $grid: null,\n  $document: null,\n  // For storing the current transformation matrix (CTM) of the paper's viewport.\n  _viewportMatrix: null,\n  // For verifying whether the CTM is up-to-date. The viewport transform attribute\n  // could have been manipulated directly.\n  _viewportTransformString: null,\n  // Updates data (priorities, unmounted views etc.)\n  _updates: null,\n  // Paper Layers\n  _layers: null,\n  SORT_DELAYING_BATCHES: ['add', 'to-front', 'to-back'],\n  UPDATE_DELAYING_BATCHES: ['translate'],\n  MIN_SCALE: 1e-6,\n  init: function () {\n    const {\n      options,\n      el\n    } = this;\n\n    if (!options.cellViewNamespace) {\n      /* eslint-disable no-undef */\n      options.cellViewNamespace = typeof joint !== 'undefined' && has(joint, 'shapes') ? joint.shapes : null;\n      /* eslint-enable no-undef */\n    }\n\n    const model = this.model = options.model || new Graph(); // Layers (SVGGroups)\n\n    this._layers = {};\n    this.setGrid(options.drawGrid);\n    this.cloneOptions();\n    this.render();\n\n    this._setDimensions();\n\n    this.startListening(); // Hash of all cell views.\n\n    this._views = {}; // Reference to the paper owner document\n\n    this.$document = $(el.ownerDocument); // Render existing cells in the graph\n\n    this.resetViews(model.attributes.cells.models); // Start the Rendering Loop\n\n    if (!this.isFrozen() && this.isAsync()) this.updateViewsAsync();\n  },\n  _resetUpdates: function () {\n    return this._updates = {\n      id: null,\n      priorities: [{}, {}, {}],\n      unmountedCids: [],\n      mountedCids: [],\n      unmounted: {},\n      mounted: {},\n      count: 0,\n      keyFrozen: false,\n      freezeKey: null,\n      sort: false\n    };\n  },\n  startListening: function () {\n    var model = this.model;\n    this.listenTo(model, 'add', this.onCellAdded).listenTo(model, 'remove', this.onCellRemoved).listenTo(model, 'change', this.onCellChange).listenTo(model, 'reset', this.onGraphReset).listenTo(model, 'sort', this.onGraphSort).listenTo(model, 'batch:stop', this.onGraphBatchStop);\n    this.on('cell:highlight', this.onCellHighlight).on('cell:unhighlight', this.onCellUnhighlight).on('scale translate', this.update);\n  },\n  onCellAdded: function (cell, _, opt) {\n    var position = opt.position;\n\n    if (this.isAsync() || !isNumber(position)) {\n      this.renderView(cell, opt);\n    } else {\n      if (opt.maxPosition === position) this.freeze({\n        key: 'addCells'\n      });\n      this.renderView(cell, opt);\n      if (position === 0) this.unfreeze({\n        key: 'addCells'\n      });\n    }\n  },\n  onCellRemoved: function (cell, _, opt) {\n    const view = this.findViewByModel(cell);\n    if (view) this.requestViewUpdate(view, view.FLAG_REMOVE, view.UPDATE_PRIORITY, opt);\n  },\n  onCellChange: function (cell, opt) {\n    if (cell === this.model.attributes.cells) return;\n\n    if (cell.hasChanged('z') && this.options.sorting === sortingTypes.APPROX) {\n      const view = this.findViewByModel(cell);\n      if (view) this.requestViewUpdate(view, view.FLAG_INSERT, view.UPDATE_PRIORITY, opt);\n    }\n  },\n  onGraphReset: function (collection, opt) {\n    this.resetLayers();\n    this.resetViews(collection.models, opt);\n  },\n  onGraphSort: function () {\n    if (this.model.hasActiveBatch(this.SORT_DELAYING_BATCHES)) return;\n    this.sortViews();\n  },\n  onGraphBatchStop: function (data) {\n    if (this.isFrozen()) return;\n    var name = data && data.batchName;\n    var graph = this.model;\n\n    if (!this.isAsync()) {\n      var updateDelayingBatches = this.UPDATE_DELAYING_BATCHES;\n\n      if (updateDelayingBatches.includes(name) && !graph.hasActiveBatch(updateDelayingBatches)) {\n        this.updateViews(data);\n      }\n    }\n\n    var sortDelayingBatches = this.SORT_DELAYING_BATCHES;\n\n    if (sortDelayingBatches.includes(name) && !graph.hasActiveBatch(sortDelayingBatches)) {\n      this.sortViews();\n    }\n  },\n  cloneOptions: function () {\n    const {\n      options\n    } = this;\n    const {\n      defaultConnector,\n      defaultRouter,\n      defaultConnectionPoint,\n      defaultAnchor,\n      defaultLinkAnchor,\n      origin,\n      highlighting,\n      cellViewNamespace,\n      interactive\n    } = options; // Default cellView namespace for ES5\n\n    /* eslint-disable no-undef */\n\n    if (!cellViewNamespace && typeof joint !== 'undefined' && has(joint, 'shapes')) {\n      options.cellViewNamespace = joint.shapes;\n    }\n    /* eslint-enable no-undef */\n    // Here if a function was provided, we can not clone it, as this would result in loosing the function.\n    // If the default is used, the cloning is necessary in order to prevent modifying the options on prototype.\n\n\n    if (!isFunction(defaultConnector)) {\n      options.defaultConnector = cloneDeep(defaultConnector);\n    }\n\n    if (!isFunction(defaultRouter)) {\n      options.defaultRouter = cloneDeep(defaultRouter);\n    }\n\n    if (!isFunction(defaultConnectionPoint)) {\n      options.defaultConnectionPoint = cloneDeep(defaultConnectionPoint);\n    }\n\n    if (!isFunction(defaultAnchor)) {\n      options.defaultAnchor = cloneDeep(defaultAnchor);\n    }\n\n    if (!isFunction(defaultLinkAnchor)) {\n      options.defaultLinkAnchor = cloneDeep(defaultLinkAnchor);\n    }\n\n    if (isPlainObject(interactive)) {\n      options.interactive = assign({}, interactive);\n    }\n\n    if (isPlainObject(highlighting)) {\n      // Return the default highlighting options into the user specified options.\n      options.highlighting = defaultsDeep({}, highlighting, defaultHighlighting);\n    }\n\n    options.origin = assign({}, origin);\n  },\n  children: function () {\n    var ns = V.namespace;\n    return [{\n      namespaceURI: ns.xhtml,\n      tagName: 'div',\n      className: addClassNamePrefix('paper-background'),\n      selector: 'background'\n    }, {\n      namespaceURI: ns.xhtml,\n      tagName: 'div',\n      className: addClassNamePrefix('paper-grid'),\n      selector: 'grid'\n    }, {\n      namespaceURI: ns.svg,\n      tagName: 'svg',\n      attributes: {\n        'width': '100%',\n        'height': '100%',\n        'xmlns:xlink': ns.xlink\n      },\n      selector: 'svg',\n      children: [{\n        // Append `<defs>` element to the SVG document. This is useful for filters and gradients.\n        // It's desired to have the defs defined before the viewport (e.g. to make a PDF document pick up defs properly).\n        tagName: 'defs',\n        selector: 'defs'\n      }, {\n        tagName: 'g',\n        className: addClassNamePrefix('layers'),\n        selector: 'layers'\n      }]\n    }];\n  },\n\n  hasLayerView(layerName) {\n    return layerName in this._layers;\n  },\n\n  getLayerView(layerName) {\n    const {\n      _layers\n    } = this;\n    if (layerName in _layers) return _layers[layerName];\n    throw new Error(`dia.Paper: Unknown layer \"${layerName}\"`);\n  },\n\n  getLayerNode(layerName) {\n    return this.getLayerView(layerName).el;\n  },\n\n  render: function () {\n    this.renderChildren();\n    const {\n      childNodes,\n      options\n    } = this;\n    const {\n      svg,\n      defs,\n      layers,\n      background,\n      grid\n    } = childNodes;\n    this.svg = svg;\n    this.defs = defs;\n    this.layers = layers;\n    this.$background = $(background);\n    this.$grid = $(grid);\n    this.renderLayers();\n    V.ensureId(svg);\n\n    if (options.background) {\n      this.drawBackground(options.background);\n    }\n\n    if (options.drawGrid) {\n      this.drawGrid();\n    }\n\n    return this;\n  },\n  renderLayers: function (layers = defaultLayers) {\n    this.removeLayers(); // TODO: Layers to be read from the graph `layers` attribute\n\n    layers.forEach(({\n      name,\n      sorted\n    }) => {\n      const layerView = new PaperLayer({\n        name\n      });\n      this.layers.appendChild(layerView.el);\n      this._layers[name] = layerView;\n    }); // Throws an exception if doesn't exist\n\n    const cellsLayerView = this.getLayerView(LayersNames.CELLS);\n    const toolsLayerView = this.getLayerView(LayersNames.TOOLS);\n    const labelsLayerView = this.getLayerView(LayersNames.LABELS); // backwards compatibility\n\n    this.tools = toolsLayerView.el;\n    this.cells = this.viewport = cellsLayerView.el; // user-select: none;\n\n    cellsLayerView.vel.addClass(addClassNamePrefix('viewport'));\n    labelsLayerView.vel.addClass(addClassNamePrefix('viewport'));\n  },\n  removeLayers: function () {\n    const {\n      _layers\n    } = this;\n    Object.keys(_layers, name => {\n      _layers[name].remove();\n\n      delete _layers[name];\n    });\n  },\n  resetLayers: function () {\n    const {\n      _layers\n    } = this;\n    Object.keys(_layers, name => {\n      _layers[name].removePivots();\n    });\n  },\n  update: function () {\n    if (this.options.drawGrid) {\n      this.drawGrid();\n    }\n\n    if (this._background) {\n      this.updateBackgroundImage(this._background);\n    }\n\n    return this;\n  },\n  matrix: function (ctm) {\n    var viewport = this.layers; // Getter:\n\n    if (ctm === undefined) {\n      var transformString = viewport.getAttribute('transform');\n\n      if ((this._viewportTransformString || null) === transformString) {\n        // It's ok to return the cached matrix. The transform attribute has not changed since\n        // the matrix was stored.\n        ctm = this._viewportMatrix;\n      } else {\n        // The viewport transform attribute has changed. Measure the matrix and cache again.\n        ctm = viewport.getCTM();\n        this._viewportMatrix = ctm;\n        this._viewportTransformString = transformString;\n      } // Clone the cached current transformation matrix.\n      // If no matrix previously stored the identity matrix is returned.\n\n\n      return V.createSVGMatrix(ctm);\n    } // Setter:\n\n\n    ctm = V.createSVGMatrix(ctm);\n    var ctmString = V.matrixToTransformString(ctm);\n    viewport.setAttribute('transform', ctmString);\n    this._viewportMatrix = ctm;\n    this._viewportTransformString = viewport.getAttribute('transform');\n    return this;\n  },\n  clientMatrix: function () {\n    return V.createSVGMatrix(this.cells.getScreenCTM());\n  },\n  requestConnectedLinksUpdate: function (view, priority, opt) {\n    if (view instanceof CellView) {\n      var model = view.model;\n      var links = this.model.getConnectedLinks(model);\n\n      for (var j = 0, n = links.length; j < n; j++) {\n        var link = links[j];\n        var linkView = this.findViewByModel(link);\n        if (!linkView) continue;\n        var flagLabels = ['UPDATE'];\n        if (link.getTargetCell() === model) flagLabels.push('TARGET');\n        if (link.getSourceCell() === model) flagLabels.push('SOURCE');\n        var nextPriority = Math.max(priority + 1, linkView.UPDATE_PRIORITY);\n        this.scheduleViewUpdate(linkView, linkView.getFlag(flagLabels), nextPriority, opt);\n      }\n    }\n  },\n  forcePostponedViewUpdate: function (view, flag) {\n    if (!view || !(view instanceof CellView)) return false;\n    var model = view.model;\n    if (model.isElement()) return false;\n\n    if ((flag & view.getFlag(['SOURCE', 'TARGET'])) === 0) {\n      // LinkView is waiting for the target or the source cellView to be rendered\n      // This can happen when the cells are not in the viewport.\n      var sourceFlag = 0;\n      var sourceView = this.findViewByModel(model.getSourceCell());\n\n      if (sourceView && !this.isViewMounted(sourceView)) {\n        sourceFlag = this.dumpView(sourceView);\n        view.updateEndMagnet('source');\n      }\n\n      var targetFlag = 0;\n      var targetView = this.findViewByModel(model.getTargetCell());\n\n      if (targetView && !this.isViewMounted(targetView)) {\n        targetFlag = this.dumpView(targetView);\n        view.updateEndMagnet('target');\n      }\n\n      if (sourceFlag === 0 && targetFlag === 0) {\n        // If leftover flag is 0, all view updates were done.\n        return !this.dumpView(view);\n      }\n    }\n\n    return false;\n  },\n  requestViewUpdate: function (view, flag, priority, opt) {\n    opt || (opt = {});\n    this.scheduleViewUpdate(view, flag, priority, opt);\n    var isAsync = this.isAsync();\n    if (this.isFrozen() || isAsync && opt.async !== false) return;\n    if (this.model.hasActiveBatch(this.UPDATE_DELAYING_BATCHES)) return;\n    var stats = this.updateViews(opt);\n    if (isAsync) this.notifyAfterRender(stats, opt);\n  },\n  scheduleViewUpdate: function (view, type, priority, opt) {\n    const {\n      _updates: updates,\n      options\n    } = this;\n    const {\n      FLAG_REMOVE,\n      FLAG_INSERT,\n      UPDATE_PRIORITY,\n      cid\n    } = view;\n    let priorityUpdates = updates.priorities[priority];\n    if (!priorityUpdates) priorityUpdates = updates.priorities[priority] = {}; // Move higher priority updates to this priority\n\n    if (priority > UPDATE_PRIORITY) {\n      // Not the default priority for this view. It's most likely a link view\n      // connected to another link view, which triggered the update.\n      // TODO: If there is an update scheduled with a lower priority already, we should\n      // change the requested priority to the lowest one. Does not seem to be critical\n      // right now, as it \"only\" results in multiple updates on the same view.\n      for (let i = priority - 1; i >= UPDATE_PRIORITY; i--) {\n        const prevPriorityUpdates = updates.priorities[i];\n        if (!prevPriorityUpdates || !(cid in prevPriorityUpdates)) continue;\n        priorityUpdates[cid] |= prevPriorityUpdates[cid];\n        delete prevPriorityUpdates[cid];\n      }\n    }\n\n    let currentType = priorityUpdates[cid] || 0; // Prevent cycling\n\n    if ((currentType & type) === type) return;\n    if (!currentType) updates.count++;\n\n    if (type & FLAG_REMOVE && currentType & FLAG_INSERT) {\n      // When a view is removed we need to remove the insert flag as this is a reinsert\n      priorityUpdates[cid] ^= FLAG_INSERT;\n    } else if (type & FLAG_INSERT && currentType & FLAG_REMOVE) {\n      // When a view is added we need to remove the remove flag as this is view was previously removed\n      priorityUpdates[cid] ^= FLAG_REMOVE;\n    }\n\n    priorityUpdates[cid] |= type;\n    const viewUpdateFn = options.onViewUpdate;\n    if (typeof viewUpdateFn === 'function') viewUpdateFn.call(this, view, type, priority, opt || {}, this);\n  },\n  dumpViewUpdate: function (view) {\n    if (!view) return 0;\n    var updates = this._updates;\n    var cid = view.cid;\n    var priorityUpdates = updates.priorities[view.UPDATE_PRIORITY];\n    var flag = this.registerMountedView(view) | priorityUpdates[cid];\n    delete priorityUpdates[cid];\n    return flag;\n  },\n  dumpView: function (view, opt) {\n    var flag = this.dumpViewUpdate(view);\n    if (!flag) return 0;\n    return this.updateView(view, flag, opt);\n  },\n  updateView: function (view, flag, opt) {\n    if (!view) return 0;\n    const {\n      FLAG_REMOVE,\n      FLAG_INSERT,\n      model\n    } = view;\n\n    if (view instanceof CellView) {\n      if (flag & FLAG_REMOVE) {\n        this.removeView(model);\n        return 0;\n      }\n\n      if (flag & FLAG_INSERT) {\n        this.insertView(view);\n        flag ^= FLAG_INSERT;\n      }\n    }\n\n    if (!flag) return 0;\n    return view.confirmUpdate(flag, opt || {});\n  },\n  requireView: function (model, opt) {\n    var view = this.findViewByModel(model);\n    if (!view) return null;\n    this.dumpView(view, opt);\n    return view;\n  },\n  registerUnmountedView: function (view) {\n    var cid = view.cid;\n    var updates = this._updates;\n    if (cid in updates.unmounted) return 0;\n    var flag = updates.unmounted[cid] |= view.FLAG_INSERT;\n    updates.unmountedCids.push(cid);\n    delete updates.mounted[cid];\n    return flag;\n  },\n  registerMountedView: function (view) {\n    var cid = view.cid;\n    var updates = this._updates;\n    if (cid in updates.mounted) return 0;\n    updates.mounted[cid] = true;\n    updates.mountedCids.push(cid);\n    var flag = updates.unmounted[cid] || 0;\n    delete updates.unmounted[cid];\n    return flag;\n  },\n  isViewMounted: function (view) {\n    if (!view) return false;\n    var cid = view.cid;\n    var updates = this._updates;\n    return cid in updates.mounted;\n  },\n  dumpViews: function (opt) {\n    var passingOpt = defaults({}, opt, {\n      viewport: null\n    });\n    this.checkViewport(passingOpt);\n    this.updateViews(passingOpt);\n  },\n  // Synchronous views update\n  updateViews: function (opt) {\n    this.notifyBeforeRender(opt);\n    let batchStats;\n    let updateCount = 0;\n    let batchCount = 0;\n    let priority = MIN_PRIORITY;\n\n    do {\n      batchCount++;\n      batchStats = this.updateViewsBatch(opt);\n      updateCount += batchStats.updated;\n      priority = Math.min(batchStats.priority, priority);\n    } while (!batchStats.empty);\n\n    const stats = {\n      updated: updateCount,\n      batches: batchCount,\n      priority\n    };\n    this.notifyAfterRender(stats, opt);\n    return stats;\n  },\n  hasScheduledUpdates: function () {\n    const priorities = this._updates.priorities;\n    const priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n\n    let i = priorityIndexes.length;\n\n    while (i > 0 && i--) {\n      // a faster way how to check if an object is empty\n      for (let _key in priorities[priorityIndexes[i]]) return true;\n    }\n\n    return false;\n  },\n  updateViewsAsync: function (opt, data) {\n    opt || (opt = {});\n    data || (data = {\n      processed: 0,\n      priority: MIN_PRIORITY\n    });\n    var updates = this._updates;\n    var id = updates.id;\n\n    if (id) {\n      cancelFrame(id);\n\n      if (data.processed === 0 && this.hasScheduledUpdates()) {\n        this.notifyBeforeRender(opt);\n      }\n\n      var stats = this.updateViewsBatch(opt);\n      var passingOpt = defaults({}, opt, {\n        mountBatchSize: MOUNT_BATCH_SIZE - stats.mounted,\n        unmountBatchSize: MOUNT_BATCH_SIZE - stats.unmounted\n      });\n      var checkStats = this.checkViewport(passingOpt);\n      var unmountCount = checkStats.unmounted;\n      var mountCount = checkStats.mounted;\n      var processed = data.processed;\n      var total = updates.count;\n\n      if (stats.updated > 0) {\n        // Some updates have been just processed\n        processed += stats.updated + stats.unmounted;\n        stats.processed = processed;\n        data.priority = Math.min(stats.priority, data.priority);\n\n        if (stats.empty && mountCount === 0) {\n          stats.unmounted += unmountCount;\n          stats.mounted += mountCount;\n          stats.priority = data.priority;\n          this.notifyAfterRender(stats, opt);\n          data.processed = 0;\n          data.priority = MIN_PRIORITY;\n          updates.count = 0;\n        } else {\n          data.processed = processed;\n        }\n      } // Progress callback\n\n\n      var progressFn = opt.progress;\n\n      if (total && typeof progressFn === 'function') {\n        progressFn.call(this, stats.empty, processed, total, stats, this);\n      } // The current frame could have been canceled in a callback\n\n\n      if (updates.id !== id) return;\n    }\n\n    updates.id = nextFrame(this.updateViewsAsync, this, opt, data);\n  },\n  notifyBeforeRender: function (opt = {}) {\n    let beforeFn = opt.beforeRender;\n\n    if (typeof beforeFn !== 'function') {\n      beforeFn = this.options.beforeRender;\n      if (typeof beforeFn !== 'function') return;\n    }\n\n    beforeFn.call(this, opt, this);\n  },\n  notifyAfterRender: function (stats, opt = {}) {\n    let afterFn = opt.afterRender;\n\n    if (typeof afterFn !== 'function') {\n      afterFn = this.options.afterRender;\n    }\n\n    if (typeof afterFn === 'function') {\n      afterFn.call(this, stats, opt, this);\n    }\n\n    this.trigger('render:done', stats, opt);\n  },\n  updateViewsBatch: function (opt) {\n    opt || (opt = {});\n    var batchSize = opt.batchSize || UPDATE_BATCH_SIZE;\n    var updates = this._updates;\n    var updateCount = 0;\n    var postponeCount = 0;\n    var unmountCount = 0;\n    var mountCount = 0;\n    var maxPriority = MIN_PRIORITY;\n    var empty = true;\n    var options = this.options;\n    var priorities = updates.priorities;\n    var viewportFn = 'viewport' in opt ? opt.viewport : options.viewport;\n    if (typeof viewportFn !== 'function') viewportFn = null;\n    var postponeViewFn = options.onViewPostponed;\n    if (typeof postponeViewFn !== 'function') postponeViewFn = null;\n    var priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n\n    main: for (var i = 0, n = priorityIndexes.length; i < n; i++) {\n      var priority = +priorityIndexes[i];\n      var priorityUpdates = priorities[priority];\n\n      for (var cid in priorityUpdates) {\n        if (updateCount >= batchSize) {\n          empty = false;\n          break main;\n        }\n\n        var view = views[cid];\n\n        if (!view) {\n          // This should not occur\n          delete priorityUpdates[cid];\n          continue;\n        }\n\n        var currentFlag = priorityUpdates[cid];\n\n        if ((currentFlag & view.FLAG_REMOVE) === 0) {\n          // We should never check a view for viewport if we are about to remove the view\n          var isDetached = (cid in updates.unmounted);\n\n          if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, !isDetached, this)) {\n            // Unmount View\n            if (!isDetached) {\n              this.registerUnmountedView(view);\n              view.unmount();\n            }\n\n            updates.unmounted[cid] |= currentFlag;\n            delete priorityUpdates[cid];\n            unmountCount++;\n            continue;\n          } // Mount View\n\n\n          if (isDetached) {\n            currentFlag |= view.FLAG_INSERT;\n            mountCount++;\n          }\n\n          currentFlag |= this.registerMountedView(view);\n        }\n\n        var leftoverFlag = this.updateView(view, currentFlag, opt);\n\n        if (leftoverFlag > 0) {\n          // View update has not finished completely\n          priorityUpdates[cid] = leftoverFlag;\n\n          if (!postponeViewFn || !postponeViewFn.call(this, view, leftoverFlag, this) || priorityUpdates[cid]) {\n            postponeCount++;\n            empty = false;\n            continue;\n          }\n        }\n\n        if (maxPriority > priority) maxPriority = priority;\n        updateCount++;\n        delete priorityUpdates[cid];\n      }\n    }\n\n    return {\n      priority: maxPriority,\n      updated: updateCount,\n      postponed: postponeCount,\n      unmounted: unmountCount,\n      mounted: mountCount,\n      empty: empty\n    };\n  },\n  getUnmountedViews: function () {\n    const updates = this._updates;\n    const unmountedCids = Object.keys(updates.unmounted);\n    const n = unmountedCids.length;\n    const unmountedViews = new Array(n);\n\n    for (var i = 0; i < n; i++) {\n      unmountedViews[i] = views[unmountedCids[i]];\n    }\n\n    return unmountedViews;\n  },\n  getMountedViews: function () {\n    const updates = this._updates;\n    const mountedCids = Object.keys(updates.mounted);\n    const n = mountedCids.length;\n    const mountedViews = new Array(n);\n\n    for (var i = 0; i < n; i++) {\n      mountedViews[i] = views[mountedCids[i]];\n    }\n\n    return mountedViews;\n  },\n  checkUnmountedViews: function (viewportFn, opt) {\n    opt || (opt = {});\n    var mountCount = 0;\n    if (typeof viewportFn !== 'function') viewportFn = null;\n    var batchSize = 'mountBatchSize' in opt ? opt.mountBatchSize : Infinity;\n    var updates = this._updates;\n    var unmountedCids = updates.unmountedCids;\n    var unmounted = updates.unmounted;\n\n    for (var i = 0, n = Math.min(unmountedCids.length, batchSize); i < n; i++) {\n      var cid = unmountedCids[i];\n      if (!(cid in unmounted)) continue;\n      var view = views[cid];\n      if (!view) continue;\n\n      if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, false, this)) {\n        // Push at the end of all unmounted ids, so this can be check later again\n        unmountedCids.push(cid);\n        continue;\n      }\n\n      mountCount++;\n      var flag = this.registerMountedView(view);\n      if (flag) this.scheduleViewUpdate(view, flag, view.UPDATE_PRIORITY, {\n        mounting: true\n      });\n    } // Get rid of views, that have been mounted\n\n\n    unmountedCids.splice(0, i);\n    return mountCount;\n  },\n  checkMountedViews: function (viewportFn, opt) {\n    opt || (opt = {});\n    var unmountCount = 0;\n    if (typeof viewportFn !== 'function') return unmountCount;\n    var batchSize = 'unmountBatchSize' in opt ? opt.unmountBatchSize : Infinity;\n    var updates = this._updates;\n    var mountedCids = updates.mountedCids;\n    var mounted = updates.mounted;\n\n    for (var i = 0, n = Math.min(mountedCids.length, batchSize); i < n; i++) {\n      var cid = mountedCids[i];\n      if (!(cid in mounted)) continue;\n      var view = views[cid];\n      if (!view) continue;\n\n      if (!view.DETACHABLE || viewportFn.call(this, view, true, this)) {\n        // Push at the end of all mounted ids, so this can be check later again\n        mountedCids.push(cid);\n        continue;\n      }\n\n      unmountCount++;\n      var flag = this.registerUnmountedView(view);\n      if (flag) view.unmount();\n    } // Get rid of views, that have been unmounted\n\n\n    mountedCids.splice(0, i);\n    return unmountCount;\n  },\n  checkViewport: function (opt) {\n    var passingOpt = defaults({}, opt, {\n      mountBatchSize: Infinity,\n      unmountBatchSize: Infinity\n    });\n    var viewportFn = 'viewport' in passingOpt ? passingOpt.viewport : this.options.viewport;\n    var unmountedCount = this.checkMountedViews(viewportFn, passingOpt);\n\n    if (unmountedCount > 0) {\n      // Do not check views, that have been just unmounted and pushed at the end of the cids array\n      var unmountedCids = this._updates.unmountedCids;\n      passingOpt.mountBatchSize = Math.min(unmountedCids.length - unmountedCount, passingOpt.mountBatchSize);\n    }\n\n    var mountedCount = this.checkUnmountedViews(viewportFn, passingOpt);\n    return {\n      mounted: mountedCount,\n      unmounted: unmountedCount\n    };\n  },\n  freeze: function (opt) {\n    opt || (opt = {});\n    var updates = this._updates;\n    var key = opt.key;\n    var isFrozen = this.options.frozen;\n    var freezeKey = updates.freezeKey;\n\n    if (key && key !== freezeKey) {\n      // key passed, but the paper is already freezed with another key\n      if (isFrozen && freezeKey) return;\n      updates.freezeKey = key;\n      updates.keyFrozen = isFrozen;\n    }\n\n    this.options.frozen = true;\n    var id = updates.id;\n    updates.id = null;\n    if (this.isAsync() && id) cancelFrame(id);\n  },\n  unfreeze: function (opt) {\n    opt || (opt = {});\n    var updates = this._updates;\n    var key = opt.key;\n    var freezeKey = updates.freezeKey; // key passed, but the paper is already freezed with another key\n\n    if (key && freezeKey && key !== freezeKey) return;\n    updates.freezeKey = null; // key passed, but the paper is already freezed\n\n    if (key && key === freezeKey && updates.keyFrozen) return;\n\n    if (this.isAsync()) {\n      this.freeze();\n      this.updateViewsAsync(opt);\n    } else {\n      this.updateViews(opt);\n    }\n\n    this.options.frozen = updates.keyFrozen = false;\n\n    if (updates.sort) {\n      this.sortViews();\n      updates.sort = false;\n    }\n  },\n  isAsync: function () {\n    return !!this.options.async;\n  },\n  isFrozen: function () {\n    return !!this.options.frozen;\n  },\n  isExactSorting: function () {\n    return this.options.sorting === sortingTypes.EXACT;\n  },\n  onRemove: function () {\n    this.freeze(); //clean up all DOM elements/views to prevent memory leaks\n\n    this.removeLayers();\n    this.removeViews();\n  },\n  getComputedSize: function () {\n    var options = this.options;\n    var w = options.width;\n    var h = options.height;\n    if (!isNumber(w)) w = this.el.clientWidth;\n    if (!isNumber(h)) h = this.el.clientHeight;\n    return {\n      width: w,\n      height: h\n    };\n  },\n  setDimensions: function (width, height) {\n    const {\n      options\n    } = this;\n    const {\n      width: currentWidth,\n      height: currentHeight\n    } = options;\n    let w = width === undefined ? currentWidth : width;\n    let h = height === undefined ? currentHeight : height;\n    if (currentWidth === w && currentHeight === h) return;\n    options.width = w;\n    options.height = h;\n\n    this._setDimensions();\n\n    const computedSize = this.getComputedSize();\n    this.trigger('resize', computedSize.width, computedSize.height);\n  },\n  _setDimensions: function () {\n    const {\n      options\n    } = this;\n    let w = options.width;\n    let h = options.height;\n    if (isNumber(w)) w = Math.round(w);\n    if (isNumber(h)) h = Math.round(h);\n    this.$el.css({\n      width: w === null ? '' : w,\n      height: h === null ? '' : h\n    });\n  },\n  setOrigin: function (ox, oy) {\n    return this.translate(ox || 0, oy || 0);\n  },\n  // Expand/shrink the paper to fit the content.\n  // Alternatively signature function(opt)\n  fitToContent: function (gridWidth, gridHeight, padding, opt) {\n    if (isObject(gridWidth)) {\n      // first parameter is an option object\n      opt = gridWidth;\n    } else {\n      // Support for a deprecated signature\n      opt = assign({\n        gridWidth,\n        gridHeight,\n        padding\n      }, opt);\n    }\n\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.getFitToContentArea(opt);\n    const {\n      sx,\n      sy\n    } = this.scale();\n    this.setOrigin(-x * sx, -y * sy);\n    this.setDimensions(width * sx, height * sy);\n    return new Rect(x, y, width, height);\n  },\n  getFitToContentArea: function (opt = {}) {\n    // Calculate the paper size to accommodate all the graph's elements.\n    const gridWidth = opt.gridWidth || 1;\n    const gridHeight = opt.gridHeight || 1;\n    const padding = normalizeSides(opt.padding || 0);\n    const minWidth = Math.max(opt.minWidth || 0, gridWidth);\n    const minHeight = Math.max(opt.minHeight || 0, gridHeight);\n    const maxWidth = opt.maxWidth || Number.MAX_VALUE;\n    const maxHeight = opt.maxHeight || Number.MAX_VALUE;\n    const newOrigin = opt.allowNewOrigin;\n    const area = 'contentArea' in opt ? new Rect(opt.contentArea) : this.getContentArea(opt);\n    const {\n      sx,\n      sy\n    } = this.scale();\n    area.x *= sx;\n    area.y *= sy;\n    area.width *= sx;\n    area.height *= sy;\n    let calcWidth = Math.ceil((area.width + area.x) / gridWidth);\n    let calcHeight = Math.ceil((area.height + area.y) / gridHeight);\n\n    if (!opt.allowNegativeBottomRight) {\n      calcWidth = Math.max(calcWidth, 1);\n      calcHeight = Math.max(calcHeight, 1);\n    }\n\n    calcWidth *= gridWidth;\n    calcHeight *= gridHeight;\n    let tx = 0;\n\n    if (newOrigin === 'negative' && area.x < 0 || newOrigin === 'positive' && area.x >= 0 || newOrigin === 'any') {\n      tx = Math.ceil(-area.x / gridWidth) * gridWidth;\n      tx += padding.left;\n      calcWidth += tx;\n    }\n\n    let ty = 0;\n\n    if (newOrigin === 'negative' && area.y < 0 || newOrigin === 'positive' && area.y >= 0 || newOrigin === 'any') {\n      ty = Math.ceil(-area.y / gridHeight) * gridHeight;\n      ty += padding.top;\n      calcHeight += ty;\n    }\n\n    calcWidth += padding.right;\n    calcHeight += padding.bottom; // Make sure the resulting width and height are greater than minimum.\n\n    calcWidth = Math.max(calcWidth, minWidth);\n    calcHeight = Math.max(calcHeight, minHeight); // Make sure the resulting width and height are lesser than maximum.\n\n    calcWidth = Math.min(calcWidth, maxWidth);\n    calcHeight = Math.min(calcHeight, maxHeight);\n    return new Rect(-tx / sx, -ty / sy, calcWidth / sx, calcHeight / sy);\n  },\n  scaleContentToFit: function (opt) {\n    opt || (opt = {});\n    var contentBBox, contentLocalOrigin;\n\n    if ('contentArea' in opt) {\n      var contentArea = opt.contentArea;\n      contentBBox = this.localToPaperRect(contentArea);\n      contentLocalOrigin = new Point(contentArea);\n    } else {\n      contentBBox = this.getContentBBox(opt);\n      contentLocalOrigin = this.paperToLocalPoint(contentBBox);\n    }\n\n    if (!contentBBox.width || !contentBBox.height) return;\n    defaults(opt, {\n      padding: 0,\n      preserveAspectRatio: true,\n      scaleGrid: null,\n      minScale: 0,\n      maxScale: Number.MAX_VALUE //minScaleX\n      //minScaleY\n      //maxScaleX\n      //maxScaleY\n      //fittingBBox\n\n    });\n    var padding = normalizeSides(opt.padding);\n    var minScaleX = opt.minScaleX || opt.minScale;\n    var maxScaleX = opt.maxScaleX || opt.maxScale;\n    var minScaleY = opt.minScaleY || opt.minScale;\n    var maxScaleY = opt.maxScaleY || opt.maxScale;\n    var fittingBBox;\n\n    if (opt.fittingBBox) {\n      fittingBBox = opt.fittingBBox;\n    } else {\n      var currentTranslate = this.translate();\n      var computedSize = this.getComputedSize();\n      fittingBBox = {\n        x: currentTranslate.tx,\n        y: currentTranslate.ty,\n        width: computedSize.width,\n        height: computedSize.height\n      };\n    }\n\n    fittingBBox = new Rect(fittingBBox).moveAndExpand({\n      x: padding.left,\n      y: padding.top,\n      width: -padding.left - padding.right,\n      height: -padding.top - padding.bottom\n    });\n    var currentScale = this.scale();\n    var newSx = fittingBBox.width / contentBBox.width * currentScale.sx;\n    var newSy = fittingBBox.height / contentBBox.height * currentScale.sy;\n\n    if (opt.preserveAspectRatio) {\n      newSx = newSy = Math.min(newSx, newSy);\n    } // snap scale to a grid\n\n\n    if (opt.scaleGrid) {\n      var gridSize = opt.scaleGrid;\n      newSx = gridSize * Math.floor(newSx / gridSize);\n      newSy = gridSize * Math.floor(newSy / gridSize);\n    } // scale min/max boundaries\n\n\n    newSx = Math.min(maxScaleX, Math.max(minScaleX, newSx));\n    newSy = Math.min(maxScaleY, Math.max(minScaleY, newSy));\n    var origin = this.options.origin;\n    var newOx = fittingBBox.x - contentLocalOrigin.x * newSx - origin.x;\n    var newOy = fittingBBox.y - contentLocalOrigin.y * newSy - origin.y;\n    this.scale(newSx, newSy);\n    this.translate(newOx, newOy);\n  },\n  // Return the dimensions of the content area in local units (without transformations).\n  getContentArea: function (opt) {\n    if (opt && opt.useModelGeometry) {\n      return this.model.getBBox() || new Rect();\n    }\n\n    return V(this.cells).getBBox();\n  },\n  // Return the dimensions of the content bbox in the paper units (as it appears on screen).\n  getContentBBox: function (opt) {\n    return this.localToPaperRect(this.getContentArea(opt));\n  },\n  // Returns a geometry rectangle representing the entire\n  // paper area (coordinates from the left paper border to the right one\n  // and the top border to the bottom one).\n  getArea: function () {\n    return this.paperToLocalRect(this.getComputedSize());\n  },\n  getRestrictedArea: function (...args) {\n    const {\n      restrictTranslate\n    } = this.options;\n    let restrictedArea;\n\n    if (isFunction(restrictTranslate)) {\n      // A method returning a bounding box\n      restrictedArea = restrictTranslate.apply(this, args);\n    } else if (restrictTranslate === true) {\n      // The paper area\n      restrictedArea = this.getArea();\n    } else if (!restrictTranslate) {\n      // falsy value\n      restrictedArea = null;\n    } else {\n      // any other value\n      restrictedArea = new Rect(restrictTranslate);\n    }\n\n    return restrictedArea;\n  },\n  createViewForModel: function (cell) {\n    const {\n      options\n    } = this; // A class taken from the paper options.\n\n    var optionalViewClass; // A default basic class (either dia.ElementView or dia.LinkView)\n\n    var defaultViewClass; // A special class defined for this model in the corresponding namespace.\n    // e.g. joint.shapes.basic.Rect searches for joint.shapes.basic.RectView\n\n    var namespace = options.cellViewNamespace;\n    var type = cell.get('type') + 'View';\n    var namespaceViewClass = getByPath(namespace, type, '.');\n\n    if (cell.isLink()) {\n      optionalViewClass = options.linkView;\n      defaultViewClass = LinkView;\n    } else {\n      optionalViewClass = options.elementView;\n      defaultViewClass = ElementView;\n    } // a) the paper options view is a class (deprecated)\n    //  1. search the namespace for a view\n    //  2. if no view was found, use view from the paper options\n    // b) the paper options view is a function\n    //  1. call the function from the paper options\n    //  2. if no view was return, search the namespace for a view\n    //  3. if no view was found, use the default\n\n\n    var ViewClass = optionalViewClass.prototype instanceof Backbone.View ? namespaceViewClass || optionalViewClass : optionalViewClass.call(this, cell) || namespaceViewClass || defaultViewClass;\n    return new ViewClass({\n      model: cell,\n      interactive: options.interactive,\n      labelsLayer: options.labelsLayer === true ? LayersNames.LABELS : options.labelsLayer\n    });\n  },\n  removeView: function (cell) {\n    const {\n      id\n    } = cell;\n    const {\n      _views,\n      _updates\n    } = this;\n    const view = _views[id];\n\n    if (view) {\n      var {\n        cid\n      } = view;\n      const {\n        mounted,\n        unmounted\n      } = _updates;\n      view.remove();\n      delete _views[id];\n      delete mounted[cid];\n      delete unmounted[cid];\n    }\n\n    return view;\n  },\n  renderView: function (cell, opt) {\n    const {\n      id\n    } = cell;\n    const views = this._views;\n    let view, flag;\n    let create = true;\n\n    if (id in views) {\n      view = views[id];\n\n      if (view.model === cell) {\n        flag = view.FLAG_INSERT;\n        create = false;\n      } else {\n        // The view for this `id` already exist.\n        // The cell is a new instance of the model with identical id\n        // We simply remove the existing view and create a new one\n        this.removeView(cell);\n      }\n    }\n\n    if (create) {\n      view = views[id] = this.createViewForModel(cell);\n      view.paper = this;\n      flag = this.registerUnmountedView(view) | view.getFlag(result(view, 'initFlag'));\n    }\n\n    this.requestViewUpdate(view, flag, view.UPDATE_PRIORITY, opt);\n    return view;\n  },\n  onImageDragStart: function () {\n    // This is the only way to prevent image dragging in Firefox that works.\n    // Setting -moz-user-select: none, draggable=\"false\" attribute or user-drag: none didn't help.\n    return false;\n  },\n  resetViews: function (cells, opt) {\n    opt || (opt = {});\n    cells || (cells = []);\n\n    this._resetUpdates(); // clearing views removes any event listeners\n\n\n    this.removeViews();\n    this.freeze({\n      key: 'reset'\n    });\n\n    for (var i = 0, n = cells.length; i < n; i++) {\n      this.renderView(cells[i], opt);\n    }\n\n    this.unfreeze({\n      key: 'reset'\n    });\n    this.sortViews();\n  },\n  removeViews: function () {\n    invoke(this._views, 'remove');\n    this._views = {};\n  },\n  sortViews: function () {\n    if (!this.isExactSorting()) {\n      // noop\n      return;\n    }\n\n    if (this.isFrozen()) {\n      // sort views once unfrozen\n      this._updates.sort = true;\n      return;\n    }\n\n    this.sortViewsExact();\n  },\n  sortViewsExact: function () {\n    // Run insertion sort algorithm in order to efficiently sort DOM elements according to their\n    // associated model `z` attribute.\n    var $cells = $(this.cells).children('[model-id]');\n    var cells = this.model.get('cells');\n    sortElements($cells, function (a, b) {\n      var cellA = cells.get(a.getAttribute('model-id'));\n      var cellB = cells.get(b.getAttribute('model-id'));\n      var zA = cellA.attributes.z || 0;\n      var zB = cellB.attributes.z || 0;\n      return zA === zB ? 0 : zA < zB ? -1 : 1;\n    });\n  },\n  insertView: function (view) {\n    const layerView = this.getLayerView(LayersNames.CELLS);\n    const {\n      el,\n      model\n    } = view;\n\n    switch (this.options.sorting) {\n      case sortingTypes.APPROX:\n        layerView.insertSortedNode(el, model.get('z'));\n        break;\n\n      case sortingTypes.EXACT:\n      default:\n        layerView.insertNode(el);\n        break;\n    }\n\n    view.onMount();\n  },\n  scale: function (sx, sy, ox, oy) {\n    // getter\n    if (sx === undefined) {\n      return V.matrixToScale(this.matrix());\n    } // setter\n\n\n    if (sy === undefined) {\n      sy = sx;\n    }\n\n    if (ox === undefined) {\n      ox = 0;\n      oy = 0;\n    }\n\n    var translate = this.translate();\n\n    if (ox || oy || translate.tx || translate.ty) {\n      var newTx = translate.tx - ox * (sx - 1);\n      var newTy = translate.ty - oy * (sy - 1);\n      this.translate(newTx, newTy);\n    }\n\n    sx = Math.max(sx || 0, this.MIN_SCALE);\n    sy = Math.max(sy || 0, this.MIN_SCALE);\n    var ctm = this.matrix();\n    ctm.a = sx;\n    ctm.d = sy;\n    this.matrix(ctm);\n    this.trigger('scale', sx, sy, ox, oy);\n    return this;\n  },\n  // Experimental - do not use in production.\n  rotate: function (angle, cx, cy) {\n    // getter\n    if (angle === undefined) {\n      return V.matrixToRotate(this.matrix());\n    } // setter\n    // If the origin is not set explicitely, rotate around the center. Note that\n    // we must use the plain bounding box (`this.el.getBBox()` instead of the one that gives us\n    // the real bounding box (`bbox()`) including transformations).\n\n\n    if (cx === undefined) {\n      var bbox = this.cells.getBBox();\n      cx = bbox.width / 2;\n      cy = bbox.height / 2;\n    }\n\n    var ctm = this.matrix().translate(cx, cy).rotate(angle).translate(-cx, -cy);\n    this.matrix(ctm);\n    return this;\n  },\n  translate: function (tx, ty) {\n    // getter\n    if (tx === undefined) {\n      return V.matrixToTranslate(this.matrix());\n    }\n\n    const {\n      options\n    } = this;\n    const {\n      origin,\n      drawGrid\n    } = options; // setter\n\n    tx || (tx = 0);\n    ty || (ty = 0);\n    const ctm = this.matrix();\n    if (ctm.e === tx && ctm.f === ty) return this;\n    ctm.e = tx;\n    ctm.f = ty;\n    this.matrix(ctm);\n    const {\n      tx: ox,\n      ty: oy\n    } = this.translate();\n    origin.x = ox;\n    origin.y = oy;\n    this.trigger('translate', ox, oy);\n\n    if (drawGrid) {\n      this.drawGrid();\n    }\n\n    return this;\n  },\n  // Find the first view climbing up the DOM tree starting at element `el`. Note that `el` can also\n  // be a selector or a jQuery object.\n  findView: function ($el) {\n    var el = isString($el) ? this.cells.querySelector($el) : $el instanceof $ ? $el[0] : $el;\n    var id = this.findAttribute('model-id', el);\n    if (id) return this._views[id];\n    return undefined;\n  },\n  // Find a view for a model `cell`. `cell` can also be a string or number representing a model `id`.\n  findViewByModel: function (cell) {\n    var id = isString(cell) || isNumber(cell) ? cell : cell && cell.id;\n    return this._views[id];\n  },\n  // Find all views at given point\n  findViewsFromPoint: function (p) {\n    p = new Point(p);\n    var views = this.model.getElements().map(this.findViewByModel, this);\n    return views.filter(function (view) {\n      return view && view.vel.getBBox({\n        target: this.cells\n      }).containsPoint(p);\n    }, this);\n  },\n  // Find all views in given area\n  findViewsInArea: function (rect, opt) {\n    opt = defaults(opt || {}, {\n      strict: false\n    });\n    rect = new Rect(rect);\n    var views = this.model.getElements().map(this.findViewByModel, this);\n    var method = opt.strict ? 'containsRect' : 'intersect';\n    return views.filter(function (view) {\n      return view && rect[method](view.vel.getBBox({\n        target: this.cells\n      }));\n    }, this);\n  },\n  removeTools: function () {\n    this.dispatchToolsEvent('remove');\n    return this;\n  },\n  hideTools: function () {\n    this.dispatchToolsEvent('hide');\n    return this;\n  },\n  showTools: function () {\n    this.dispatchToolsEvent('show');\n    return this;\n  },\n  dispatchToolsEvent: function (event, ...args) {\n    if (typeof event !== 'string') return;\n    this.trigger('tools:event', event, ...args);\n  },\n  getModelById: function (id) {\n    return this.model.getCell(id);\n  },\n  snapToGrid: function (x, y) {\n    // Convert global coordinates to the local ones of the `viewport`. Otherwise,\n    // improper transformation would be applied when the viewport gets transformed (scaled/rotated).\n    return this.clientToLocalPoint(x, y).snapToGrid(this.options.gridSize);\n  },\n  localToPaperPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var localPoint = new Point(x, y);\n    var paperPoint = V.transformPoint(localPoint, this.matrix());\n    return paperPoint;\n  },\n  localToPaperRect: function (x, y, width, height) {\n    // allow `x` to be a rectangle and rest arguments undefined\n    var localRect = new Rect(x, y, width, height);\n    var paperRect = V.transformRect(localRect, this.matrix());\n    return paperRect;\n  },\n  paperToLocalPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var paperPoint = new Point(x, y);\n    var localPoint = V.transformPoint(paperPoint, this.matrix().inverse());\n    return localPoint;\n  },\n  paperToLocalRect: function (x, y, width, height) {\n    // allow `x` to be a rectangle and rest arguments undefined\n    var paperRect = new Rect(x, y, width, height);\n    var localRect = V.transformRect(paperRect, this.matrix().inverse());\n    return localRect;\n  },\n  localToClientPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var localPoint = new Point(x, y);\n    var clientPoint = V.transformPoint(localPoint, this.clientMatrix());\n    return clientPoint;\n  },\n  localToClientRect: function (x, y, width, height) {\n    // allow `x` to be a point and `y` undefined\n    var localRect = new Rect(x, y, width, height);\n    var clientRect = V.transformRect(localRect, this.clientMatrix());\n    return clientRect;\n  },\n  // Transform client coordinates to the paper local coordinates.\n  // Useful when you have a mouse event object and you'd like to get coordinates\n  // inside the paper that correspond to `evt.clientX` and `evt.clientY` point.\n  // Example: var localPoint = paper.clientToLocalPoint({ x: evt.clientX, y: evt.clientY });\n  clientToLocalPoint: function (x, y) {\n    // allow `x` to be a point and `y` undefined\n    var clientPoint = new Point(x, y);\n    var localPoint = V.transformPoint(clientPoint, this.clientMatrix().inverse());\n    return localPoint;\n  },\n  clientToLocalRect: function (x, y, width, height) {\n    // allow `x` to be a point and `y` undefined\n    var clientRect = new Rect(x, y, width, height);\n    var localRect = V.transformRect(clientRect, this.clientMatrix().inverse());\n    return localRect;\n  },\n  localToPagePoint: function (x, y) {\n    return this.localToPaperPoint(x, y).offset(this.pageOffset());\n  },\n  localToPageRect: function (x, y, width, height) {\n    return this.localToPaperRect(x, y, width, height).offset(this.pageOffset());\n  },\n  pageToLocalPoint: function (x, y) {\n    var pagePoint = new Point(x, y);\n    var paperPoint = pagePoint.difference(this.pageOffset());\n    return this.paperToLocalPoint(paperPoint);\n  },\n  pageToLocalRect: function (x, y, width, height) {\n    var pageOffset = this.pageOffset();\n    var paperRect = new Rect(x, y, width, height);\n    paperRect.x -= pageOffset.x;\n    paperRect.y -= pageOffset.y;\n    return this.paperToLocalRect(paperRect);\n  },\n  clientOffset: function () {\n    var clientRect = this.svg.getBoundingClientRect();\n    return new Point(clientRect.left, clientRect.top);\n  },\n  pageOffset: function () {\n    return this.clientOffset().offset(window.scrollX, window.scrollY);\n  },\n  linkAllowed: function (linkView) {\n    if (!(linkView instanceof LinkView)) {\n      throw new Error('Must provide a linkView.');\n    }\n\n    var link = linkView.model;\n    var paperOptions = this.options;\n    var graph = this.model;\n    var ns = graph.constructor.validations;\n\n    if (!paperOptions.multiLinks) {\n      if (!ns.multiLinks.call(this, graph, link)) return false;\n    }\n\n    if (!paperOptions.linkPinning) {\n      // Link pinning is not allowed and the link is not connected to the target.\n      if (!ns.linkPinning.call(this, graph, link)) return false;\n    }\n\n    if (typeof paperOptions.allowLink === 'function') {\n      if (!paperOptions.allowLink.call(this, linkView, this)) return false;\n    }\n\n    return true;\n  },\n  getDefaultLink: function (cellView, magnet) {\n    return isFunction(this.options.defaultLink) // default link is a function producing link model\n    ? this.options.defaultLink.call(this, cellView, magnet) // default link is the Backbone model\n    : this.options.defaultLink.clone();\n  },\n  // Cell highlighting.\n  // ------------------\n  resolveHighlighter: function (opt = {}) {\n    let {\n      highlighter: highlighterDef,\n      type\n    } = opt;\n    const {\n      highlighting,\n      highlighterNamespace\n    } = this.options;\n    /*\n        Expecting opt.highlighter to have the following structure:\n        {\n            name: 'highlighter-name',\n            options: {\n                some: 'value'\n            }\n        }\n    */\n\n    if (highlighterDef === undefined) {\n      // Is highlighting disabled?\n      if (!highlighting) return false; // check for built-in types\n\n      if (type) {\n        highlighterDef = highlighting[type]; // Is a specific type highlight disabled?\n\n        if (highlighterDef === false) return false;\n      }\n\n      if (!highlighterDef) {\n        // Type not defined use default highlight\n        highlighterDef = highlighting['default'];\n      }\n    } // Do nothing if opt.highlighter is falsy.\n    // This allows the case to not highlight cell(s) in certain cases.\n    // For example, if you want to NOT highlight when embedding elements\n    // or use a custom highlighter.\n\n\n    if (!highlighterDef) return false; // Allow specifying a highlighter by name.\n\n    if (isString(highlighterDef)) {\n      highlighterDef = {\n        name: highlighterDef\n      };\n    }\n\n    const name = highlighterDef.name;\n    const highlighter = highlighterNamespace[name]; // Highlighter validation\n\n    if (!highlighter) {\n      throw new Error('Unknown highlighter (\"' + name + '\")');\n    }\n\n    if (typeof highlighter.highlight !== 'function') {\n      throw new Error('Highlighter (\"' + name + '\") is missing required highlight() method');\n    }\n\n    if (typeof highlighter.unhighlight !== 'function') {\n      throw new Error('Highlighter (\"' + name + '\") is missing required unhighlight() method');\n    }\n\n    return {\n      highlighter,\n      options: highlighterDef.options || {},\n      name\n    };\n  },\n  onCellHighlight: function (cellView, magnetEl, opt) {\n    const highlighterDescriptor = this.resolveHighlighter(opt);\n    if (!highlighterDescriptor) return;\n    const {\n      highlighter,\n      options\n    } = highlighterDescriptor;\n    highlighter.highlight(cellView, magnetEl, options);\n  },\n  onCellUnhighlight: function (cellView, magnetEl, opt) {\n    const highlighterDescriptor = this.resolveHighlighter(opt);\n    if (!highlighterDescriptor) return;\n    const {\n      highlighter,\n      options\n    } = highlighterDescriptor;\n    highlighter.unhighlight(cellView, magnetEl, options);\n  },\n  // Interaction.\n  // ------------\n  pointerdblclick: function (evt) {\n    evt.preventDefault(); // magnetpointerdblclick can stop propagation\n\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n    if (view) {\n      view.pointerdblclick(evt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:pointerdblclick', evt, localPoint.x, localPoint.y);\n    }\n  },\n  pointerclick: function (evt) {\n    // magnetpointerclick can stop propagation\n    var data = this.eventData(evt); // Trigger event only if mouse has not moved.\n\n    if (data.mousemoved <= this.options.clickThreshold) {\n      evt = normalizeEvent(evt);\n      var view = this.findView(evt.target);\n      if (this.guard(evt, view)) return;\n      var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n      if (view) {\n        view.pointerclick(evt, localPoint.x, localPoint.y);\n      } else {\n        this.trigger('blank:pointerclick', evt, localPoint.x, localPoint.y);\n      }\n    }\n  },\n  contextmenu: function (evt) {\n    if (this.options.preventContextMenu) evt.preventDefault();\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n    if (view) {\n      view.contextmenu(evt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:contextmenu', evt, localPoint.x, localPoint.y);\n    }\n  },\n  pointerdown: function (evt) {\n    // onmagnet stops propagation when `addLinkFromMagnet` is allowed\n    // onevent can stop propagation\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n    if (view) {\n      evt.preventDefault();\n      view.pointerdown(evt, localPoint.x, localPoint.y);\n    } else {\n      if (this.options.preventDefaultBlankAction) evt.preventDefault();\n      this.trigger('blank:pointerdown', evt, localPoint.x, localPoint.y);\n    }\n\n    this.delegateDragEvents(view, evt.data);\n  },\n  pointermove: function (evt) {\n    // mouse moved counter\n    var data = this.eventData(evt);\n    data.mousemoved || (data.mousemoved = 0);\n    var mousemoved = ++data.mousemoved;\n    if (mousemoved <= this.options.moveThreshold) return;\n    evt = normalizeEvent(evt);\n    var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n    var view = data.sourceView;\n\n    if (view) {\n      view.pointermove(evt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:pointermove', evt, localPoint.x, localPoint.y);\n    }\n\n    this.eventData(evt, data);\n  },\n  pointerup: function (evt) {\n    this.undelegateDocumentEvents();\n    var normalizedEvt = normalizeEvent(evt);\n    var localPoint = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n    var view = this.eventData(evt).sourceView;\n\n    if (view) {\n      view.pointerup(normalizedEvt, localPoint.x, localPoint.y);\n    } else {\n      this.trigger('blank:pointerup', normalizedEvt, localPoint.x, localPoint.y);\n    }\n\n    if (!normalizedEvt.isPropagationStopped()) {\n      this.pointerclick($.Event(evt, {\n        type: 'click',\n        data: evt.data\n      }));\n    }\n\n    evt.stopImmediatePropagation();\n    this.delegateEvents();\n  },\n  mouseover: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n\n    if (view) {\n      view.mouseover(evt);\n    } else {\n      if (this.el === evt.target) return; // prevent border of paper from triggering this\n\n      this.trigger('blank:mouseover', evt);\n    }\n  },\n  mouseout: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n\n    if (view) {\n      view.mouseout(evt);\n    } else {\n      if (this.el === evt.target) return; // prevent border of paper from triggering this\n\n      this.trigger('blank:mouseout', evt);\n    }\n  },\n  mouseenter: function (evt) {\n    evt = normalizeEvent(evt);\n    const {\n      target,\n      // The EventTarget the pointing device entered to\n      relatedTarget,\n      // The EventTarget the pointing device exited from\n      currentTarget // The EventTarget on which the event listener was registered\n\n    } = evt;\n    const view = this.findView(target);\n    if (this.guard(evt, view)) return;\n    const relatedView = this.findView(relatedTarget);\n\n    if (view) {\n      if (relatedView === view) {\n        // Mouse left a cell tool\n        return;\n      }\n\n      view.mouseenter(evt);\n\n      if (this.el.contains(relatedTarget)) {\n        // The pointer remains inside the paper.\n        return;\n      }\n    }\n\n    if (relatedView) {\n      return;\n    } // prevent double `mouseenter` event if the `relatedTarget` is outside the paper\n    // (mouseenter method would be fired twice)\n\n\n    if (currentTarget === this.el) {\n      // `paper` (more descriptive), not `blank`\n      this.trigger('paper:mouseenter', evt);\n    }\n  },\n  mouseleave: function (evt) {\n    evt = normalizeEvent(evt);\n    const {\n      target,\n      // The EventTarget the pointing device exited from\n      relatedTarget,\n      // The EventTarget the pointing device entered to\n      currentTarget // The EventTarget on which the event listener was registered\n\n    } = evt;\n    const view = this.findView(target);\n    if (this.guard(evt, view)) return;\n    const relatedView = this.findView(relatedTarget);\n\n    if (view) {\n      if (relatedView === view) {\n        // Mouse entered a cell tool\n        return;\n      }\n\n      view.mouseleave(evt);\n\n      if (this.el.contains(relatedTarget)) {\n        // The pointer has exited a cellView. The pointer is still inside of the paper.\n        return;\n      }\n    }\n\n    if (relatedView) {\n      // The pointer has entered a new cellView\n      return;\n    } // prevent double `mouseleave` event if the `relatedTarget` is outside the paper\n    // (mouseleave method would be fired twice)\n\n\n    if (currentTarget === this.el) {\n      // There is no cellView under the pointer, nor the blank area of the paper\n      this.trigger('paper:mouseleave', evt);\n    }\n  },\n  mousewheel: function (evt) {\n    evt = normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n    var originalEvent = evt.originalEvent;\n    var localPoint = this.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n    var delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta));\n\n    if (view) {\n      view.mousewheel(evt, localPoint.x, localPoint.y, delta);\n    } else {\n      this.trigger('blank:mousewheel', evt, localPoint.x, localPoint.y, delta);\n    }\n  },\n  onevent: function (evt) {\n    var eventNode = evt.currentTarget;\n    var eventName = eventNode.getAttribute('event');\n\n    if (eventName) {\n      var view = this.findView(eventNode);\n\n      if (view) {\n        evt = normalizeEvent(evt);\n        if (this.guard(evt, view)) return;\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n        view.onevent(evt, eventName, localPoint.x, localPoint.y);\n      }\n    }\n  },\n  magnetEvent: function (evt, handler) {\n    var magnetNode = evt.currentTarget;\n    var magnetValue = magnetNode.getAttribute('magnet');\n\n    if (magnetValue) {\n      var view = this.findView(magnetNode);\n\n      if (view) {\n        evt = normalizeEvent(evt);\n        if (this.guard(evt, view)) return;\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n        handler.call(this, view, evt, magnetNode, localPoint.x, localPoint.y);\n      }\n    }\n  },\n  onmagnet: function (evt) {\n    this.magnetEvent(evt, function (view, evt, _, x, y) {\n      view.onmagnet(evt, x, y);\n    });\n  },\n  magnetpointerdblclick: function (evt) {\n    this.magnetEvent(evt, function (view, evt, magnet, x, y) {\n      view.magnetpointerdblclick(evt, magnet, x, y);\n    });\n  },\n  magnetcontextmenu: function (evt) {\n    if (this.options.preventContextMenu) evt.preventDefault();\n    this.magnetEvent(evt, function (view, evt, magnet, x, y) {\n      view.magnetcontextmenu(evt, magnet, x, y);\n    });\n  },\n  onlabel: function (evt) {\n    var labelNode = evt.currentTarget;\n    var view = this.findView(labelNode);\n\n    if (view) {\n      evt = normalizeEvent(evt);\n      if (this.guard(evt, view)) return;\n      var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n      view.onlabel(evt, localPoint.x, localPoint.y);\n    }\n  },\n\n  getPointerArgs(evt) {\n    const normalizedEvt = normalizeEvent(evt);\n    const {\n      x,\n      y\n    } = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n    return [normalizedEvt, x, y];\n  },\n\n  delegateDragEvents: function (view, data) {\n    data || (data = {});\n    this.eventData({\n      data: data\n    }, {\n      sourceView: view || null,\n      mousemoved: 0\n    });\n    this.delegateDocumentEvents(null, data);\n    this.undelegateEvents();\n  },\n  // Guard the specified event. If the event is not interesting, guard returns `true`.\n  // Otherwise, it returns `false`.\n  guard: function (evt, view) {\n    if (evt.type === 'mousedown' && evt.button === 2) {\n      // handled as `contextmenu` type\n      return true;\n    }\n\n    if (this.options.guard && this.options.guard(evt, view)) {\n      return true;\n    }\n\n    if (evt.data && evt.data.guarded !== undefined) {\n      return evt.data.guarded;\n    }\n\n    if (view && view.model && view.model instanceof Cell) {\n      return false;\n    }\n\n    if (this.svg === evt.target || this.el === evt.target || $.contains(this.svg, evt.target)) {\n      return false;\n    }\n\n    return true; // Event guarded. Paper should not react on it in any way.\n  },\n  setGridSize: function (gridSize) {\n    this.options.gridSize = gridSize;\n\n    if (this.options.drawGrid) {\n      this.drawGrid();\n    }\n\n    return this;\n  },\n  clearGrid: function () {\n    if (this.$grid) {\n      this.$grid.css('backgroundImage', 'none');\n    }\n\n    return this;\n  },\n  _getGridRefs: function () {\n    if (!this._gridCache) {\n      this._gridCache = {\n        root: V('svg', {\n          width: '100%',\n          height: '100%'\n        }, V('defs')),\n        patterns: {},\n        add: function (id, vel) {\n          V(this.root.node.childNodes[0]).append(vel);\n          this.patterns[id] = vel;\n          this.root.append(V('rect', {\n            width: '100%',\n            height: '100%',\n            fill: 'url(#' + id + ')'\n          }));\n        },\n        get: function (id) {\n          return this.patterns[id];\n        },\n        exist: function (id) {\n          return this.patterns[id] !== undefined;\n        }\n      };\n    }\n\n    return this._gridCache;\n  },\n  setGrid: function (drawGrid) {\n    this.clearGrid();\n    this._gridCache = null;\n    this._gridSettings = [];\n    var optionsList = Array.isArray(drawGrid) ? drawGrid : [drawGrid || {}];\n    optionsList.forEach(function (item) {\n      this._gridSettings.push.apply(this._gridSettings, this._resolveDrawGridOption(item));\n    }, this);\n    return this;\n  },\n  _resolveDrawGridOption: function (opt) {\n    var namespace = this.constructor.gridPatterns;\n\n    if (isString(opt) && Array.isArray(namespace[opt])) {\n      return namespace[opt].map(function (item) {\n        return assign({}, item);\n      });\n    }\n\n    var options = opt || {\n      args: [{}]\n    };\n    var isArray = Array.isArray(options);\n    var name = options.name;\n\n    if (!isArray && !name && !options.markup) {\n      name = 'dot';\n    }\n\n    if (name && Array.isArray(namespace[name])) {\n      var pattern = namespace[name].map(function (item) {\n        return assign({}, item);\n      });\n      var args = Array.isArray(options.args) ? options.args : [options.args || {}];\n      defaults(args[0], omit(opt, 'args'));\n\n      for (var i = 0; i < args.length; i++) {\n        if (pattern[i]) {\n          assign(pattern[i], args[i]);\n        }\n      }\n\n      return pattern;\n    }\n\n    return isArray ? options : [options];\n  },\n  drawGrid: function (opt) {\n    var gridSize = this.options.gridSize;\n\n    if (gridSize <= 1) {\n      return this.clearGrid();\n    }\n\n    var localOptions = Array.isArray(opt) ? opt : [opt];\n    var ctm = this.matrix();\n\n    var refs = this._getGridRefs();\n\n    this._gridSettings.forEach(function (gridLayerSetting, index) {\n      var id = 'pattern_' + index;\n      var options = merge(gridLayerSetting, localOptions[index], {\n        sx: ctm.a || 1,\n        sy: ctm.d || 1,\n        ox: ctm.e || 0,\n        oy: ctm.f || 0\n      });\n      options.width = gridSize * (ctm.a || 1) * (options.scaleFactor || 1);\n      options.height = gridSize * (ctm.d || 1) * (options.scaleFactor || 1);\n\n      if (!refs.exist(id)) {\n        refs.add(id, V('pattern', {\n          id: id,\n          patternUnits: 'userSpaceOnUse'\n        }, V(options.markup)));\n      }\n\n      var patternDefVel = refs.get(id);\n\n      if (isFunction(options.update)) {\n        options.update(patternDefVel.node.childNodes[0], options);\n      }\n\n      var x = options.ox % options.width;\n      if (x < 0) x += options.width;\n      var y = options.oy % options.height;\n      if (y < 0) y += options.height;\n      patternDefVel.attr({\n        x: x,\n        y: y,\n        width: options.width,\n        height: options.height\n      });\n    });\n\n    var patternUri = new XMLSerializer().serializeToString(refs.root.node);\n    patternUri = 'url(data:image/svg+xml;base64,' + btoa(patternUri) + ')';\n    this.$grid.css('backgroundImage', patternUri);\n    return this;\n  },\n  updateBackgroundImage: function (opt) {\n    opt = opt || {};\n    var backgroundPosition = opt.position || 'center';\n    var backgroundSize = opt.size || 'auto auto';\n    var currentScale = this.scale();\n    var currentTranslate = this.translate(); // backgroundPosition\n\n    if (isObject(backgroundPosition)) {\n      var x = currentTranslate.tx + currentScale.sx * (backgroundPosition.x || 0);\n      var y = currentTranslate.ty + currentScale.sy * (backgroundPosition.y || 0);\n      backgroundPosition = x + 'px ' + y + 'px';\n    } // backgroundSize\n\n\n    if (isObject(backgroundSize)) {\n      backgroundSize = new Rect(backgroundSize).scale(currentScale.sx, currentScale.sy);\n      backgroundSize = backgroundSize.width + 'px ' + backgroundSize.height + 'px';\n    }\n\n    this.$background.css({\n      backgroundSize: backgroundSize,\n      backgroundPosition: backgroundPosition\n    });\n  },\n  drawBackgroundImage: function (img, opt) {\n    // Clear the background image if no image provided\n    if (!(img instanceof HTMLImageElement)) {\n      this.$background.css('backgroundImage', '');\n      return;\n    }\n\n    if (!this._background || this._background.id !== opt.id) {\n      // Draw only the last image requested (see drawBackground())\n      return;\n    }\n\n    opt = opt || {};\n    var backgroundImage;\n    var backgroundSize = opt.size;\n    var backgroundRepeat = opt.repeat || 'no-repeat';\n    var backgroundOpacity = opt.opacity || 1;\n    var backgroundQuality = Math.abs(opt.quality) || 1;\n    var backgroundPattern = this.constructor.backgroundPatterns[camelCase(backgroundRepeat)];\n\n    if (isFunction(backgroundPattern)) {\n      // 'flip-x', 'flip-y', 'flip-xy', 'watermark' and custom\n      img.width *= backgroundQuality;\n      img.height *= backgroundQuality;\n      var canvas = backgroundPattern(img, opt);\n\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw new Error('dia.Paper: background pattern must return an HTML Canvas instance');\n      }\n\n      backgroundImage = canvas.toDataURL('image/png');\n      backgroundRepeat = 'repeat';\n\n      if (isObject(backgroundSize)) {\n        // recalculate the tile size if an object passed in\n        backgroundSize.width *= canvas.width / img.width;\n        backgroundSize.height *= canvas.height / img.height;\n      } else if (backgroundSize === undefined) {\n        // calculate the tile size if no provided\n        opt.size = {\n          width: canvas.width / backgroundQuality,\n          height: canvas.height / backgroundQuality\n        };\n      }\n    } else {\n      // backgroundRepeat:\n      // no-repeat', 'round', 'space', 'repeat', 'repeat-x', 'repeat-y'\n      backgroundImage = img.src;\n\n      if (backgroundSize === undefined) {\n        // pass the image size for  the backgroundSize if no size provided\n        opt.size = {\n          width: img.width,\n          height: img.height\n        };\n      }\n    }\n\n    this.$background.css({\n      opacity: backgroundOpacity,\n      backgroundRepeat: backgroundRepeat,\n      backgroundImage: 'url(' + backgroundImage + ')'\n    });\n    this.updateBackgroundImage(opt);\n  },\n  updateBackgroundColor: function (color) {\n    this.$el.css('backgroundColor', color || '');\n  },\n  drawBackground: function (opt) {\n    opt = opt || {};\n    this.updateBackgroundColor(opt.color);\n\n    if (opt.image) {\n      opt = this._background = cloneDeep(opt);\n      guid(opt);\n      var img = document.createElement('img');\n      img.onload = this.drawBackgroundImage.bind(this, img, opt);\n      img.src = opt.image;\n    } else {\n      this.drawBackgroundImage(null);\n      this._background = null;\n    }\n\n    return this;\n  },\n  setInteractivity: function (value) {\n    this.options.interactive = value;\n    invoke(this._views, 'setInteractivity', value);\n  },\n  // Paper definitions.\n  // ------------------\n  isDefined: function (defId) {\n    return !!this.svg.getElementById(defId);\n  },\n  defineFilter: function (filter) {\n    if (!isObject(filter)) {\n      throw new TypeError('dia.Paper: defineFilter() requires 1. argument to be an object.');\n    }\n\n    var filterId = filter.id;\n    var name = filter.name; // Generate a hash code from the stringified filter definition. This gives us\n    // a unique filter ID for different definitions.\n\n    if (!filterId) {\n      filterId = name + this.svg.id + hashCode(JSON.stringify(filter));\n    } // If the filter already exists in the document,\n    // we're done and we can just use it (reference it using `url()`).\n    // If not, create one.\n\n\n    if (!this.isDefined(filterId)) {\n      var namespace = _filter;\n      var filterSVGString = namespace[name] && namespace[name](filter.args || {});\n\n      if (!filterSVGString) {\n        throw new Error('Non-existing filter ' + name);\n      } // Set the filter area to be 3x the bounding box of the cell\n      // and center the filter around the cell.\n\n\n      var filterAttrs = assign({\n        filterUnits: 'objectBoundingBox',\n        x: -1,\n        y: -1,\n        width: 3,\n        height: 3\n      }, filter.attrs, {\n        id: filterId\n      });\n      V(filterSVGString, filterAttrs).appendTo(this.defs);\n    }\n\n    return filterId;\n  },\n  defineGradient: function (gradient) {\n    if (!isObject(gradient)) {\n      throw new TypeError('dia.Paper: defineGradient() requires 1. argument to be an object.');\n    }\n\n    const {\n      svg,\n      defs\n    } = this;\n    const {\n      type,\n      // Generate a hash code from the stringified filter definition. This gives us\n      // a unique filter ID for different definitions.\n      id = type + svg.id + hashCode(JSON.stringify(gradient)),\n      stops,\n      attrs = {}\n    } = gradient; // If the gradient already exists in the document,\n    // we're done and we can just use it (reference it using `url()`).\n\n    if (this.isDefined(id)) return id; // If not, create one.\n\n    const stopVEls = toArray(stops).map(({\n      offset,\n      color,\n      opacity\n    }) => {\n      return V('stop').attr({\n        'offset': offset,\n        'stop-color': color,\n        'stop-opacity': Number.isFinite(opacity) ? opacity : 1\n      });\n    });\n    const gradientVEl = V(type, attrs, stopVEls);\n    gradientVEl.id = id;\n    gradientVEl.appendTo(defs);\n    return id;\n  },\n  definePattern: function (pattern) {\n    if (!isObject(pattern)) {\n      throw new TypeError('dia.Paper: definePattern() requires 1. argument to be an object.');\n    }\n\n    const {\n      svg,\n      defs\n    } = this;\n    const {\n      // Generate a hash code from the stringified filter definition. This gives us\n      // a unique filter ID for different definitions.\n      id = svg.id + hashCode(JSON.stringify(pattern)),\n      markup,\n      attrs = {}\n    } = pattern;\n\n    if (!markup) {\n      throw new TypeError('dia.Paper: definePattern() requires markup.');\n    } // If the gradient already exists in the document,\n    // we're done and we can just use it (reference it using `url()`).\n\n\n    if (this.isDefined(id)) return id; // If not, create one.\n\n    const patternVEl = V('pattern', {\n      patternUnits: 'userSpaceOnUse'\n    });\n    patternVEl.id = id;\n    patternVEl.attr(attrs);\n\n    if (typeof markup === 'string') {\n      patternVEl.append(V(markup));\n    } else {\n      const {\n        fragment\n      } = parseDOMJSON(markup);\n      patternVEl.append(fragment);\n    }\n\n    patternVEl.appendTo(defs);\n    return id;\n  },\n  defineMarker: function (marker) {\n    if (!isObject(marker)) {\n      throw new TypeError('dia.Paper: defineMarker() requires 1. argument to be an object.');\n    }\n\n    const {\n      svg,\n      defs\n    } = this;\n    const {\n      // Generate a hash code from the stringified filter definition. This gives us\n      // a unique filter ID for different definitions.\n      id = svg.id + hashCode(JSON.stringify(marker)),\n      markup,\n      attrs = {},\n      // deprecated in favour of `attrs`\n      markerUnits = 'userSpaceOnUse'\n    } = marker; // If the marker already exists in the document,\n    // we're done and we can just use it (reference it using `url()`).\n\n    if (this.isDefined(id)) return id; // If not, create one.\n\n    const markerVEl = V('marker', {\n      orient: 'auto',\n      overflow: 'visible',\n      markerUnits: markerUnits\n    });\n    markerVEl.id = id;\n    markerVEl.attr(attrs);\n\n    if (markup) {\n      if (typeof markup === 'string') {\n        markerVEl.append(V(markup));\n      } else {\n        const {\n          fragment\n        } = parseDOMJSON(markup);\n        markerVEl.append(fragment);\n      }\n    } else {\n      // marker object is a flat structure\n      const {\n        type = 'path'\n      } = marker;\n      const markerContentVEl = V(type, omit(marker, 'type', 'id', 'markup', 'attrs', 'markerUnits'));\n      markerVEl.append(markerContentVEl);\n    }\n\n    markerVEl.appendTo(defs);\n    return id;\n  }\n}, {\n  sorting: sortingTypes,\n  Layers: LayersNames,\n  backgroundPatterns: {\n    flipXy: function (img) {\n      // d b\n      // q p\n      var canvas = document.createElement('canvas');\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      canvas.width = 2 * imgWidth;\n      canvas.height = 2 * imgHeight;\n      var ctx = canvas.getContext('2d'); // top-left image\n\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // xy-flipped bottom-right image\n\n      ctx.setTransform(-1, 0, 0, -1, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // x-flipped top-right image\n\n      ctx.setTransform(-1, 0, 0, 1, canvas.width, 0);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // y-flipped bottom-left image\n\n      ctx.setTransform(1, 0, 0, -1, 0, canvas.height);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n      return canvas;\n    },\n    flipX: function (img) {\n      // d b\n      // d b\n      var canvas = document.createElement('canvas');\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      canvas.width = imgWidth * 2;\n      canvas.height = imgHeight;\n      var ctx = canvas.getContext('2d'); // left image\n\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // flipped right image\n\n      ctx.translate(2 * imgWidth, 0);\n      ctx.scale(-1, 1);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n      return canvas;\n    },\n    flipY: function (img) {\n      // d d\n      // q q\n      var canvas = document.createElement('canvas');\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      canvas.width = imgWidth;\n      canvas.height = imgHeight * 2;\n      var ctx = canvas.getContext('2d'); // top image\n\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight); // flipped bottom image\n\n      ctx.translate(0, 2 * imgHeight);\n      ctx.scale(1, -1);\n      ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n      return canvas;\n    },\n    watermark: function (img, opt) {\n      //   d\n      // d\n      opt = opt || {};\n      var imgWidth = img.width;\n      var imgHeight = img.height;\n      var canvas = document.createElement('canvas');\n      canvas.width = imgWidth * 3;\n      canvas.height = imgHeight * 3;\n      var ctx = canvas.getContext('2d');\n      var angle = isNumber(opt.watermarkAngle) ? -opt.watermarkAngle : -20;\n      var radians = toRad(angle);\n      var stepX = canvas.width / 4;\n      var stepY = canvas.height / 4;\n\n      for (var i = 0; i < 4; i++) {\n        for (var j = 0; j < 4; j++) {\n          if ((i + j) % 2 > 0) {\n            // reset the current transformations\n            ctx.setTransform(1, 0, 0, 1, (2 * i - 1) * stepX, (2 * j - 1) * stepY);\n            ctx.rotate(radians);\n            ctx.drawImage(img, -imgWidth / 2, -imgHeight / 2, imgWidth, imgHeight);\n          }\n        }\n      }\n\n      return canvas;\n    }\n  },\n  gridPatterns: {\n    dot: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'rect',\n      update: function (el, opt) {\n        V(el).attr({\n          width: opt.thickness * opt.sx,\n          height: opt.thickness * opt.sy,\n          fill: opt.color\n        });\n      }\n    }],\n    fixedDot: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'rect',\n      update: function (el, opt) {\n        var size = opt.sx <= 1 ? opt.thickness * opt.sx : opt.thickness;\n        V(el).attr({\n          width: size,\n          height: size,\n          fill: opt.color\n        });\n      }\n    }],\n    mesh: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'path',\n      update: function (el, opt) {\n        var d;\n        var width = opt.width;\n        var height = opt.height;\n        var thickness = opt.thickness;\n\n        if (width - thickness >= 0 && height - thickness >= 0) {\n          d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n        } else {\n          d = 'M 0 0 0 0';\n        }\n\n        V(el).attr({\n          'd': d,\n          stroke: opt.color,\n          'stroke-width': opt.thickness\n        });\n      }\n    }],\n    doubleMesh: [{\n      color: '#AAAAAA',\n      thickness: 1,\n      markup: 'path',\n      update: function (el, opt) {\n        var d;\n        var width = opt.width;\n        var height = opt.height;\n        var thickness = opt.thickness;\n\n        if (width - thickness >= 0 && height - thickness >= 0) {\n          d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n        } else {\n          d = 'M 0 0 0 0';\n        }\n\n        V(el).attr({\n          'd': d,\n          stroke: opt.color,\n          'stroke-width': opt.thickness\n        });\n      }\n    }, {\n      color: '#000000',\n      thickness: 3,\n      scaleFactor: 4,\n      markup: 'path',\n      update: function (el, opt) {\n        var d;\n        var width = opt.width;\n        var height = opt.height;\n        var thickness = opt.thickness;\n\n        if (width - thickness >= 0 && height - thickness >= 0) {\n          d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n        } else {\n          d = 'M 0 0 0 0';\n        }\n\n        V(el).attr({\n          'd': d,\n          stroke: opt.color,\n          'stroke-width': opt.thickness\n        });\n      }\n    }]\n  }\n});","map":{"version":3,"names":["V","isNumber","assign","nextFrame","isObject","cancelFrame","defaults","defaultsDeep","addClassNamePrefix","normalizeSides","isFunction","isPlainObject","getByPath","sortElements","isString","guid","normalizeEvent","omit","result","merge","camelCase","cloneDeep","invoke","hashCode","filter","_filter","parseDOMJSON","toArray","has","Rect","Point","toRad","View","views","CellView","ElementView","LinkView","Link","Cell","Graph","LayersNames","PaperLayer","highlighters","linkAnchors","connectionPoints","anchors","$","Backbone","sortingTypes","NONE","APPROX","EXACT","MOUNT_BATCH_SIZE","UPDATE_BATCH_SIZE","Infinity","MIN_PRIORITY","HighlightingTypes","Highlighting","defaultHighlighting","DEFAULT","name","options","padding","MAGNET_AVAILABILITY","className","ELEMENT_AVAILABILITY","defaultLayers","BACK","CELLS","LABELS","FRONT","TOOLS","Paper","extend","width","height","origin","x","y","gridSize","drawGrid","background","perpendicularLinks","elementView","linkView","snapLabels","snapLinks","labelsLayer","multiLinks","guard","evt","view","highlighting","preventContextMenu","preventDefaultBlankAction","restrictTranslate","markAvailable","defaultLink","defaultConnector","defaultRouter","defaultAnchor","defaultLinkAnchor","defaultConnectionPoint","connectionStrategy","validateMagnet","_cellView","magnet","_evt","getAttribute","validateConnection","cellViewS","_magnetS","cellViewT","_magnetT","end","_linkView","embeddingMode","validateEmbedding","childView","parentView","validateUnembedding","findParentBy","frontParentOnly","interactive","labelMove","linkPinning","allowLink","clickThreshold","moveThreshold","magnetThreshold","sorting","frozen","onViewUpdate","flag","priority","opt","paper","FLAG_INSERT","FLAG_REMOVE","mounting","isolate","requestConnectedLinksUpdate","onViewPostponed","forcePostponedViewUpdate","beforeRender","afterRender","viewport","cellViewNamespace","routerNamespace","connectorNamespace","highlighterNamespace","anchorNamespace","linkAnchorNamespace","connectionPointNamespace","events","documentEvents","svg","defs","tools","$background","layers","$grid","$document","_viewportMatrix","_viewportTransformString","_updates","_layers","SORT_DELAYING_BATCHES","UPDATE_DELAYING_BATCHES","MIN_SCALE","init","el","joint","shapes","model","setGrid","cloneOptions","render","_setDimensions","startListening","_views","ownerDocument","resetViews","attributes","cells","models","isFrozen","isAsync","updateViewsAsync","_resetUpdates","id","priorities","unmountedCids","mountedCids","unmounted","mounted","count","keyFrozen","freezeKey","sort","listenTo","onCellAdded","onCellRemoved","onCellChange","onGraphReset","onGraphSort","onGraphBatchStop","on","onCellHighlight","onCellUnhighlight","update","cell","_","position","renderView","maxPosition","freeze","key","unfreeze","findViewByModel","requestViewUpdate","UPDATE_PRIORITY","hasChanged","collection","resetLayers","hasActiveBatch","sortViews","data","batchName","graph","updateDelayingBatches","includes","updateViews","sortDelayingBatches","children","ns","namespace","namespaceURI","xhtml","tagName","selector","xlink","hasLayerView","layerName","getLayerView","Error","getLayerNode","renderChildren","childNodes","grid","renderLayers","ensureId","drawBackground","removeLayers","forEach","sorted","layerView","appendChild","cellsLayerView","toolsLayerView","labelsLayerView","vel","addClass","Object","keys","remove","removePivots","_background","updateBackgroundImage","matrix","ctm","undefined","transformString","getCTM","createSVGMatrix","ctmString","matrixToTransformString","setAttribute","clientMatrix","getScreenCTM","links","getConnectedLinks","j","n","length","link","flagLabels","getTargetCell","push","getSourceCell","nextPriority","Math","max","scheduleViewUpdate","getFlag","isElement","sourceFlag","sourceView","isViewMounted","dumpView","updateEndMagnet","targetFlag","targetView","async","stats","notifyAfterRender","type","updates","cid","priorityUpdates","i","prevPriorityUpdates","currentType","viewUpdateFn","call","dumpViewUpdate","registerMountedView","updateView","removeView","insertView","confirmUpdate","requireView","registerUnmountedView","dumpViews","passingOpt","checkViewport","notifyBeforeRender","batchStats","updateCount","batchCount","updateViewsBatch","updated","min","empty","batches","hasScheduledUpdates","priorityIndexes","_key","processed","mountBatchSize","unmountBatchSize","checkStats","unmountCount","mountCount","total","progressFn","progress","beforeFn","afterFn","trigger","batchSize","postponeCount","maxPriority","viewportFn","postponeViewFn","main","currentFlag","isDetached","DETACHABLE","unmount","leftoverFlag","postponed","getUnmountedViews","unmountedViews","Array","getMountedViews","mountedViews","checkUnmountedViews","splice","checkMountedViews","unmountedCount","mountedCount","isExactSorting","onRemove","removeViews","getComputedSize","w","h","clientWidth","clientHeight","setDimensions","currentWidth","currentHeight","computedSize","round","$el","css","setOrigin","ox","oy","translate","fitToContent","gridWidth","gridHeight","getFitToContentArea","sx","sy","scale","minWidth","minHeight","maxWidth","Number","MAX_VALUE","maxHeight","newOrigin","allowNewOrigin","area","contentArea","getContentArea","calcWidth","ceil","calcHeight","allowNegativeBottomRight","tx","left","ty","top","right","bottom","scaleContentToFit","contentBBox","contentLocalOrigin","localToPaperRect","getContentBBox","paperToLocalPoint","preserveAspectRatio","scaleGrid","minScale","maxScale","minScaleX","maxScaleX","minScaleY","maxScaleY","fittingBBox","currentTranslate","moveAndExpand","currentScale","newSx","newSy","floor","newOx","newOy","useModelGeometry","getBBox","getArea","paperToLocalRect","getRestrictedArea","args","restrictedArea","apply","createViewForModel","optionalViewClass","defaultViewClass","get","namespaceViewClass","isLink","ViewClass","prototype","create","onImageDragStart","sortViewsExact","$cells","a","b","cellA","cellB","zA","z","zB","insertSortedNode","insertNode","onMount","matrixToScale","newTx","newTy","d","rotate","angle","cx","cy","matrixToRotate","bbox","matrixToTranslate","e","f","findView","querySelector","findAttribute","findViewsFromPoint","p","getElements","map","target","containsPoint","findViewsInArea","rect","strict","method","removeTools","dispatchToolsEvent","hideTools","showTools","event","getModelById","getCell","snapToGrid","clientToLocalPoint","localToPaperPoint","localPoint","paperPoint","transformPoint","localRect","paperRect","transformRect","inverse","localToClientPoint","clientPoint","localToClientRect","clientRect","clientToLocalRect","localToPagePoint","offset","pageOffset","localToPageRect","pageToLocalPoint","pagePoint","difference","pageToLocalRect","clientOffset","getBoundingClientRect","window","scrollX","scrollY","linkAllowed","paperOptions","constructor","validations","getDefaultLink","cellView","clone","resolveHighlighter","highlighter","highlighterDef","highlight","unhighlight","magnetEl","highlighterDescriptor","pointerdblclick","preventDefault","clientX","clientY","pointerclick","eventData","mousemoved","contextmenu","pointerdown","delegateDragEvents","pointermove","pointerup","undelegateDocumentEvents","normalizedEvt","isPropagationStopped","Event","stopImmediatePropagation","delegateEvents","mouseover","mouseout","mouseenter","relatedTarget","currentTarget","relatedView","contains","mouseleave","mousewheel","originalEvent","delta","wheelDelta","onevent","eventNode","eventName","magnetEvent","handler","magnetNode","magnetValue","onmagnet","magnetpointerdblclick","magnetcontextmenu","onlabel","labelNode","getPointerArgs","delegateDocumentEvents","undelegateEvents","button","guarded","setGridSize","clearGrid","_getGridRefs","_gridCache","root","patterns","add","node","append","fill","exist","_gridSettings","optionsList","isArray","item","_resolveDrawGridOption","gridPatterns","markup","pattern","localOptions","refs","gridLayerSetting","index","scaleFactor","patternUnits","patternDefVel","attr","patternUri","XMLSerializer","serializeToString","btoa","backgroundPosition","backgroundSize","size","drawBackgroundImage","img","HTMLImageElement","backgroundImage","backgroundRepeat","repeat","backgroundOpacity","opacity","backgroundQuality","abs","quality","backgroundPattern","backgroundPatterns","canvas","HTMLCanvasElement","toDataURL","src","updateBackgroundColor","color","image","document","createElement","onload","bind","setInteractivity","value","isDefined","defId","getElementById","defineFilter","TypeError","filterId","JSON","stringify","filterSVGString","filterAttrs","filterUnits","attrs","appendTo","defineGradient","gradient","stops","stopVEls","isFinite","gradientVEl","definePattern","patternVEl","fragment","defineMarker","marker","markerUnits","markerVEl","orient","overflow","markerContentVEl","Layers","flipXy","imgWidth","imgHeight","ctx","getContext","drawImage","setTransform","flipX","flipY","watermark","watermarkAngle","radians","stepX","stepY","dot","thickness","fixedDot","mesh","join","stroke","doubleMesh"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/dia/Paper.mjs"],"sourcesContent":["import V from '../V/index.mjs';\nimport {\n    isNumber,\n    assign,\n    nextFrame,\n    isObject,\n    cancelFrame,\n    defaults,\n    defaultsDeep,\n    addClassNamePrefix,\n    normalizeSides,\n    isFunction,\n    isPlainObject,\n    getByPath,\n    sortElements,\n    isString,\n    guid,\n    normalizeEvent,\n    omit,\n    result,\n    merge,\n    camelCase,\n    cloneDeep,\n    invoke,\n    hashCode,\n    filter as _filter,\n    parseDOMJSON,\n    toArray,\n    has\n} from '../util/index.mjs';\nimport { Rect, Point, toRad } from '../g/index.mjs';\nimport { View, views } from '../mvc/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { ElementView } from './ElementView.mjs';\nimport { LinkView } from './LinkView.mjs';\nimport { Link } from './Link.mjs';\nimport { Cell } from './Cell.mjs';\nimport { Graph } from './Graph.mjs';\nimport { LayersNames, PaperLayer } from './PaperLayer.mjs';\nimport * as highlighters from '../highlighters/index.mjs';\nimport * as linkAnchors from '../linkAnchors/index.mjs';\nimport * as connectionPoints from '../connectionPoints/index.mjs';\nimport * as anchors from '../anchors/index.mjs';\n\nimport $ from 'jquery';\nimport Backbone from 'backbone';\n\nconst sortingTypes = {\n    NONE: 'sorting-none',\n    APPROX: 'sorting-approximate',\n    EXACT: 'sorting-exact'\n};\n\nconst MOUNT_BATCH_SIZE = 1000;\nconst UPDATE_BATCH_SIZE = Infinity;\nconst MIN_PRIORITY = 9007199254740991; // Number.MAX_SAFE_INTEGER\n\nconst HighlightingTypes = CellView.Highlighting;\n\nconst defaultHighlighting = {\n    [HighlightingTypes.DEFAULT]: {\n        name: 'stroke',\n        options: {\n            padding: 3\n        }\n    },\n    [HighlightingTypes.MAGNET_AVAILABILITY]: {\n        name: 'addClass',\n        options: {\n            className: 'available-magnet'\n        }\n    },\n    [HighlightingTypes.ELEMENT_AVAILABILITY]: {\n        name: 'addClass',\n        options: {\n            className: 'available-cell'\n        }\n    }\n};\n\nconst defaultLayers = [{\n    name: LayersNames.BACK,\n}, {\n    name: LayersNames.CELLS,\n}, {\n    name: LayersNames.LABELS,\n}, {\n    name: LayersNames.FRONT\n}, {\n    name: LayersNames.TOOLS\n}];\n\nexport const Paper = View.extend({\n\n    className: 'paper',\n\n    options: {\n\n        width: 800,\n        height: 600,\n        origin: { x: 0, y: 0 }, // x,y coordinates in top-left corner\n        gridSize: 1,\n\n        // Whether or not to draw the grid lines on the paper's DOM element.\n        // e.g drawGrid: true, drawGrid: { color: 'red', thickness: 2 }\n        drawGrid: false,\n\n        // Whether or not to draw the background on the paper's DOM element.\n        // e.g. background: { color: 'lightblue', image: '/paper-background.png', repeat: 'flip-xy' }\n        background: false,\n\n        perpendicularLinks: false,\n        elementView: ElementView,\n        linkView: LinkView,\n        snapLabels: false, // false, true\n        snapLinks: false, // false, true, { radius: value }\n\n        // Should the link labels be rendered into its own layer?\n        // `false` - the labels are part of the links\n        // `true` - the labels are appended to LayersName.LABELS\n        // [LayersName] - the labels are appended to the layer specified\n        labelsLayer: false,\n\n        // When set to FALSE, an element may not have more than 1 link with the same source and target element.\n        multiLinks: true,\n\n        // For adding custom guard logic.\n        guard: function(evt, view) {\n\n            // FALSE means the event isn't guarded.\n            return false;\n        },\n\n        highlighting: defaultHighlighting,\n\n        // Prevent the default context menu from being displayed.\n        preventContextMenu: true,\n\n        // Prevent the default action for blank:pointer<action>.\n        preventDefaultBlankAction: true,\n\n        // Restrict the translation of elements by given bounding box.\n        // Option accepts a boolean:\n        //  true - the translation is restricted to the paper area\n        //  false - no restrictions\n        // A method:\n        // restrictTranslate: function(elementView) {\n        //     var parentId = elementView.model.get('parent');\n        //     return parentId && this.model.getCell(parentId).getBBox();\n        // },\n        // Or a bounding box:\n        // restrictTranslate: { x: 10, y: 10, width: 790, height: 590 }\n        restrictTranslate: false,\n\n        // Marks all available magnets with 'available-magnet' class name and all available cells with\n        // 'available-cell' class name. Marks them when dragging a link is started and unmark\n        // when the dragging is stopped.\n        markAvailable: false,\n\n        // Defines what link model is added to the graph after an user clicks on an active magnet.\n        // Value could be the Backbone.model or a function returning the Backbone.model\n        // defaultLink: function(elementView, magnet) { return condition ? new customLink1() : new customLink2() }\n        defaultLink: new Link,\n\n        // A connector that is used by links with no connector defined on the model.\n        // e.g. { name: 'rounded', args: { radius: 5 }} or a function\n        defaultConnector: { name: 'normal' },\n\n        // A router that is used by links with no router defined on the model.\n        // e.g. { name: 'oneSide', args: { padding: 10 }} or a function\n        defaultRouter: { name: 'normal' },\n\n        defaultAnchor: { name: 'center' },\n\n        defaultLinkAnchor: { name: 'connectionRatio' },\n\n        defaultConnectionPoint: { name: 'bbox' },\n\n        /* CONNECTING */\n\n        connectionStrategy: null,\n\n        // Check whether to add a new link to the graph when user clicks on an a magnet.\n        validateMagnet: function(_cellView, magnet, _evt) {\n            return magnet.getAttribute('magnet') !== 'passive';\n        },\n\n        // Check whether to allow or disallow the link connection while an arrowhead end (source/target)\n        // being changed.\n        validateConnection: function(cellViewS, _magnetS, cellViewT, _magnetT, end, _linkView) {\n            return (end === 'target' ? cellViewT : cellViewS) instanceof ElementView;\n        },\n\n        /* EMBEDDING */\n\n        // Enables embedding. Re-parent the dragged element with elements under it and makes sure that\n        // all links and elements are visible taken the level of embedding into account.\n        embeddingMode: false,\n\n        // Check whether to allow or disallow the element embedding while an element being translated.\n        validateEmbedding: function(childView, parentView) {\n            // by default all elements can be in relation child-parent\n            return true;\n        },\n\n        // Check whether to allow or disallow an embedded element to be unembedded / to become a root.\n        validateUnembedding: function(childView) {\n            // by default all elements can become roots\n            return true;\n        },\n\n        // Determines the way how a cell finds a suitable parent when it's dragged over the paper.\n        // The cell with the highest z-index (visually on the top) will be chosen.\n        findParentBy: 'bbox', // 'bbox'|'center'|'origin'|'corner'|'topRight'|'bottomLeft'\n\n        // If enabled only the element on the very front is taken into account for the embedding.\n        // If disabled the elements under the dragged view are tested one by one\n        // (from front to back) until a valid parent found.\n        frontParentOnly: true,\n\n        // Interactive flags. See online docs for the complete list of interactive flags.\n        interactive: {\n            labelMove: false\n        },\n\n        // When set to true the links can be pinned to the paper.\n        // i.e. link source/target can be a point e.g. link.get('source') ==> { x: 100, y: 100 };\n        linkPinning: true,\n\n        // Custom validation after an interaction with a link ends.\n        // Recognizes a function. If `false` is returned, the link is disallowed (removed or reverted)\n        // (linkView, paper) => boolean\n        allowLink: null,\n\n        // Allowed number of mousemove events after which the pointerclick event will be still triggered.\n        clickThreshold: 0,\n\n        // Number of required mousemove events before the first pointermove event will be triggered.\n        moveThreshold: 0,\n\n        // Number of required mousemove events before the a link is created out of the magnet.\n        // Or string `onleave` so the link is created when the pointer leaves the magnet\n        magnetThreshold: 0,\n\n        // Rendering Options\n\n        sorting: sortingTypes.EXACT,\n\n        frozen: false,\n\n        // no docs yet\n        onViewUpdate: function(view, flag, priority, opt, paper) {\n            // Do not update connected links when:\n            // 1. the view was just inserted (added to the graph and rendered)\n            // 2. the view was just mounted (added back to the paper by viewport function)\n            // 3. the change was marked as `isolate`.\n            // 4. the view model was just removed from the graph\n            if ((flag & (view.FLAG_INSERT | view.FLAG_REMOVE)) || opt.mounting || opt.isolate) return;\n            paper.requestConnectedLinksUpdate(view, priority, opt);\n        },\n\n        // no docs yet\n        onViewPostponed: function(view, flag, paper) {\n            return paper.forcePostponedViewUpdate(view, flag);\n        },\n\n        beforeRender: null, // function(opt, paper) { },\n\n        afterRender: null, // function(stats, opt, paper) {\n\n        viewport: null,\n\n        // Default namespaces\n\n        cellViewNamespace: null,\n\n        routerNamespace: null,\n\n        connectorNamespace: null,\n\n        highlighterNamespace: highlighters,\n\n        anchorNamespace: anchors,\n\n        linkAnchorNamespace: linkAnchors,\n\n        connectionPointNamespace: connectionPoints\n    },\n\n    events: {\n        'dblclick': 'pointerdblclick',\n        'contextmenu': 'contextmenu',\n        'mousedown': 'pointerdown',\n        'touchstart': 'pointerdown',\n        'mouseover': 'mouseover',\n        'mouseout': 'mouseout',\n        'mouseenter': 'mouseenter',\n        'mouseleave': 'mouseleave',\n        'wheel': 'mousewheel',\n        'mouseenter .joint-cell': 'mouseenter',\n        'mouseleave .joint-cell': 'mouseleave',\n        'mouseenter .joint-tools': 'mouseenter',\n        'mouseleave .joint-tools': 'mouseleave',\n        'mousedown .joint-cell [event]': 'onevent', // interaction with cell with `event` attribute set\n        'touchstart .joint-cell [event]': 'onevent',\n        'mousedown .joint-cell [magnet]': 'onmagnet', // interaction with cell with `magnet` attribute set\n        'touchstart .joint-cell [magnet]': 'onmagnet',\n        'dblclick .joint-cell [magnet]': 'magnetpointerdblclick',\n        'contextmenu .joint-cell [magnet]': 'magnetcontextmenu',\n        'mousedown .joint-link .label': 'onlabel', // interaction with link label\n        'touchstart .joint-link .label': 'onlabel',\n        'dragstart .joint-cell image': 'onImageDragStart' // firefox fix\n    },\n\n    documentEvents: {\n        'mousemove': 'pointermove',\n        'touchmove': 'pointermove',\n        'mouseup': 'pointerup',\n        'touchend': 'pointerup',\n        'touchcancel': 'pointerup'\n    },\n\n    svg: null,\n    viewport: null,\n    defs: null,\n    tools: null,\n    $background: null,\n    layers: null,\n    $grid: null,\n    $document: null,\n\n    // For storing the current transformation matrix (CTM) of the paper's viewport.\n    _viewportMatrix: null,\n    // For verifying whether the CTM is up-to-date. The viewport transform attribute\n    // could have been manipulated directly.\n    _viewportTransformString: null,\n    // Updates data (priorities, unmounted views etc.)\n    _updates: null,\n    // Paper Layers\n    _layers: null,\n\n    SORT_DELAYING_BATCHES: ['add', 'to-front', 'to-back'],\n    UPDATE_DELAYING_BATCHES: ['translate'],\n    MIN_SCALE: 1e-6,\n\n    init: function() {\n\n        const { options, el } = this;\n        if (!options.cellViewNamespace) {\n            /* eslint-disable no-undef */\n            options.cellViewNamespace = typeof joint !== 'undefined' && has(joint, 'shapes') ? joint.shapes : null;\n            /* eslint-enable no-undef */\n        }\n\n        const model = this.model = options.model || new Graph;\n\n        // Layers (SVGGroups)\n        this._layers = {};\n\n        this.setGrid(options.drawGrid);\n        this.cloneOptions();\n        this.render();\n        this._setDimensions();\n        this.startListening();\n\n        // Hash of all cell views.\n        this._views = {};\n\n        // Reference to the paper owner document\n        this.$document = $(el.ownerDocument);\n        // Render existing cells in the graph\n        this.resetViews(model.attributes.cells.models);\n        // Start the Rendering Loop\n        if (!this.isFrozen() && this.isAsync()) this.updateViewsAsync();\n    },\n\n    _resetUpdates: function() {\n        return this._updates = {\n            id: null,\n            priorities: [{}, {}, {}],\n            unmountedCids: [],\n            mountedCids: [],\n            unmounted: {},\n            mounted: {},\n            count: 0,\n            keyFrozen: false,\n            freezeKey: null,\n            sort: false\n        };\n    },\n\n    startListening: function() {\n        var model = this.model;\n        this.listenTo(model, 'add', this.onCellAdded)\n            .listenTo(model, 'remove', this.onCellRemoved)\n            .listenTo(model, 'change', this.onCellChange)\n            .listenTo(model, 'reset', this.onGraphReset)\n            .listenTo(model, 'sort', this.onGraphSort)\n            .listenTo(model, 'batch:stop', this.onGraphBatchStop);\n        this.on('cell:highlight', this.onCellHighlight)\n            .on('cell:unhighlight', this.onCellUnhighlight)\n            .on('scale translate', this.update);\n    },\n\n    onCellAdded: function(cell, _, opt) {\n        var position = opt.position;\n        if (this.isAsync() || !isNumber(position)) {\n            this.renderView(cell, opt);\n        } else {\n            if (opt.maxPosition === position) this.freeze({ key: 'addCells' });\n            this.renderView(cell, opt);\n            if (position === 0) this.unfreeze({ key: 'addCells' });\n        }\n    },\n\n    onCellRemoved: function(cell, _, opt) {\n        const view = this.findViewByModel(cell);\n        if (view) this.requestViewUpdate(view, view.FLAG_REMOVE, view.UPDATE_PRIORITY, opt);\n    },\n\n    onCellChange: function(cell, opt) {\n        if (cell === this.model.attributes.cells) return;\n        if (cell.hasChanged('z') && this.options.sorting === sortingTypes.APPROX) {\n            const view = this.findViewByModel(cell);\n            if (view) this.requestViewUpdate(view, view.FLAG_INSERT, view.UPDATE_PRIORITY, opt);\n        }\n    },\n\n    onGraphReset: function(collection, opt) {\n        this.resetLayers();\n        this.resetViews(collection.models, opt);\n    },\n\n    onGraphSort: function() {\n        if (this.model.hasActiveBatch(this.SORT_DELAYING_BATCHES)) return;\n        this.sortViews();\n    },\n\n    onGraphBatchStop: function(data) {\n        if (this.isFrozen()) return;\n        var name = data && data.batchName;\n        var graph = this.model;\n        if (!this.isAsync()) {\n            var updateDelayingBatches = this.UPDATE_DELAYING_BATCHES;\n            if (updateDelayingBatches.includes(name) && !graph.hasActiveBatch(updateDelayingBatches)) {\n                this.updateViews(data);\n            }\n        }\n        var sortDelayingBatches = this.SORT_DELAYING_BATCHES;\n        if (sortDelayingBatches.includes(name) && !graph.hasActiveBatch(sortDelayingBatches)) {\n            this.sortViews();\n        }\n    },\n\n    cloneOptions: function() {\n\n        const { options } = this;\n        const {\n            defaultConnector,\n            defaultRouter,\n            defaultConnectionPoint,\n            defaultAnchor,\n            defaultLinkAnchor,\n            origin,\n            highlighting,\n            cellViewNamespace,\n            interactive\n        } = options;\n\n        // Default cellView namespace for ES5\n        /* eslint-disable no-undef */\n        if (!cellViewNamespace && typeof joint !== 'undefined' && has(joint, 'shapes')) {\n            options.cellViewNamespace = joint.shapes;\n        }\n        /* eslint-enable no-undef */\n\n        // Here if a function was provided, we can not clone it, as this would result in loosing the function.\n        // If the default is used, the cloning is necessary in order to prevent modifying the options on prototype.\n        if (!isFunction(defaultConnector)) {\n            options.defaultConnector = cloneDeep(defaultConnector);\n        }\n        if (!isFunction(defaultRouter)) {\n            options.defaultRouter = cloneDeep(defaultRouter);\n        }\n        if (!isFunction(defaultConnectionPoint)) {\n            options.defaultConnectionPoint = cloneDeep(defaultConnectionPoint);\n        }\n        if (!isFunction(defaultAnchor)) {\n            options.defaultAnchor = cloneDeep(defaultAnchor);\n        }\n        if (!isFunction(defaultLinkAnchor)) {\n            options.defaultLinkAnchor = cloneDeep(defaultLinkAnchor);\n        }\n        if (isPlainObject(interactive)) {\n            options.interactive = assign({}, interactive);\n        }\n        if (isPlainObject(highlighting)) {\n            // Return the default highlighting options into the user specified options.\n            options.highlighting = defaultsDeep({}, highlighting, defaultHighlighting);\n        }\n        options.origin = assign({}, origin);\n    },\n\n    children: function() {\n        var ns = V.namespace;\n        return [{\n            namespaceURI: ns.xhtml,\n            tagName: 'div',\n            className: addClassNamePrefix('paper-background'),\n            selector: 'background'\n        }, {\n            namespaceURI: ns.xhtml,\n            tagName: 'div',\n            className: addClassNamePrefix('paper-grid'),\n            selector: 'grid'\n        }, {\n            namespaceURI: ns.svg,\n            tagName: 'svg',\n            attributes: {\n                'width': '100%',\n                'height': '100%',\n                'xmlns:xlink': ns.xlink\n            },\n            selector: 'svg',\n            children: [{\n                // Append `<defs>` element to the SVG document. This is useful for filters and gradients.\n                // It's desired to have the defs defined before the viewport (e.g. to make a PDF document pick up defs properly).\n                tagName: 'defs',\n                selector: 'defs'\n            }, {\n                tagName: 'g',\n                className: addClassNamePrefix('layers'),\n                selector: 'layers'\n            }]\n        }];\n    },\n\n    hasLayerView(layerName) {\n        return  (layerName in this._layers);\n    },\n\n    getLayerView(layerName) {\n        const { _layers } = this;\n        if (layerName in _layers) return _layers[layerName];\n        throw new Error(`dia.Paper: Unknown layer \"${layerName}\"`);\n    },\n\n    getLayerNode(layerName) {\n        return this.getLayerView(layerName).el;\n    },\n\n    render: function() {\n\n        this.renderChildren();\n        const { childNodes, options } = this;\n        const { svg, defs, layers, background, grid } = childNodes;\n\n        this.svg = svg;\n        this.defs = defs;\n        this.layers = layers;\n        this.$background = $(background);\n        this.$grid = $(grid);\n\n        this.renderLayers();\n\n        V.ensureId(svg);\n\n        if (options.background) {\n            this.drawBackground(options.background);\n        }\n\n        if (options.drawGrid) {\n            this.drawGrid();\n        }\n\n        return this;\n    },\n\n    renderLayers: function(layers = defaultLayers) {\n        this.removeLayers();\n        // TODO: Layers to be read from the graph `layers` attribute\n        layers.forEach(({ name, sorted }) => {\n            const layerView = new PaperLayer({ name });\n            this.layers.appendChild(layerView.el);\n            this._layers[name] = layerView;\n        });\n        // Throws an exception if doesn't exist\n        const cellsLayerView = this.getLayerView(LayersNames.CELLS);\n        const toolsLayerView = this.getLayerView(LayersNames.TOOLS);\n        const labelsLayerView = this.getLayerView(LayersNames.LABELS);\n        // backwards compatibility\n        this.tools = toolsLayerView.el;\n        this.cells = this.viewport = cellsLayerView.el;\n        // user-select: none;\n        cellsLayerView.vel.addClass(addClassNamePrefix('viewport'));\n        labelsLayerView.vel.addClass(addClassNamePrefix('viewport'));\n    },\n\n    removeLayers: function() {\n        const { _layers } = this;\n        Object.keys(_layers, name => {\n            _layers[name].remove();\n            delete _layers[name];\n        });\n    },\n\n    resetLayers: function() {\n        const { _layers } = this;\n        Object.keys(_layers, name => {\n            _layers[name].removePivots();\n        });\n    },\n\n    update: function() {\n\n        if (this.options.drawGrid) {\n            this.drawGrid();\n        }\n\n        if (this._background) {\n            this.updateBackgroundImage(this._background);\n        }\n\n        return this;\n    },\n\n    matrix: function(ctm) {\n\n        var viewport = this.layers;\n\n        // Getter:\n        if (ctm === undefined) {\n\n            var transformString = viewport.getAttribute('transform');\n\n            if ((this._viewportTransformString || null) === transformString) {\n                // It's ok to return the cached matrix. The transform attribute has not changed since\n                // the matrix was stored.\n                ctm = this._viewportMatrix;\n            } else {\n                // The viewport transform attribute has changed. Measure the matrix and cache again.\n                ctm = viewport.getCTM();\n                this._viewportMatrix = ctm;\n                this._viewportTransformString = transformString;\n            }\n\n            // Clone the cached current transformation matrix.\n            // If no matrix previously stored the identity matrix is returned.\n            return V.createSVGMatrix(ctm);\n        }\n\n        // Setter:\n        ctm = V.createSVGMatrix(ctm);\n        var ctmString = V.matrixToTransformString(ctm);\n        viewport.setAttribute('transform', ctmString);\n\n        this._viewportMatrix = ctm;\n        this._viewportTransformString = viewport.getAttribute('transform');\n\n        return this;\n    },\n\n    clientMatrix: function() {\n\n        return V.createSVGMatrix(this.cells.getScreenCTM());\n    },\n\n    requestConnectedLinksUpdate: function(view, priority, opt) {\n        if (view instanceof CellView) {\n            var model = view.model;\n            var links = this.model.getConnectedLinks(model);\n            for (var j = 0, n = links.length; j < n; j++) {\n                var link = links[j];\n                var linkView = this.findViewByModel(link);\n                if (!linkView) continue;\n                var flagLabels = ['UPDATE'];\n                if (link.getTargetCell() === model) flagLabels.push('TARGET');\n                if (link.getSourceCell() === model) flagLabels.push('SOURCE');\n                var nextPriority = Math.max(priority + 1, linkView.UPDATE_PRIORITY);\n                this.scheduleViewUpdate(linkView, linkView.getFlag(flagLabels), nextPriority, opt);\n            }\n        }\n    },\n\n    forcePostponedViewUpdate: function(view, flag) {\n        if (!view || !(view instanceof CellView)) return false;\n        var model = view.model;\n        if (model.isElement()) return false;\n        if ((flag & view.getFlag(['SOURCE', 'TARGET'])) === 0) {\n            // LinkView is waiting for the target or the source cellView to be rendered\n            // This can happen when the cells are not in the viewport.\n            var sourceFlag = 0;\n            var sourceView = this.findViewByModel(model.getSourceCell());\n            if (sourceView && !this.isViewMounted(sourceView)) {\n                sourceFlag = this.dumpView(sourceView);\n                view.updateEndMagnet('source');\n            }\n            var targetFlag = 0;\n            var targetView = this.findViewByModel(model.getTargetCell());\n            if (targetView && !this.isViewMounted(targetView)) {\n                targetFlag = this.dumpView(targetView);\n                view.updateEndMagnet('target');\n            }\n            if (sourceFlag === 0 && targetFlag === 0) {\n                // If leftover flag is 0, all view updates were done.\n                return !this.dumpView(view);\n            }\n        }\n        return false;\n    },\n\n    requestViewUpdate: function(view, flag, priority, opt) {\n        opt || (opt = {});\n        this.scheduleViewUpdate(view, flag, priority, opt);\n        var isAsync = this.isAsync();\n        if (this.isFrozen() || (isAsync && opt.async !== false)) return;\n        if (this.model.hasActiveBatch(this.UPDATE_DELAYING_BATCHES)) return;\n        var stats = this.updateViews(opt);\n        if (isAsync) this.notifyAfterRender(stats, opt);\n    },\n\n    scheduleViewUpdate: function(view, type, priority, opt) {\n        const { _updates: updates, options } = this;\n        const { FLAG_REMOVE, FLAG_INSERT, UPDATE_PRIORITY, cid } = view;\n        let priorityUpdates = updates.priorities[priority];\n        if (!priorityUpdates) priorityUpdates = updates.priorities[priority] = {};\n        // Move higher priority updates to this priority\n        if (priority > UPDATE_PRIORITY) {\n            // Not the default priority for this view. It's most likely a link view\n            // connected to another link view, which triggered the update.\n            // TODO: If there is an update scheduled with a lower priority already, we should\n            // change the requested priority to the lowest one. Does not seem to be critical\n            // right now, as it \"only\" results in multiple updates on the same view.\n            for (let i = priority - 1; i >= UPDATE_PRIORITY; i--) {\n                const prevPriorityUpdates = updates.priorities[i];\n                if (!prevPriorityUpdates || !(cid in prevPriorityUpdates)) continue;\n                priorityUpdates[cid] |= prevPriorityUpdates[cid];\n                delete prevPriorityUpdates[cid];\n            }\n        }\n        let currentType = priorityUpdates[cid] || 0;\n        // Prevent cycling\n        if ((currentType & type) === type) return;\n        if (!currentType) updates.count++;\n        if (type & FLAG_REMOVE && currentType & FLAG_INSERT) {\n            // When a view is removed we need to remove the insert flag as this is a reinsert\n            priorityUpdates[cid] ^= FLAG_INSERT;\n        } else if (type & FLAG_INSERT && currentType & FLAG_REMOVE) {\n            // When a view is added we need to remove the remove flag as this is view was previously removed\n            priorityUpdates[cid] ^= FLAG_REMOVE;\n        }\n        priorityUpdates[cid] |= type;\n        const viewUpdateFn = options.onViewUpdate;\n        if (typeof viewUpdateFn === 'function') viewUpdateFn.call(this, view, type, priority, opt || {}, this);\n    },\n\n    dumpViewUpdate: function(view) {\n        if (!view) return 0;\n        var updates = this._updates;\n        var cid = view.cid;\n        var priorityUpdates = updates.priorities[view.UPDATE_PRIORITY];\n        var flag = this.registerMountedView(view) | priorityUpdates[cid];\n        delete priorityUpdates[cid];\n        return flag;\n    },\n\n    dumpView: function(view, opt) {\n        var flag = this.dumpViewUpdate(view);\n        if (!flag) return 0;\n        return this.updateView(view, flag, opt);\n    },\n\n    updateView: function(view, flag, opt) {\n        if (!view) return 0;\n        const { FLAG_REMOVE, FLAG_INSERT, model } = view;\n        if (view instanceof CellView) {\n            if (flag & FLAG_REMOVE) {\n                this.removeView(model);\n                return 0;\n            }\n            if (flag & FLAG_INSERT) {\n                this.insertView(view);\n                flag ^= FLAG_INSERT;\n            }\n        }\n        if (!flag) return 0;\n        return view.confirmUpdate(flag, opt || {});\n    },\n\n    requireView: function(model, opt) {\n        var view = this.findViewByModel(model);\n        if (!view) return null;\n        this.dumpView(view, opt);\n        return view;\n    },\n\n    registerUnmountedView: function(view) {\n        var cid = view.cid;\n        var updates = this._updates;\n        if (cid in updates.unmounted) return 0;\n        var flag = updates.unmounted[cid] |= view.FLAG_INSERT;\n        updates.unmountedCids.push(cid);\n        delete updates.mounted[cid];\n        return flag;\n    },\n\n    registerMountedView: function(view) {\n        var cid = view.cid;\n        var updates = this._updates;\n        if (cid in updates.mounted) return 0;\n        updates.mounted[cid] = true;\n        updates.mountedCids.push(cid);\n        var flag = updates.unmounted[cid] || 0;\n        delete updates.unmounted[cid];\n        return flag;\n    },\n\n    isViewMounted: function(view) {\n        if (!view) return false;\n        var cid = view.cid;\n        var updates = this._updates;\n        return (cid in updates.mounted);\n    },\n\n    dumpViews: function(opt) {\n        var passingOpt = defaults({}, opt, { viewport: null });\n        this.checkViewport(passingOpt);\n        this.updateViews(passingOpt);\n    },\n\n    // Synchronous views update\n    updateViews: function(opt) {\n        this.notifyBeforeRender(opt);\n        let batchStats;\n        let updateCount = 0;\n        let batchCount = 0;\n        let priority = MIN_PRIORITY;\n        do {\n            batchCount++;\n            batchStats = this.updateViewsBatch(opt);\n            updateCount += batchStats.updated;\n            priority = Math.min(batchStats.priority, priority);\n        } while (!batchStats.empty);\n        const stats = { updated: updateCount, batches: batchCount, priority };\n        this.notifyAfterRender(stats, opt);\n        return stats;\n    },\n\n    hasScheduledUpdates: function() {\n        const priorities = this._updates.priorities;\n        const priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n        let i = priorityIndexes.length;\n        while (i > 0 && i--) {\n            // a faster way how to check if an object is empty\n            for (let _key in priorities[priorityIndexes[i]]) return true;\n        }\n        return false;\n    },\n\n    updateViewsAsync: function(opt, data) {\n        opt || (opt = {});\n        data || (data = { processed: 0, priority: MIN_PRIORITY });\n        var updates = this._updates;\n        var id = updates.id;\n        if (id) {\n            cancelFrame(id);\n            if (data.processed === 0 && this.hasScheduledUpdates()) {\n                this.notifyBeforeRender(opt);\n            }\n            var stats = this.updateViewsBatch(opt);\n            var passingOpt = defaults({}, opt, {\n                mountBatchSize: MOUNT_BATCH_SIZE - stats.mounted,\n                unmountBatchSize: MOUNT_BATCH_SIZE - stats.unmounted\n            });\n            var checkStats = this.checkViewport(passingOpt);\n            var unmountCount = checkStats.unmounted;\n            var mountCount = checkStats.mounted;\n            var processed = data.processed;\n            var total = updates.count;\n            if (stats.updated > 0) {\n                // Some updates have been just processed\n                processed += stats.updated + stats.unmounted;\n                stats.processed = processed;\n                data.priority = Math.min(stats.priority, data.priority);\n                if (stats.empty && mountCount === 0) {\n                    stats.unmounted += unmountCount;\n                    stats.mounted += mountCount;\n                    stats.priority = data.priority;\n                    this.notifyAfterRender(stats, opt);\n                    data.processed = 0;\n                    data.priority = MIN_PRIORITY;\n                    updates.count = 0;\n                } else {\n                    data.processed = processed;\n                }\n            }\n            // Progress callback\n            var progressFn = opt.progress;\n            if (total && typeof progressFn === 'function') {\n                progressFn.call(this, stats.empty, processed, total, stats, this);\n            }\n            // The current frame could have been canceled in a callback\n            if (updates.id !== id) return;\n        }\n        updates.id = nextFrame(this.updateViewsAsync, this, opt, data);\n    },\n\n    notifyBeforeRender: function(opt = {}) {\n        let beforeFn = opt.beforeRender;\n        if (typeof beforeFn !== 'function') {\n            beforeFn = this.options.beforeRender;\n            if (typeof beforeFn !== 'function') return;\n        }\n        beforeFn.call(this, opt, this);\n    },\n\n    notifyAfterRender: function(stats, opt = {}) {\n        let afterFn = opt.afterRender;\n        if (typeof afterFn !== 'function') {\n            afterFn = this.options.afterRender;\n        }\n        if (typeof afterFn === 'function') {\n            afterFn.call(this, stats, opt, this);\n        }\n        this.trigger('render:done', stats, opt);\n    },\n\n    updateViewsBatch: function(opt) {\n        opt || (opt = {});\n        var batchSize = opt.batchSize || UPDATE_BATCH_SIZE;\n        var updates = this._updates;\n        var updateCount = 0;\n        var postponeCount = 0;\n        var unmountCount = 0;\n        var mountCount = 0;\n        var maxPriority = MIN_PRIORITY;\n        var empty = true;\n        var options = this.options;\n        var priorities = updates.priorities;\n        var viewportFn = 'viewport' in opt ? opt.viewport : options.viewport;\n        if (typeof viewportFn !== 'function') viewportFn = null;\n        var postponeViewFn = options.onViewPostponed;\n        if (typeof postponeViewFn !== 'function') postponeViewFn = null;\n        var priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n        main: for (var i = 0, n = priorityIndexes.length; i < n; i++) {\n            var priority = +priorityIndexes[i];\n            var priorityUpdates = priorities[priority];\n            for (var cid in priorityUpdates) {\n                if (updateCount >= batchSize) {\n                    empty = false;\n                    break main;\n                }\n                var view = views[cid];\n                if (!view) {\n                    // This should not occur\n                    delete priorityUpdates[cid];\n                    continue;\n                }\n                var currentFlag = priorityUpdates[cid];\n                if ((currentFlag & view.FLAG_REMOVE) === 0) {\n                    // We should never check a view for viewport if we are about to remove the view\n                    var isDetached = cid in updates.unmounted;\n                    if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, !isDetached, this)) {\n                        // Unmount View\n                        if (!isDetached) {\n                            this.registerUnmountedView(view);\n                            view.unmount();\n                        }\n                        updates.unmounted[cid] |= currentFlag;\n                        delete priorityUpdates[cid];\n                        unmountCount++;\n                        continue;\n                    }\n                    // Mount View\n                    if (isDetached) {\n                        currentFlag |= view.FLAG_INSERT;\n                        mountCount++;\n                    }\n                    currentFlag |= this.registerMountedView(view);\n                }\n                var leftoverFlag = this.updateView(view, currentFlag, opt);\n                if (leftoverFlag > 0) {\n                    // View update has not finished completely\n                    priorityUpdates[cid] = leftoverFlag;\n                    if (!postponeViewFn || !postponeViewFn.call(this, view, leftoverFlag, this) || priorityUpdates[cid]) {\n                        postponeCount++;\n                        empty = false;\n                        continue;\n                    }\n                }\n                if (maxPriority > priority) maxPriority = priority;\n                updateCount++;\n                delete priorityUpdates[cid];\n            }\n        }\n        return {\n            priority: maxPriority,\n            updated: updateCount,\n            postponed: postponeCount,\n            unmounted: unmountCount,\n            mounted: mountCount,\n            empty: empty\n        };\n    },\n\n    getUnmountedViews: function() {\n        const updates = this._updates;\n        const unmountedCids = Object.keys(updates.unmounted);\n        const n = unmountedCids.length;\n        const unmountedViews = new Array(n);\n        for (var i = 0; i < n; i++) {\n            unmountedViews[i] = views[unmountedCids[i]];\n        }\n        return unmountedViews;\n    },\n\n    getMountedViews: function() {\n        const updates = this._updates;\n        const mountedCids = Object.keys(updates.mounted);\n        const n = mountedCids.length;\n        const mountedViews = new Array(n);\n        for (var i = 0; i < n; i++) {\n            mountedViews[i] = views[mountedCids[i]];\n        }\n        return mountedViews;\n    },\n\n    checkUnmountedViews: function(viewportFn, opt) {\n        opt || (opt  = {});\n        var mountCount = 0;\n        if (typeof viewportFn !== 'function') viewportFn = null;\n        var batchSize = 'mountBatchSize' in opt ? opt.mountBatchSize : Infinity;\n        var updates = this._updates;\n        var unmountedCids = updates.unmountedCids;\n        var unmounted = updates.unmounted;\n        for (var i = 0, n = Math.min(unmountedCids.length, batchSize); i < n; i++) {\n            var cid = unmountedCids[i];\n            if (!(cid in unmounted)) continue;\n            var view = views[cid];\n            if (!view) continue;\n            if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, false, this)) {\n                // Push at the end of all unmounted ids, so this can be check later again\n                unmountedCids.push(cid);\n                continue;\n            }\n            mountCount++;\n            var flag = this.registerMountedView(view);\n            if (flag) this.scheduleViewUpdate(view, flag, view.UPDATE_PRIORITY, { mounting: true });\n        }\n        // Get rid of views, that have been mounted\n        unmountedCids.splice(0, i);\n        return mountCount;\n    },\n\n    checkMountedViews: function(viewportFn, opt) {\n        opt || (opt = {});\n        var unmountCount = 0;\n        if (typeof viewportFn !== 'function') return unmountCount;\n        var batchSize = 'unmountBatchSize' in opt ? opt.unmountBatchSize : Infinity;\n        var updates = this._updates;\n        var mountedCids = updates.mountedCids;\n        var mounted = updates.mounted;\n        for (var i = 0, n = Math.min(mountedCids.length, batchSize); i < n; i++) {\n            var cid = mountedCids[i];\n            if (!(cid in mounted)) continue;\n            var view = views[cid];\n            if (!view) continue;\n            if (!view.DETACHABLE || viewportFn.call(this, view, true, this)) {\n                // Push at the end of all mounted ids, so this can be check later again\n                mountedCids.push(cid);\n                continue;\n            }\n            unmountCount++;\n            var flag = this.registerUnmountedView(view);\n            if (flag) view.unmount();\n        }\n        // Get rid of views, that have been unmounted\n        mountedCids.splice(0, i);\n        return unmountCount;\n    },\n\n    checkViewport: function(opt) {\n        var passingOpt = defaults({}, opt, {\n            mountBatchSize: Infinity,\n            unmountBatchSize: Infinity\n        });\n        var viewportFn = 'viewport' in passingOpt ? passingOpt.viewport : this.options.viewport;\n        var unmountedCount = this.checkMountedViews(viewportFn, passingOpt);\n        if (unmountedCount > 0) {\n            // Do not check views, that have been just unmounted and pushed at the end of the cids array\n            var unmountedCids = this._updates.unmountedCids;\n            passingOpt.mountBatchSize = Math.min(unmountedCids.length - unmountedCount, passingOpt.mountBatchSize);\n        }\n        var mountedCount = this.checkUnmountedViews(viewportFn, passingOpt);\n        return {\n            mounted: mountedCount,\n            unmounted: unmountedCount\n        };\n    },\n\n    freeze: function(opt) {\n        opt || (opt = {});\n        var updates = this._updates;\n        var key = opt.key;\n        var isFrozen = this.options.frozen;\n        var freezeKey = updates.freezeKey;\n        if (key && key !== freezeKey)  {\n            // key passed, but the paper is already freezed with another key\n            if (isFrozen && freezeKey) return;\n            updates.freezeKey = key;\n            updates.keyFrozen = isFrozen;\n        }\n        this.options.frozen = true;\n        var id = updates.id;\n        updates.id = null;\n        if (this.isAsync() && id) cancelFrame(id);\n    },\n\n    unfreeze: function(opt) {\n        opt || (opt = {});\n        var updates = this._updates;\n        var key = opt.key;\n        var freezeKey = updates.freezeKey;\n        // key passed, but the paper is already freezed with another key\n        if (key && freezeKey && key !== freezeKey) return;\n        updates.freezeKey = null;\n        // key passed, but the paper is already freezed\n        if (key && key === freezeKey && updates.keyFrozen) return;\n        if (this.isAsync()) {\n            this.freeze();\n            this.updateViewsAsync(opt);\n        } else {\n            this.updateViews(opt);\n        }\n        this.options.frozen = updates.keyFrozen = false;\n        if (updates.sort) {\n            this.sortViews();\n            updates.sort = false;\n        }\n    },\n\n    isAsync: function() {\n        return !!this.options.async;\n    },\n\n    isFrozen: function() {\n        return !!this.options.frozen;\n    },\n\n    isExactSorting: function() {\n        return this.options.sorting === sortingTypes.EXACT;\n    },\n\n    onRemove: function() {\n\n        this.freeze();\n        //clean up all DOM elements/views to prevent memory leaks\n        this.removeLayers();\n        this.removeViews();\n    },\n\n    getComputedSize: function() {\n\n        var options = this.options;\n        var w = options.width;\n        var h = options.height;\n        if (!isNumber(w)) w = this.el.clientWidth;\n        if (!isNumber(h)) h = this.el.clientHeight;\n        return { width: w, height: h };\n    },\n\n    setDimensions: function(width, height) {\n        const { options } = this;\n        const { width: currentWidth, height: currentHeight } = options;\n        let w = (width === undefined) ? currentWidth : width;\n        let h = (height === undefined) ? currentHeight : height;\n        if (currentWidth === w && currentHeight === h) return;\n        options.width = w;\n        options.height = h;\n        this._setDimensions();\n        const computedSize = this.getComputedSize();\n        this.trigger('resize', computedSize.width, computedSize.height);\n    },\n\n    _setDimensions: function() {\n        const { options } = this;\n        let w = options.width;\n        let h = options.height;\n        if (isNumber(w)) w = Math.round(w);\n        if (isNumber(h)) h = Math.round(h);\n        this.$el.css({\n            width: (w === null) ? '' : w,\n            height: (h === null) ? '' : h\n        });\n    },\n\n    setOrigin: function(ox, oy) {\n        return this.translate(ox || 0, oy || 0);\n    },\n\n    // Expand/shrink the paper to fit the content.\n    // Alternatively signature function(opt)\n    fitToContent: function(gridWidth, gridHeight, padding, opt) {\n\n        if (isObject(gridWidth)) {\n            // first parameter is an option object\n            opt = gridWidth;\n        } else {\n            // Support for a deprecated signature\n            opt = assign({ gridWidth, gridHeight, padding }, opt);\n        }\n\n        const { x, y, width, height } = this.getFitToContentArea(opt);\n        const { sx, sy } = this.scale();\n\n        this.setOrigin(-x * sx, -y * sy);\n        this.setDimensions(width * sx, height * sy);\n\n        return new Rect(x, y, width, height);\n    },\n\n    getFitToContentArea: function(opt = {}) {\n\n        // Calculate the paper size to accommodate all the graph's elements.\n\n        const gridWidth = opt.gridWidth || 1;\n        const gridHeight = opt.gridHeight || 1;\n        const padding = normalizeSides(opt.padding || 0);\n\n        const minWidth = Math.max(opt.minWidth || 0, gridWidth);\n        const minHeight = Math.max(opt.minHeight || 0, gridHeight);\n        const maxWidth = opt.maxWidth || Number.MAX_VALUE;\n        const maxHeight = opt.maxHeight || Number.MAX_VALUE;\n        const newOrigin = opt.allowNewOrigin;\n\n        const area = ('contentArea' in opt) ? new Rect(opt.contentArea) : this.getContentArea(opt);\n        const { sx, sy } = this.scale();\n        area.x *= sx;\n        area.y *= sy;\n        area.width *= sx;\n        area.height *= sy;\n\n        let calcWidth = Math.ceil((area.width + area.x) / gridWidth);\n        let calcHeight = Math.ceil((area.height + area.y) / gridHeight);\n        if (!opt.allowNegativeBottomRight) {\n            calcWidth = Math.max(calcWidth, 1);\n            calcHeight = Math.max(calcHeight, 1);\n        }\n        calcWidth *= gridWidth;\n        calcHeight *= gridHeight;\n\n        let tx = 0;\n        if ((newOrigin === 'negative' && area.x < 0) || (newOrigin === 'positive' && area.x >= 0) || newOrigin === 'any') {\n            tx = Math.ceil(-area.x / gridWidth) * gridWidth;\n            tx += padding.left;\n            calcWidth += tx;\n        }\n\n        let ty = 0;\n        if ((newOrigin === 'negative' && area.y < 0) || (newOrigin === 'positive' && area.y >= 0) || newOrigin === 'any') {\n            ty = Math.ceil(-area.y / gridHeight) * gridHeight;\n            ty += padding.top;\n            calcHeight += ty;\n        }\n\n        calcWidth += padding.right;\n        calcHeight += padding.bottom;\n\n        // Make sure the resulting width and height are greater than minimum.\n        calcWidth = Math.max(calcWidth, minWidth);\n        calcHeight = Math.max(calcHeight, minHeight);\n\n        // Make sure the resulting width and height are lesser than maximum.\n        calcWidth = Math.min(calcWidth, maxWidth);\n        calcHeight = Math.min(calcHeight, maxHeight);\n\n        return new Rect(-tx / sx, -ty / sy, calcWidth / sx, calcHeight / sy);\n    },\n\n    scaleContentToFit: function(opt) {\n\n        opt || (opt = {});\n\n        var contentBBox, contentLocalOrigin;\n        if ('contentArea' in opt) {\n            var contentArea = opt.contentArea;\n            contentBBox = this.localToPaperRect(contentArea);\n            contentLocalOrigin = new Point(contentArea);\n        } else {\n            contentBBox = this.getContentBBox(opt);\n            contentLocalOrigin = this.paperToLocalPoint(contentBBox);\n        }\n\n        if (!contentBBox.width || !contentBBox.height) return;\n\n        defaults(opt, {\n            padding: 0,\n            preserveAspectRatio: true,\n            scaleGrid: null,\n            minScale: 0,\n            maxScale: Number.MAX_VALUE\n            //minScaleX\n            //minScaleY\n            //maxScaleX\n            //maxScaleY\n            //fittingBBox\n        });\n\n        var padding = normalizeSides(opt.padding);\n\n        var minScaleX = opt.minScaleX || opt.minScale;\n        var maxScaleX = opt.maxScaleX || opt.maxScale;\n        var minScaleY = opt.minScaleY || opt.minScale;\n        var maxScaleY = opt.maxScaleY || opt.maxScale;\n\n        var fittingBBox;\n        if (opt.fittingBBox) {\n            fittingBBox = opt.fittingBBox;\n        } else {\n            var currentTranslate = this.translate();\n            var computedSize = this.getComputedSize();\n            fittingBBox = {\n                x: currentTranslate.tx,\n                y: currentTranslate.ty,\n                width: computedSize.width,\n                height: computedSize.height\n            };\n        }\n\n        fittingBBox = new Rect(fittingBBox).moveAndExpand({\n            x: padding.left,\n            y: padding.top,\n            width: -padding.left - padding.right,\n            height: -padding.top - padding.bottom\n        });\n\n        var currentScale = this.scale();\n\n        var newSx = fittingBBox.width / contentBBox.width * currentScale.sx;\n        var newSy = fittingBBox.height / contentBBox.height * currentScale.sy;\n\n        if (opt.preserveAspectRatio) {\n            newSx = newSy = Math.min(newSx, newSy);\n        }\n\n        // snap scale to a grid\n        if (opt.scaleGrid) {\n\n            var gridSize = opt.scaleGrid;\n\n            newSx = gridSize * Math.floor(newSx / gridSize);\n            newSy = gridSize * Math.floor(newSy / gridSize);\n        }\n\n        // scale min/max boundaries\n        newSx = Math.min(maxScaleX, Math.max(minScaleX, newSx));\n        newSy = Math.min(maxScaleY, Math.max(minScaleY, newSy));\n\n        var origin = this.options.origin;\n        var newOx = fittingBBox.x - contentLocalOrigin.x * newSx - origin.x;\n        var newOy = fittingBBox.y - contentLocalOrigin.y * newSy - origin.y;\n\n        this.scale(newSx, newSy);\n        this.translate(newOx, newOy);\n    },\n\n    // Return the dimensions of the content area in local units (without transformations).\n    getContentArea: function(opt) {\n\n        if (opt && opt.useModelGeometry) {\n            return this.model.getBBox() || new Rect();\n        }\n\n        return V(this.cells).getBBox();\n    },\n\n    // Return the dimensions of the content bbox in the paper units (as it appears on screen).\n    getContentBBox: function(opt) {\n\n        return this.localToPaperRect(this.getContentArea(opt));\n    },\n\n    // Returns a geometry rectangle representing the entire\n    // paper area (coordinates from the left paper border to the right one\n    // and the top border to the bottom one).\n    getArea: function() {\n\n        return this.paperToLocalRect(this.getComputedSize());\n    },\n\n    getRestrictedArea: function(...args) {\n\n        const { restrictTranslate } = this.options;\n\n        let restrictedArea;\n        if (isFunction(restrictTranslate)) {\n            // A method returning a bounding box\n            restrictedArea = restrictTranslate.apply(this, args);\n        } else if (restrictTranslate === true) {\n            // The paper area\n            restrictedArea = this.getArea();\n        } else if (!restrictTranslate) {\n            // falsy value\n            restrictedArea = null;\n        } else {\n            // any other value\n            restrictedArea = new Rect(restrictTranslate);\n        }\n\n        return restrictedArea;\n    },\n\n    createViewForModel: function(cell) {\n\n        const { options } = this;\n        // A class taken from the paper options.\n        var optionalViewClass;\n\n        // A default basic class (either dia.ElementView or dia.LinkView)\n        var defaultViewClass;\n\n        // A special class defined for this model in the corresponding namespace.\n        // e.g. joint.shapes.basic.Rect searches for joint.shapes.basic.RectView\n        var namespace = options.cellViewNamespace;\n        var type = cell.get('type') + 'View';\n        var namespaceViewClass = getByPath(namespace, type, '.');\n\n        if (cell.isLink()) {\n            optionalViewClass = options.linkView;\n            defaultViewClass = LinkView;\n        } else {\n            optionalViewClass = options.elementView;\n            defaultViewClass = ElementView;\n        }\n\n        // a) the paper options view is a class (deprecated)\n        //  1. search the namespace for a view\n        //  2. if no view was found, use view from the paper options\n        // b) the paper options view is a function\n        //  1. call the function from the paper options\n        //  2. if no view was return, search the namespace for a view\n        //  3. if no view was found, use the default\n        var ViewClass = (optionalViewClass.prototype instanceof Backbone.View)\n            ? namespaceViewClass || optionalViewClass\n            : optionalViewClass.call(this, cell) || namespaceViewClass || defaultViewClass;\n\n        return new ViewClass({\n            model: cell,\n            interactive: options.interactive,\n            labelsLayer: options.labelsLayer === true ? LayersNames.LABELS : options.labelsLayer\n        });\n    },\n\n    removeView: function(cell) {\n\n        const { id } = cell;\n        const { _views, _updates } = this;\n        const view = _views[id];\n        if (view) {\n            var { cid } = view;\n            const { mounted, unmounted } = _updates;\n            view.remove();\n            delete _views[id];\n            delete mounted[cid];\n            delete unmounted[cid];\n        }\n        return view;\n    },\n\n    renderView: function(cell, opt) {\n\n        const { id } = cell;\n        const views = this._views;\n        let view, flag;\n        let create = true;\n        if (id in views) {\n            view = views[id];\n            if (view.model === cell) {\n                flag = view.FLAG_INSERT;\n                create = false;\n            } else {\n                // The view for this `id` already exist.\n                // The cell is a new instance of the model with identical id\n                // We simply remove the existing view and create a new one\n                this.removeView(cell);\n            }\n        }\n        if (create) {\n            view = views[id] = this.createViewForModel(cell);\n            view.paper = this;\n            flag = this.registerUnmountedView(view) | view.getFlag(result(view, 'initFlag'));\n        }\n        this.requestViewUpdate(view, flag, view.UPDATE_PRIORITY, opt);\n        return view;\n    },\n\n    onImageDragStart: function() {\n        // This is the only way to prevent image dragging in Firefox that works.\n        // Setting -moz-user-select: none, draggable=\"false\" attribute or user-drag: none didn't help.\n\n        return false;\n    },\n\n    resetViews: function(cells, opt) {\n        opt || (opt = {});\n        cells || (cells = []);\n        this._resetUpdates();\n        // clearing views removes any event listeners\n        this.removeViews();\n        this.freeze({ key: 'reset' });\n        for (var i = 0, n = cells.length; i < n; i++) {\n            this.renderView(cells[i], opt);\n        }\n        this.unfreeze({ key: 'reset' });\n        this.sortViews();\n    },\n\n    removeViews: function() {\n\n        invoke(this._views, 'remove');\n\n        this._views = {};\n    },\n\n    sortViews: function() {\n\n        if (!this.isExactSorting()) {\n            // noop\n            return;\n        }\n        if (this.isFrozen()) {\n            // sort views once unfrozen\n            this._updates.sort = true;\n            return;\n        }\n        this.sortViewsExact();\n    },\n\n    sortViewsExact: function() {\n\n        // Run insertion sort algorithm in order to efficiently sort DOM elements according to their\n        // associated model `z` attribute.\n\n        var $cells = $(this.cells).children('[model-id]');\n        var cells = this.model.get('cells');\n\n        sortElements($cells, function(a, b) {\n            var cellA = cells.get(a.getAttribute('model-id'));\n            var cellB = cells.get(b.getAttribute('model-id'));\n            var zA = cellA.attributes.z || 0;\n            var zB = cellB.attributes.z || 0;\n            return (zA === zB) ? 0 : (zA < zB) ? -1 : 1;\n        });\n    },\n\n    insertView: function(view) {\n        const layerView = this.getLayerView(LayersNames.CELLS);\n        const { el, model } = view;\n        switch (this.options.sorting) {\n            case sortingTypes.APPROX:\n                layerView.insertSortedNode(el, model.get('z'));\n                break;\n            case sortingTypes.EXACT:\n            default:\n                layerView.insertNode(el);\n                break;\n        }\n        view.onMount();\n    },\n\n    scale: function(sx, sy, ox, oy) {\n\n        // getter\n        if (sx === undefined) {\n            return V.matrixToScale(this.matrix());\n        }\n\n        // setter\n        if (sy === undefined) {\n            sy = sx;\n        }\n        if (ox === undefined) {\n            ox = 0;\n            oy = 0;\n        }\n\n        var translate = this.translate();\n\n        if (ox || oy || translate.tx || translate.ty) {\n            var newTx = translate.tx - ox * (sx - 1);\n            var newTy = translate.ty - oy * (sy - 1);\n            this.translate(newTx, newTy);\n        }\n\n        sx = Math.max(sx || 0, this.MIN_SCALE);\n        sy = Math.max(sy || 0, this.MIN_SCALE);\n\n        var ctm = this.matrix();\n        ctm.a = sx;\n        ctm.d = sy;\n\n        this.matrix(ctm);\n\n        this.trigger('scale', sx, sy, ox, oy);\n\n        return this;\n    },\n\n    // Experimental - do not use in production.\n    rotate: function(angle, cx, cy) {\n\n        // getter\n        if (angle === undefined) {\n            return V.matrixToRotate(this.matrix());\n        }\n\n        // setter\n\n        // If the origin is not set explicitely, rotate around the center. Note that\n        // we must use the plain bounding box (`this.el.getBBox()` instead of the one that gives us\n        // the real bounding box (`bbox()`) including transformations).\n        if (cx === undefined) {\n            var bbox = this.cells.getBBox();\n            cx = bbox.width / 2;\n            cy = bbox.height / 2;\n        }\n\n        var ctm = this.matrix().translate(cx, cy).rotate(angle).translate(-cx, -cy);\n        this.matrix(ctm);\n\n        return this;\n    },\n\n    translate: function(tx, ty) {\n\n        // getter\n        if (tx === undefined) {\n            return V.matrixToTranslate(this.matrix());\n        }\n\n        const { options } = this;\n        const { origin, drawGrid } = options;\n\n        // setter\n        tx || (tx = 0);\n        ty || (ty = 0);\n\n        const ctm = this.matrix();\n        if (ctm.e === tx && ctm.f === ty) return this;\n        ctm.e = tx;\n        ctm.f = ty;\n\n        this.matrix(ctm);\n\n        const { tx: ox, ty: oy } = this.translate();\n        origin.x = ox;\n        origin.y = oy;\n\n        this.trigger('translate', ox, oy);\n\n        if (drawGrid) {\n            this.drawGrid();\n        }\n\n        return this;\n    },\n\n    // Find the first view climbing up the DOM tree starting at element `el`. Note that `el` can also\n    // be a selector or a jQuery object.\n    findView: function($el) {\n\n        var el = isString($el)\n            ? this.cells.querySelector($el)\n            : $el instanceof $ ? $el[0] : $el;\n\n        var id = this.findAttribute('model-id', el);\n        if (id) return this._views[id];\n\n        return undefined;\n    },\n\n    // Find a view for a model `cell`. `cell` can also be a string or number representing a model `id`.\n    findViewByModel: function(cell) {\n\n        var id = (isString(cell) || isNumber(cell)) ? cell : (cell && cell.id);\n\n        return this._views[id];\n    },\n\n    // Find all views at given point\n    findViewsFromPoint: function(p) {\n\n        p = new Point(p);\n\n        var views = this.model.getElements().map(this.findViewByModel, this);\n\n        return views.filter(function(view) {\n            return view && view.vel.getBBox({ target: this.cells }).containsPoint(p);\n        }, this);\n    },\n\n    // Find all views in given area\n    findViewsInArea: function(rect, opt) {\n\n        opt = defaults(opt || {}, { strict: false });\n        rect = new Rect(rect);\n\n        var views = this.model.getElements().map(this.findViewByModel, this);\n        var method = opt.strict ? 'containsRect' : 'intersect';\n\n        return views.filter(function(view) {\n            return view && rect[method](view.vel.getBBox({ target: this.cells }));\n        }, this);\n    },\n\n    removeTools: function() {\n        this.dispatchToolsEvent('remove');\n        return this;\n    },\n\n    hideTools: function() {\n        this.dispatchToolsEvent('hide');\n        return this;\n    },\n\n    showTools: function() {\n        this.dispatchToolsEvent('show');\n        return this;\n    },\n\n    dispatchToolsEvent: function(event, ...args) {\n        if (typeof event !== 'string') return;\n        this.trigger('tools:event', event, ...args);\n    },\n\n\n    getModelById: function(id) {\n\n        return this.model.getCell(id);\n    },\n\n    snapToGrid: function(x, y) {\n\n        // Convert global coordinates to the local ones of the `viewport`. Otherwise,\n        // improper transformation would be applied when the viewport gets transformed (scaled/rotated).\n        return this.clientToLocalPoint(x, y).snapToGrid(this.options.gridSize);\n    },\n\n    localToPaperPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var localPoint = new Point(x, y);\n        var paperPoint = V.transformPoint(localPoint, this.matrix());\n        return paperPoint;\n    },\n\n    localToPaperRect: function(x, y, width, height) {\n        // allow `x` to be a rectangle and rest arguments undefined\n        var localRect = new Rect(x, y, width, height);\n        var paperRect = V.transformRect(localRect, this.matrix());\n        return paperRect;\n    },\n\n    paperToLocalPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var paperPoint = new Point(x, y);\n        var localPoint = V.transformPoint(paperPoint, this.matrix().inverse());\n        return localPoint;\n    },\n\n    paperToLocalRect: function(x, y, width, height) {\n        // allow `x` to be a rectangle and rest arguments undefined\n        var paperRect = new Rect(x, y, width, height);\n        var localRect = V.transformRect(paperRect, this.matrix().inverse());\n        return localRect;\n    },\n\n    localToClientPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var localPoint = new Point(x, y);\n        var clientPoint = V.transformPoint(localPoint, this.clientMatrix());\n        return clientPoint;\n    },\n\n    localToClientRect: function(x, y, width, height) {\n        // allow `x` to be a point and `y` undefined\n        var localRect = new Rect(x, y, width, height);\n        var clientRect = V.transformRect(localRect, this.clientMatrix());\n        return clientRect;\n    },\n\n    // Transform client coordinates to the paper local coordinates.\n    // Useful when you have a mouse event object and you'd like to get coordinates\n    // inside the paper that correspond to `evt.clientX` and `evt.clientY` point.\n    // Example: var localPoint = paper.clientToLocalPoint({ x: evt.clientX, y: evt.clientY });\n    clientToLocalPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var clientPoint = new Point(x, y);\n        var localPoint = V.transformPoint(clientPoint, this.clientMatrix().inverse());\n        return localPoint;\n    },\n\n    clientToLocalRect: function(x, y, width, height) {\n        // allow `x` to be a point and `y` undefined\n        var clientRect = new Rect(x, y, width, height);\n        var localRect = V.transformRect(clientRect, this.clientMatrix().inverse());\n        return localRect;\n    },\n\n    localToPagePoint: function(x, y) {\n\n        return this.localToPaperPoint(x, y).offset(this.pageOffset());\n    },\n\n    localToPageRect: function(x, y, width, height) {\n\n        return this.localToPaperRect(x, y, width, height).offset(this.pageOffset());\n    },\n\n    pageToLocalPoint: function(x, y) {\n\n        var pagePoint = new Point(x, y);\n        var paperPoint = pagePoint.difference(this.pageOffset());\n        return this.paperToLocalPoint(paperPoint);\n    },\n\n    pageToLocalRect: function(x, y, width, height) {\n\n        var pageOffset = this.pageOffset();\n        var paperRect = new Rect(x, y, width, height);\n        paperRect.x -= pageOffset.x;\n        paperRect.y -= pageOffset.y;\n        return this.paperToLocalRect(paperRect);\n    },\n\n    clientOffset: function() {\n\n        var clientRect = this.svg.getBoundingClientRect();\n        return new Point(clientRect.left, clientRect.top);\n    },\n\n    pageOffset: function() {\n\n        return this.clientOffset().offset(window.scrollX, window.scrollY);\n    },\n\n    linkAllowed: function(linkView) {\n\n        if (!(linkView instanceof LinkView)) {\n            throw new Error('Must provide a linkView.');\n        }\n\n        var link = linkView.model;\n        var paperOptions = this.options;\n        var graph = this.model;\n        var ns = graph.constructor.validations;\n\n        if (!paperOptions.multiLinks) {\n            if (!ns.multiLinks.call(this, graph, link)) return false;\n        }\n\n        if (!paperOptions.linkPinning) {\n            // Link pinning is not allowed and the link is not connected to the target.\n            if (!ns.linkPinning.call(this, graph, link)) return false;\n        }\n\n        if (typeof paperOptions.allowLink === 'function') {\n            if (!paperOptions.allowLink.call(this, linkView, this)) return false;\n        }\n\n        return true;\n    },\n\n    getDefaultLink: function(cellView, magnet) {\n\n        return isFunction(this.options.defaultLink)\n        // default link is a function producing link model\n            ? this.options.defaultLink.call(this, cellView, magnet)\n        // default link is the Backbone model\n            : this.options.defaultLink.clone();\n    },\n\n    // Cell highlighting.\n    // ------------------\n\n    resolveHighlighter: function(opt = {}) {\n\n        let { highlighter: highlighterDef, type } = opt;\n        const { highlighting,highlighterNamespace  } = this.options;\n\n        /*\n            Expecting opt.highlighter to have the following structure:\n            {\n                name: 'highlighter-name',\n                options: {\n                    some: 'value'\n                }\n            }\n        */\n        if (highlighterDef === undefined) {\n\n            // Is highlighting disabled?\n            if (!highlighting) return false;\n            // check for built-in types\n            if (type) {\n                highlighterDef = highlighting[type];\n                // Is a specific type highlight disabled?\n                if (highlighterDef === false) return false;\n            }\n            if (!highlighterDef) {\n                // Type not defined use default highlight\n                highlighterDef = highlighting['default'];\n            }\n        }\n\n        // Do nothing if opt.highlighter is falsy.\n        // This allows the case to not highlight cell(s) in certain cases.\n        // For example, if you want to NOT highlight when embedding elements\n        // or use a custom highlighter.\n        if (!highlighterDef) return false;\n\n        // Allow specifying a highlighter by name.\n        if (isString(highlighterDef)) {\n            highlighterDef = {\n                name: highlighterDef\n            };\n        }\n\n        const name = highlighterDef.name;\n        const highlighter = highlighterNamespace[name];\n\n        // Highlighter validation\n        if (!highlighter) {\n            throw new Error('Unknown highlighter (\"' + name + '\")');\n        }\n        if (typeof highlighter.highlight !== 'function') {\n            throw new Error('Highlighter (\"' + name + '\") is missing required highlight() method');\n        }\n        if (typeof highlighter.unhighlight !== 'function') {\n            throw new Error('Highlighter (\"' + name + '\") is missing required unhighlight() method');\n        }\n\n        return {\n            highlighter,\n            options: highlighterDef.options || {},\n            name\n        };\n    },\n\n    onCellHighlight: function(cellView, magnetEl, opt) {\n        const highlighterDescriptor = this.resolveHighlighter(opt);\n        if (!highlighterDescriptor) return;\n        const { highlighter, options } = highlighterDescriptor;\n        highlighter.highlight(cellView, magnetEl, options);\n    },\n\n    onCellUnhighlight: function(cellView, magnetEl, opt) {\n        const highlighterDescriptor = this.resolveHighlighter(opt);\n        if (!highlighterDescriptor) return;\n        const { highlighter, options } = highlighterDescriptor;\n        highlighter.unhighlight(cellView, magnetEl, options);\n    },\n\n    // Interaction.\n    // ------------\n\n    pointerdblclick: function(evt) {\n\n        evt.preventDefault();\n\n        // magnetpointerdblclick can stop propagation\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n            view.pointerdblclick(evt, localPoint.x, localPoint.y);\n\n        } else {\n            this.trigger('blank:pointerdblclick', evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    pointerclick: function(evt) {\n\n        // magnetpointerclick can stop propagation\n\n        var data = this.eventData(evt);\n        // Trigger event only if mouse has not moved.\n        if (data.mousemoved <= this.options.clickThreshold) {\n\n            evt = normalizeEvent(evt);\n\n            var view = this.findView(evt.target);\n            if (this.guard(evt, view)) return;\n\n            var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n            if (view) {\n                view.pointerclick(evt, localPoint.x, localPoint.y);\n\n            } else {\n                this.trigger('blank:pointerclick', evt, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    contextmenu: function(evt) {\n\n        if (this.options.preventContextMenu) evt.preventDefault();\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n            view.contextmenu(evt, localPoint.x, localPoint.y);\n\n        } else {\n            this.trigger('blank:contextmenu', evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    pointerdown: function(evt) {\n\n        // onmagnet stops propagation when `addLinkFromMagnet` is allowed\n        // onevent can stop propagation\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n\n            evt.preventDefault();\n            view.pointerdown(evt, localPoint.x, localPoint.y);\n\n        } else {\n\n            if (this.options.preventDefaultBlankAction) evt.preventDefault();\n\n            this.trigger('blank:pointerdown', evt, localPoint.x, localPoint.y);\n        }\n\n        this.delegateDragEvents(view, evt.data);\n    },\n\n    pointermove: function(evt) {\n\n        // mouse moved counter\n        var data = this.eventData(evt);\n        data.mousemoved || (data.mousemoved = 0);\n        var mousemoved = ++data.mousemoved;\n\n        if (mousemoved <= this.options.moveThreshold) return;\n\n        evt = normalizeEvent(evt);\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        var view = data.sourceView;\n        if (view) {\n            view.pointermove(evt, localPoint.x, localPoint.y);\n        } else {\n            this.trigger('blank:pointermove', evt, localPoint.x, localPoint.y);\n        }\n\n        this.eventData(evt, data);\n    },\n\n    pointerup: function(evt) {\n\n        this.undelegateDocumentEvents();\n\n        var normalizedEvt = normalizeEvent(evt);\n\n        var localPoint = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n\n        var view = this.eventData(evt).sourceView;\n        if (view) {\n            view.pointerup(normalizedEvt, localPoint.x, localPoint.y);\n        } else {\n            this.trigger('blank:pointerup', normalizedEvt, localPoint.x, localPoint.y);\n        }\n\n        if (!normalizedEvt.isPropagationStopped()) {\n            this.pointerclick($.Event(evt, { type: 'click', data: evt.data }));\n        }\n\n        evt.stopImmediatePropagation();\n        this.delegateEvents();\n    },\n\n    mouseover: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        if (view) {\n            view.mouseover(evt);\n\n        } else {\n            if (this.el === evt.target) return; // prevent border of paper from triggering this\n            this.trigger('blank:mouseover', evt);\n        }\n    },\n\n    mouseout: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        if (view) {\n            view.mouseout(evt);\n\n        } else {\n            if (this.el === evt.target) return; // prevent border of paper from triggering this\n            this.trigger('blank:mouseout', evt);\n        }\n    },\n\n    mouseenter: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        const {\n            target, // The EventTarget the pointing device entered to\n            relatedTarget, // The EventTarget the pointing device exited from\n            currentTarget // The EventTarget on which the event listener was registered\n        } = evt;\n        const view = this.findView(target);\n        if (this.guard(evt, view)) return;\n        const relatedView = this.findView(relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // Mouse left a cell tool\n                return;\n            }\n            view.mouseenter(evt);\n            if (this.el.contains(relatedTarget)) {\n                // The pointer remains inside the paper.\n                return;\n            }\n        }\n        if (relatedView) {\n            return;\n        }\n        // prevent double `mouseenter` event if the `relatedTarget` is outside the paper\n        // (mouseenter method would be fired twice)\n        if (currentTarget === this.el) {\n            // `paper` (more descriptive), not `blank`\n            this.trigger('paper:mouseenter', evt);\n        }\n    },\n\n    mouseleave: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        const {\n            target, // The EventTarget the pointing device exited from\n            relatedTarget, // The EventTarget the pointing device entered to\n            currentTarget // The EventTarget on which the event listener was registered\n        } = evt;\n        const view = this.findView(target);\n        if (this.guard(evt, view)) return;\n        const relatedView = this.findView(relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // Mouse entered a cell tool\n                return;\n            }\n            view.mouseleave(evt);\n            if (this.el.contains(relatedTarget)) {\n                // The pointer has exited a cellView. The pointer is still inside of the paper.\n                return;\n            }\n        }\n        if (relatedView) {\n            // The pointer has entered a new cellView\n            return;\n        }\n        // prevent double `mouseleave` event if the `relatedTarget` is outside the paper\n        // (mouseleave method would be fired twice)\n        if (currentTarget === this.el) {\n            // There is no cellView under the pointer, nor the blank area of the paper\n            this.trigger('paper:mouseleave', evt);\n        }\n    },\n\n    mousewheel: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var originalEvent = evt.originalEvent;\n        var localPoint = this.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n        var delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta));\n\n        if (view) {\n            view.mousewheel(evt, localPoint.x, localPoint.y, delta);\n\n        } else {\n            this.trigger('blank:mousewheel', evt, localPoint.x, localPoint.y, delta);\n        }\n    },\n\n    onevent: function(evt) {\n\n        var eventNode = evt.currentTarget;\n        var eventName = eventNode.getAttribute('event');\n        if (eventName) {\n            var view = this.findView(eventNode);\n            if (view) {\n\n                evt = normalizeEvent(evt);\n                if (this.guard(evt, view)) return;\n\n                var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n                view.onevent(evt, eventName, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    magnetEvent: function(evt, handler) {\n\n        var magnetNode = evt.currentTarget;\n        var magnetValue = magnetNode.getAttribute('magnet');\n        if (magnetValue) {\n            var view = this.findView(magnetNode);\n            if (view) {\n                evt = normalizeEvent(evt);\n                if (this.guard(evt, view)) return;\n                var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n                handler.call(this, view, evt, magnetNode, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    onmagnet: function(evt) {\n\n        this.magnetEvent(evt, function(view, evt, _, x, y) {\n            view.onmagnet(evt, x, y);\n        });\n    },\n\n\n    magnetpointerdblclick: function(evt) {\n\n        this.magnetEvent(evt, function(view, evt, magnet, x, y) {\n            view.magnetpointerdblclick(evt, magnet, x, y);\n        });\n    },\n\n    magnetcontextmenu: function(evt) {\n\n        if (this.options.preventContextMenu) evt.preventDefault();\n        this.magnetEvent(evt, function(view, evt, magnet, x, y) {\n            view.magnetcontextmenu(evt, magnet, x, y);\n        });\n    },\n\n    onlabel: function(evt) {\n\n        var labelNode = evt.currentTarget;\n        var view = this.findView(labelNode);\n        if (view) {\n\n            evt = normalizeEvent(evt);\n            if (this.guard(evt, view)) return;\n\n            var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n            view.onlabel(evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    getPointerArgs(evt) {\n        const normalizedEvt = normalizeEvent(evt);\n        const { x, y } = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n        return [normalizedEvt, x, y];\n    },\n\n    delegateDragEvents: function(view, data) {\n\n        data || (data = {});\n        this.eventData({ data: data }, { sourceView: view || null, mousemoved: 0 });\n        this.delegateDocumentEvents(null, data);\n        this.undelegateEvents();\n    },\n\n    // Guard the specified event. If the event is not interesting, guard returns `true`.\n    // Otherwise, it returns `false`.\n    guard: function(evt, view) {\n\n        if (evt.type === 'mousedown' && evt.button === 2) {\n            // handled as `contextmenu` type\n            return true;\n        }\n\n        if (this.options.guard && this.options.guard(evt, view)) {\n            return true;\n        }\n\n        if (evt.data && evt.data.guarded !== undefined) {\n            return evt.data.guarded;\n        }\n\n        if (view && view.model && (view.model instanceof Cell)) {\n            return false;\n        }\n\n        if (this.svg === evt.target || this.el === evt.target || $.contains(this.svg, evt.target)) {\n            return false;\n        }\n\n        return true;    // Event guarded. Paper should not react on it in any way.\n    },\n\n    setGridSize: function(gridSize) {\n\n        this.options.gridSize = gridSize;\n\n        if (this.options.drawGrid) {\n            this.drawGrid();\n        }\n\n        return this;\n    },\n\n    clearGrid: function() {\n\n        if (this.$grid) {\n            this.$grid.css('backgroundImage', 'none');\n        }\n        return this;\n    },\n\n    _getGridRefs: function() {\n\n        if (!this._gridCache) {\n\n            this._gridCache = {\n                root: V('svg', { width: '100%', height: '100%' }, V('defs')),\n                patterns: {},\n                add: function(id, vel) {\n                    V(this.root.node.childNodes[0]).append(vel);\n                    this.patterns[id] = vel;\n                    this.root.append(V('rect', { width: '100%', height: '100%', fill: 'url(#' + id + ')' }));\n                },\n                get: function(id) {\n                    return this.patterns[id];\n                },\n                exist: function(id) {\n                    return this.patterns[id] !== undefined;\n                }\n            };\n        }\n\n        return this._gridCache;\n    },\n\n    setGrid: function(drawGrid) {\n\n        this.clearGrid();\n\n        this._gridCache = null;\n        this._gridSettings = [];\n\n        var optionsList = Array.isArray(drawGrid) ? drawGrid : [drawGrid || {}];\n        optionsList.forEach(function(item) {\n            this._gridSettings.push.apply(this._gridSettings, this._resolveDrawGridOption(item));\n        }, this);\n        return this;\n    },\n\n    _resolveDrawGridOption: function(opt) {\n\n        var namespace = this.constructor.gridPatterns;\n        if (isString(opt) && Array.isArray(namespace[opt])) {\n            return namespace[opt].map(function(item) {\n                return assign({}, item);\n            });\n        }\n\n        var options = opt || { args: [{}] };\n        var isArray = Array.isArray(options);\n        var name = options.name;\n\n        if (!isArray && !name && !options.markup) {\n            name = 'dot';\n        }\n\n        if (name && Array.isArray(namespace[name])) {\n            var pattern = namespace[name].map(function(item) {\n                return assign({}, item);\n            });\n\n            var args = Array.isArray(options.args) ? options.args : [options.args || {}];\n\n            defaults(args[0], omit(opt, 'args'));\n            for (var i = 0; i < args.length; i++) {\n                if (pattern[i]) {\n                    assign(pattern[i], args[i]);\n                }\n            }\n            return pattern;\n        }\n\n        return isArray ? options : [options];\n    },\n\n    drawGrid: function(opt) {\n\n        var gridSize = this.options.gridSize;\n        if (gridSize <= 1) {\n            return this.clearGrid();\n        }\n\n        var localOptions = Array.isArray(opt) ? opt : [opt];\n\n        var ctm = this.matrix();\n        var refs = this._getGridRefs();\n\n        this._gridSettings.forEach(function(gridLayerSetting, index) {\n\n            var id = 'pattern_' + index;\n            var options = merge(gridLayerSetting, localOptions[index], {\n                sx: ctm.a || 1,\n                sy: ctm.d || 1,\n                ox: ctm.e || 0,\n                oy: ctm.f || 0\n            });\n\n            options.width = gridSize * (ctm.a || 1) * (options.scaleFactor || 1);\n            options.height = gridSize * (ctm.d || 1) * (options.scaleFactor || 1);\n\n            if (!refs.exist(id)) {\n                refs.add(id, V('pattern', { id: id, patternUnits: 'userSpaceOnUse' }, V(options.markup)));\n            }\n\n            var patternDefVel = refs.get(id);\n\n            if (isFunction(options.update)) {\n                options.update(patternDefVel.node.childNodes[0], options);\n            }\n\n            var x = options.ox % options.width;\n            if (x < 0) x += options.width;\n\n            var y = options.oy % options.height;\n            if (y < 0) y += options.height;\n\n            patternDefVel.attr({\n                x: x,\n                y: y,\n                width: options.width,\n                height: options.height\n            });\n        });\n\n        var patternUri = new XMLSerializer().serializeToString(refs.root.node);\n        patternUri = 'url(data:image/svg+xml;base64,' + btoa(patternUri) + ')';\n\n        this.$grid.css('backgroundImage', patternUri);\n\n        return this;\n    },\n\n    updateBackgroundImage: function(opt) {\n\n        opt = opt || {};\n\n        var backgroundPosition = opt.position || 'center';\n        var backgroundSize = opt.size || 'auto auto';\n\n        var currentScale = this.scale();\n        var currentTranslate = this.translate();\n\n        // backgroundPosition\n        if (isObject(backgroundPosition)) {\n            var x = currentTranslate.tx + (currentScale.sx * (backgroundPosition.x || 0));\n            var y = currentTranslate.ty + (currentScale.sy * (backgroundPosition.y || 0));\n            backgroundPosition = x + 'px ' + y + 'px';\n        }\n\n        // backgroundSize\n        if (isObject(backgroundSize)) {\n            backgroundSize = new Rect(backgroundSize).scale(currentScale.sx, currentScale.sy);\n            backgroundSize = backgroundSize.width + 'px ' + backgroundSize.height + 'px';\n        }\n\n        this.$background.css({\n            backgroundSize: backgroundSize,\n            backgroundPosition: backgroundPosition\n        });\n    },\n\n    drawBackgroundImage: function(img, opt) {\n\n        // Clear the background image if no image provided\n        if (!(img instanceof HTMLImageElement)) {\n            this.$background.css('backgroundImage', '');\n            return;\n        }\n\n        if (!this._background || this._background.id !== opt.id) {\n            // Draw only the last image requested (see drawBackground())\n            return;\n        }\n\n        opt = opt || {};\n\n        var backgroundImage;\n        var backgroundSize = opt.size;\n        var backgroundRepeat = opt.repeat || 'no-repeat';\n        var backgroundOpacity = opt.opacity || 1;\n        var backgroundQuality = Math.abs(opt.quality) || 1;\n        var backgroundPattern = this.constructor.backgroundPatterns[camelCase(backgroundRepeat)];\n\n        if (isFunction(backgroundPattern)) {\n            // 'flip-x', 'flip-y', 'flip-xy', 'watermark' and custom\n            img.width *= backgroundQuality;\n            img.height *= backgroundQuality;\n            var canvas = backgroundPattern(img, opt);\n            if (!(canvas instanceof HTMLCanvasElement)) {\n                throw new Error('dia.Paper: background pattern must return an HTML Canvas instance');\n            }\n\n            backgroundImage = canvas.toDataURL('image/png');\n            backgroundRepeat = 'repeat';\n            if (isObject(backgroundSize)) {\n                // recalculate the tile size if an object passed in\n                backgroundSize.width *= canvas.width / img.width;\n                backgroundSize.height *= canvas.height / img.height;\n            } else if (backgroundSize === undefined) {\n                // calculate the tile size if no provided\n                opt.size = {\n                    width: canvas.width / backgroundQuality,\n                    height: canvas.height / backgroundQuality\n                };\n            }\n        } else {\n            // backgroundRepeat:\n            // no-repeat', 'round', 'space', 'repeat', 'repeat-x', 'repeat-y'\n            backgroundImage = img.src;\n            if (backgroundSize === undefined) {\n                // pass the image size for  the backgroundSize if no size provided\n                opt.size = {\n                    width: img.width,\n                    height: img.height\n                };\n            }\n        }\n\n        this.$background.css({\n            opacity: backgroundOpacity,\n            backgroundRepeat: backgroundRepeat,\n            backgroundImage: 'url(' + backgroundImage + ')'\n        });\n\n        this.updateBackgroundImage(opt);\n    },\n\n    updateBackgroundColor: function(color) {\n\n        this.$el.css('backgroundColor', color || '');\n    },\n\n    drawBackground: function(opt) {\n\n        opt = opt || {};\n\n        this.updateBackgroundColor(opt.color);\n\n        if (opt.image) {\n            opt = this._background = cloneDeep(opt);\n            guid(opt);\n            var img = document.createElement('img');\n            img.onload = this.drawBackgroundImage.bind(this, img, opt);\n            img.src = opt.image;\n        } else {\n            this.drawBackgroundImage(null);\n            this._background = null;\n        }\n\n        return this;\n    },\n\n    setInteractivity: function(value) {\n\n        this.options.interactive = value;\n\n        invoke(this._views, 'setInteractivity', value);\n    },\n\n    // Paper definitions.\n    // ------------------\n\n    isDefined: function(defId) {\n\n        return !!this.svg.getElementById(defId);\n    },\n\n    defineFilter: function(filter) {\n\n        if (!isObject(filter)) {\n            throw new TypeError('dia.Paper: defineFilter() requires 1. argument to be an object.');\n        }\n\n        var filterId = filter.id;\n        var name = filter.name;\n        // Generate a hash code from the stringified filter definition. This gives us\n        // a unique filter ID for different definitions.\n        if (!filterId) {\n            filterId = name + this.svg.id + hashCode(JSON.stringify(filter));\n        }\n        // If the filter already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        // If not, create one.\n        if (!this.isDefined(filterId)) {\n\n            var namespace = _filter;\n            var filterSVGString = namespace[name] && namespace[name](filter.args || {});\n            if (!filterSVGString) {\n                throw new Error('Non-existing filter ' + name);\n            }\n\n            // Set the filter area to be 3x the bounding box of the cell\n            // and center the filter around the cell.\n            var filterAttrs = assign({\n                filterUnits: 'objectBoundingBox',\n                x: -1,\n                y: -1,\n                width: 3,\n                height: 3\n            }, filter.attrs, {\n                id: filterId\n            });\n\n            V(filterSVGString, filterAttrs).appendTo(this.defs);\n        }\n\n        return filterId;\n    },\n\n    defineGradient: function(gradient) {\n        if (!isObject(gradient)) {\n            throw new TypeError('dia.Paper: defineGradient() requires 1. argument to be an object.');\n        }\n        const { svg, defs } = this;\n        const {\n            type,\n            // Generate a hash code from the stringified filter definition. This gives us\n            // a unique filter ID for different definitions.\n            id = type + svg.id + hashCode(JSON.stringify(gradient)),\n            stops,\n            attrs = {}\n        } = gradient;\n        // If the gradient already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        if (this.isDefined(id)) return id;\n        // If not, create one.\n        const stopVEls = toArray(stops).map(({ offset, color, opacity }) => {\n            return V('stop').attr({\n                'offset': offset,\n                'stop-color': color,\n                'stop-opacity': Number.isFinite(opacity) ? opacity : 1\n            });\n        });\n        const gradientVEl = V(type, attrs, stopVEls);\n        gradientVEl.id = id;\n        gradientVEl.appendTo(defs);\n        return id;\n    },\n\n    definePattern: function(pattern) {\n        if (!isObject(pattern)) {\n            throw new TypeError('dia.Paper: definePattern() requires 1. argument to be an object.');\n        }\n        const { svg, defs } = this;\n        const {\n            // Generate a hash code from the stringified filter definition. This gives us\n            // a unique filter ID for different definitions.\n            id = svg.id + hashCode(JSON.stringify(pattern)),\n            markup,\n            attrs = {}\n        } = pattern;\n        if (!markup) {\n            throw new TypeError('dia.Paper: definePattern() requires markup.');\n        }\n        // If the gradient already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        if (this.isDefined(id)) return id;\n        // If not, create one.\n        const patternVEl = V('pattern', {\n            patternUnits: 'userSpaceOnUse'\n        });\n        patternVEl.id = id;\n        patternVEl.attr(attrs);\n        if (typeof markup === 'string') {\n            patternVEl.append(V(markup));\n        } else {\n            const { fragment } = parseDOMJSON(markup);\n            patternVEl.append(fragment);\n        }\n        patternVEl.appendTo(defs);\n        return id;\n    },\n\n    defineMarker: function(marker) {\n        if (!isObject(marker)) {\n            throw new TypeError('dia.Paper: defineMarker() requires 1. argument to be an object.');\n        }\n        const { svg, defs } = this;\n        const {\n            // Generate a hash code from the stringified filter definition. This gives us\n            // a unique filter ID for different definitions.\n            id = svg.id + hashCode(JSON.stringify(marker)),\n            markup,\n            attrs = {},\n            // deprecated in favour of `attrs`\n            markerUnits = 'userSpaceOnUse'\n        } = marker;\n        // If the marker already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        if (this.isDefined(id)) return id;\n        // If not, create one.\n        const markerVEl = V('marker', {\n            orient: 'auto',\n            overflow: 'visible',\n            markerUnits: markerUnits\n        });\n        markerVEl.id = id;\n        markerVEl.attr(attrs);\n        if (markup) {\n            if (typeof markup === 'string') {\n                markerVEl.append(V(markup));\n            } else {\n                const { fragment } = parseDOMJSON(markup);\n                markerVEl.append(fragment);\n            }\n        } else {\n            // marker object is a flat structure\n            const { type = 'path' } = marker;\n            const markerContentVEl = V(type, omit(marker, 'type', 'id', 'markup', 'attrs', 'markerUnits'));\n            markerVEl.append(markerContentVEl);\n        }\n        markerVEl.appendTo(defs);\n        return id;\n    }\n\n}, {\n\n    sorting: sortingTypes,\n\n    Layers: LayersNames,\n\n    backgroundPatterns: {\n\n        flipXy: function(img) {\n            // d b\n            // q p\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = 2 * imgWidth;\n            canvas.height = 2 * imgHeight;\n\n            var ctx = canvas.getContext('2d');\n            // top-left image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // xy-flipped bottom-right image\n            ctx.setTransform(-1, 0, 0, -1, canvas.width, canvas.height);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // x-flipped top-right image\n            ctx.setTransform(-1, 0, 0, 1, canvas.width, 0);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // y-flipped bottom-left image\n            ctx.setTransform(1, 0, 0, -1, 0, canvas.height);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        flipX: function(img) {\n            // d b\n            // d b\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = imgWidth * 2;\n            canvas.height = imgHeight;\n\n            var ctx = canvas.getContext('2d');\n            // left image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // flipped right image\n            ctx.translate(2 * imgWidth, 0);\n            ctx.scale(-1, 1);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        flipY: function(img) {\n            // d d\n            // q q\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = imgWidth;\n            canvas.height = imgHeight * 2;\n\n            var ctx = canvas.getContext('2d');\n            // top image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // flipped bottom image\n            ctx.translate(0, 2 * imgHeight);\n            ctx.scale(1, -1);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        watermark: function(img, opt) {\n            //   d\n            // d\n\n            opt = opt || {};\n\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            var canvas = document.createElement('canvas');\n            canvas.width = imgWidth * 3;\n            canvas.height = imgHeight * 3;\n\n            var ctx = canvas.getContext('2d');\n            var angle = isNumber(opt.watermarkAngle) ? -opt.watermarkAngle : -20;\n            var radians = toRad(angle);\n            var stepX = canvas.width / 4;\n            var stepY = canvas.height / 4;\n\n            for (var i = 0; i < 4; i++) {\n                for (var j = 0; j < 4; j++) {\n                    if ((i + j) % 2 > 0) {\n                        // reset the current transformations\n                        ctx.setTransform(1, 0, 0, 1, (2 * i - 1) * stepX, (2 * j - 1) * stepY);\n                        ctx.rotate(radians);\n                        ctx.drawImage(img, -imgWidth / 2, -imgHeight / 2, imgWidth, imgHeight);\n                    }\n                }\n            }\n\n            return canvas;\n        }\n    },\n\n    gridPatterns: {\n        dot: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'rect',\n            update: function(el, opt) {\n                V(el).attr({\n                    width: opt.thickness * opt.sx,\n                    height: opt.thickness * opt.sy,\n                    fill: opt.color\n                });\n            }\n        }],\n        fixedDot: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'rect',\n            update: function(el, opt) {\n                var size = opt.sx <= 1 ? opt.thickness * opt.sx : opt.thickness;\n                V(el).attr({ width: size, height: size, fill: opt.color });\n            }\n        }],\n        mesh: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'path',\n            update: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }],\n        doubleMesh: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'path',\n            update: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }, {\n            color: '#000000',\n            thickness: 3,\n            scaleFactor: 4,\n            markup: 'path',\n            update: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }]\n    }\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}