{"ast":null,"code":"import '@/../public/vendor/node_modules/jquery/dist/jquery.js';\nimport '@/../public/vendor/js/lib/jquery.min.js';\nimport '@/../public/vendor/js/lib/lodash.min.js';\nimport '@/../public/vendor/js/lib/backbone.min.js';\nimport '@/../public/vendor/js/lib/rappid.min.js';\nimport '@/../public/vendor/node_modules/lodash/lodash.js';\nimport '@/../public/vendor/node_modules/backbone/backbone.js';\nimport '@/../public/vendor/build/package/rappid.js'; // import { Options, Vue } from 'vue-class-component';\n\nexport default {\n  mounted() {\n    var highlighters = joint.highlighters;\n    var mask = joint.highlighters.mask;\n    let selectionNode = null;\n    let selectedElement = null;\n    let selectedLink = null; //check ctrl shift\n\n    var ctrlDown = false;\n    var shiftDown = false;\n    const color = \"rgb(255 136 0)\";\n    var customEl = joint.dia.Element.define('standard.Rectangle', {\n      z: 1,\n      size: {\n        width: 44,\n        height: 35\n      },\n      removable: false,\n      attrs: {\n        image: {\n          x: 5,\n          y: 5,\n          width: 'calc(w-10)',\n          height: 'calc(h-10 )'\n        },\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0',\n          width: 'calc(w)',\n          height: 'calc(h)',\n          strokeWidth: 2,\n          rx: 5,\n          ry: 5\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }, {\n          id: 'in-port',\n          group: 'in'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          },\n          in: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'left'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'passive',\n                fill: '#FFFFFF',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      },\n      markup: [{\n        tagName: 'rect',\n        selector: 'body'\n      }, {\n        tagName: 'image',\n        selector: 'image'\n      }, {\n        tagName: 'ports',\n        selector: 'ports'\n      }]\n    });\n    var customElNoInPorts = joint.dia.Element.define('standard.Rectangle', {\n      z: 1,\n      theme: 'material',\n      size: {\n        width: 44,\n        height: 35\n      },\n      removable: false,\n      attrs: {\n        image: {\n          x: 5,\n          y: 5,\n          width: 'calc(w-10)',\n          height: 'calc(h-10 )'\n        },\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0',\n          width: 'calc(w)',\n          height: 'calc(h)',\n          strokeWidth: 2\n        },\n        line: {\n          connection: true,\n          stroke: '#333333',\n          strokeWidth: 2,\n          strokeLinejoin: 'round',\n          targetMarker: {\n            'type': 'path',\n            'd': 'M 10 -5 0 0 10 5 z'\n          }\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      },\n      markup: [{\n        tagName: 'rect',\n        selector: 'body'\n      }, {\n        tagName: 'image',\n        selector: 'image'\n      }, {\n        tagName: 'ports',\n        selector: 'ports'\n      }]\n    });\n    var targetArrowheadTool = new joint.linkTools.TargetArrowhead();\n    var toolsView = new joint.dia.ToolsView({\n      tools: [targetArrowheadTool]\n    });\n    var CustomLinkView = joint.dia.LinkView.extend({\n      // custom interactions:\n      pointerdblclick: function (evt, x, y) {\n        this.addVertex(x, y);\n      },\n      contextmenu: function (evt, x, y) {\n        this.addLabel(x, y);\n      },\n      // custom options:\n      options: joint.util.defaults({\n        doubleLinkTools: true\n      }, joint.dia.LinkView.prototype.options)\n    });\n    var graph = new joint.dia.Graph(); //ctrl+z\n\n    var commandManager = new joint.dia.CommandManager({\n      graph: graph\n    }); //cấu hình paper\n\n    var paper = new joint.dia.Paper({\n      el: $('#paper'),\n      width: 800,\n      height: 600,\n      model: graph,\n      async: true,\n      sorting: joint.dia.Paper.sorting.APPROX,\n      gridSize: 10,\n      drawGrid: true,\n      restrictTranslate: true,\n      stopDelegation: false,\n      linkView: CustomLinkView,\n      interactive: {\n        vertexAdd: false\n      },\n      // background: { color: '#F3F7F6' },\n      // defaultConnectionPoint: { name: 'boundary' },\n      // defaultConnector: {\n      //     name: \"rounded\"\n      //   },\n      //   defaultRouter: {\n      //     name: \"manhattan\",\n      //     args: {\n      //       step: 10,\n      //       endDirections: [\"bottom\"],\n      //       startDirections: [\"top\"],\n      //       padding: { bottom: 20 }\n      //     }\n      //   },\n      snapLinks: {\n        radius: 75\n      },\n      linkPinning: false,\n      multiLinks: false,\n      defaultRouter: {\n        name: 'manhattan',\n        args: {\n          padding: 10\n        }\n      },\n      defaultConnector: {\n        name: 'rounded'\n      },\n      validateConnection: function (cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n        // Prevent linking from input ports.\n        if (magnetS && magnetS.getAttribute('port-group') === 'in') return false; // Prevent linking from output ports to input ports within one element.\n\n        if (cellViewS === cellViewT) return false; // Prevent linking to input ports.\n\n        return magnetT && magnetT.getAttribute('port-group') === 'in' || cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer';\n      },\n      // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n      //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n      //     return view1 !== view2;\n      // },\n      interactive: {\n        linkMove: true,\n        labelMove: true,\n        arrowheadMove: true,\n        vertexMove: false,\n        vertexAdd: false,\n        vertexRemove: false,\n        useLinkTools: false\n      },\n      defaultLink: function () {\n        return new joint.shapes.standard.Link({\n          attrs: {\n            line: {\n              connection: true,\n              stroke: '#707070',\n              strokeLinejoin: 'round'\n            },\n            wrapper: {\n              connection: true,\n              strokeWidth: 10,\n              strokeLinejoin: 'round'\n            }\n          },\n          markup: [{\n            tagName: 'path',\n            selector: 'wrapper',\n            attributes: {\n              'fill': 'none',\n              'stroke': 'transparent'\n            }\n          }, {\n            tagName: 'path',\n            selector: 'line',\n            attributes: {\n              'fill': 'none'\n            }\n          }]\n        });\n      }\n    }); //paperScroller\n\n    var paperScroller = new joint.ui.PaperScroller({\n      paper: paper,\n      autoResizePaper: true,\n      scrollWhileDragging: true,\n      cursor: 'grab'\n    }); // cấu hình snaplines\n\n    var snaplines = new joint.ui.Snaplines({\n      paper: paper\n    });\n    snaplines.startListening(); // cấu hình Stencil \n\n    var stencil = new joint.ui.Stencil({\n      paper: paperScroller,\n      width: 900,\n      height: 60,\n      dropAnimation: {\n        duration: 200,\n        easing: 'swing'\n      }\n    }); // cấu hình Selection\n\n    var selection = new joint.ui.Selection({\n      theme: 'material',\n      paper: paper,\n      useModelGeometry: true,\n      allowTranslate: true\n    }); //hàm viết hoa chữ đầu\n\n    function jsUcfirst(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    } //hàm render stencil\n\n\n    function stencilRenderHandler(positionX, positionY, arr, elNoInPorts = \"\", spaceBetweenElToX = 0, spaceBetweenElToY = 0) {\n      arr.forEach(element => {\n        //chuyển thành hoa chữ đầu cho đúng định dạng file ảnh lưu\n        let elementName = jsUcfirst(element);\n\n        if (elementName === jsUcfirst(elNoInPorts)) {\n          element = new customElNoInPorts();\n        } else {\n          element = new customEl();\n        }\n\n        element.prop('attrs/image/xlinkHref', `./assets/${elementName}.svg`);\n        stencilShapes.push(element.position(positionX, positionY));\n\n        if (spaceBetweenElToX > 0) {\n          positionX += element.attributes.size.width + spaceBetweenElToX;\n        }\n\n        if (spaceBetweenElToY > 0) {\n          positionY += element.attributes.size.height + spaceBetweenElToY;\n        }\n      });\n    }\n\n    var arr = ['filter', 'formula', 'join', 'load', 'pivot', 'sample', 'script', 'select', 'sort', 'summarize', 'transposeTable', 'union', 'weightAvg']; //mảng chứa các vị trí của stencil Shape để sau đó render\n\n    var stencilShapes = [];\n  }\n\n};","map":{"version":3,"mappings":"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","names":["mounted","highlighters","joint","mask","selectionNode","selectedElement","selectedLink","ctrlDown","shiftDown","color","customEl","dia","Element","define","z","size","width","height","removable","attrs","image","x","y","root","magnet","body","fill","stroke","strokeWidth","rx","ry","ports","items","id","group","groups","out","markup","tagName","selector","position","name","portBody","r","in","customElNoInPorts","theme","line","connection","strokeLinejoin","targetMarker","targetArrowheadTool","linkTools","TargetArrowhead","toolsView","ToolsView","tools","CustomLinkView","LinkView","extend","pointerdblclick","evt","addVertex","contextmenu","addLabel","options","util","defaults","doubleLinkTools","prototype","graph","Graph","commandManager","CommandManager","paper","Paper","el","$","model","async","sorting","APPROX","gridSize","drawGrid","restrictTranslate","stopDelegation","linkView","interactive","vertexAdd","snapLinks","radius","linkPinning","multiLinks","defaultRouter","args","padding","defaultConnector","validateConnection","cellViewS","magnetS","cellViewT","magnetT","end","getAttribute","get","linkMove","labelMove","arrowheadMove","vertexMove","vertexRemove","useLinkTools","defaultLink","shapes","standard","Link","wrapper","attributes","paperScroller","ui","PaperScroller","autoResizePaper","scrollWhileDragging","cursor","snaplines","Snaplines","startListening","stencil","Stencil","dropAnimation","duration","easing","selection","Selection","useModelGeometry","allowTranslate","jsUcfirst","string","charAt","toUpperCase","slice","stencilRenderHandler","positionX","positionY","arr","elNoInPorts","spaceBetweenElToX","spaceBetweenElToY","forEach","element","elementName","prop","stencilShapes","push"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\nimport '@/../public/vendor/node_modules/jquery/dist/jquery.js'\nimport '@/../public/vendor/js/lib/jquery.min.js'\nimport '@/../public/vendor/js/lib/lodash.min.js'\nimport '@/../public/vendor/js/lib/backbone.min.js'\nimport '@/../public/vendor/js/lib/rappid.min.js'\nimport '@/../public/vendor/node_modules/lodash/lodash.js'\nimport '@/../public/vendor/node_modules/backbone/backbone.js'\nimport '@/../public/vendor/build/package/rappid.js'\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n    var highlighters=joint.highlighters;\n    var mask = joint.highlighters.mask;\n    let selectionNode = null;\n    let selectedElement = null;\n    let selectedLink = null\n    //check ctrl shift\n    var ctrlDown = false;\n    var shiftDown = false;\n    const color = \"rgb(255 136 0)\";\n    var customEl = joint.dia.Element.define('standard.Rectangle', {\n        z: 1,\n        size: {\n            width: 44,\n            height: 35\n        },\n        removable: false,\n        attrs: {\n            image: {\n                x: 5,\n                y: 5,\n                width: 'calc(w-10)',\n                height: 'calc(h-10 )'\n            },\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                width: 'calc(w)',\n                height: 'calc(h)',\n                strokeWidth: 2,\n                rx: 5,\n                ry: 5,\n\n            }\n        },\n        ports: {\n            items: [{\n                id: 'out-port',\n                group: 'out',\n\n            },\n            {\n                id: 'in-port',\n                group: 'in'\n            }\n            ],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n\n                        }\n                    }\n                },\n                in: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'left'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'passive',\n                            fill: '#FFFFFF',\n                            stroke: '#187BD3',\n\n                        }\n                    }\n                }\n            }\n        },\n        markup: [\n            {\n                tagName: 'rect',\n                selector: 'body',\n            },\n            {\n                tagName: 'image',\n                selector: 'image'\n            }, {\n                tagName: 'ports',\n                selector: 'ports'\n            }]\n    })\n    var customElNoInPorts = joint.dia.Element.define('standard.Rectangle', {\n        z: 1,\n        theme: 'material',\n        size: {\n            width: 44,\n            height: 35\n        },\n        removable: false,\n        attrs: {\n            image: {\n                x: 5,\n                y: 5,\n                width: 'calc(w-10)',\n                height: 'calc(h-10 )'\n            },\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                width: 'calc(w)',\n                height: 'calc(h)',\n                strokeWidth: 2,\n            },\n            line: {\n                connection: true,\n                stroke: '#333333',\n                strokeWidth: 2,\n                strokeLinejoin: 'round',\n                targetMarker: {\n                    'type': 'path',\n                    'd': 'M 10 -5 0 0 10 5 z'\n                }\n            },\n        },\n        ports: {\n            items: [\n                {\n                    id: 'out-port',\n                    group: 'out'\n                }\n            ],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n                        }\n                    }\n                },\n\n            }\n        },\n        markup: [\n            {\n                tagName: 'rect',\n                selector: 'body',\n            }, {\n                tagName: 'image',\n                selector: 'image'\n            }, {\n                tagName: 'ports',\n                selector: 'ports'\n            }]\n    })\n    var targetArrowheadTool = new joint.linkTools.TargetArrowhead();\n    var toolsView = new joint.dia.ToolsView({\n    tools: [\n        targetArrowheadTool,\n    ]\n    });\n    var CustomLinkView = joint.dia.LinkView.extend({\n        // custom interactions:\n        pointerdblclick: function(evt, x, y) {\n            this.addVertex(x, y);\n        },\n        contextmenu: function(evt, x, y) {\n            this.addLabel(x, y);\n        },\n    \n        // custom options:\n        options: joint.util.defaults({\n            doubleLinkTools: true,\n        }, joint.dia.LinkView.prototype.options)\n    });\n    var graph = new joint.dia.Graph;\n    //ctrl+z\n    var commandManager = new joint.dia.CommandManager({ graph: graph });\n    \n    //cấu hình paper\n    var paper = new joint.dia.Paper({  \n        el:$('#paper'),\n        width: 800,\n        height: 600,\n        model: graph,\n        async: true,\n        sorting: joint.dia.Paper.sorting.APPROX,\n        gridSize: 10,\n        drawGrid: true,\n        restrictTranslate: true,\n        stopDelegation: false,\n        linkView: CustomLinkView,\n        interactive: { vertexAdd: false } ,\n        // background: { color: '#F3F7F6' },\n        // defaultConnectionPoint: { name: 'boundary' },\n        // defaultConnector: {\n        //     name: \"rounded\"\n        //   },\n        //   defaultRouter: {\n        //     name: \"manhattan\",\n        //     args: {\n        //       step: 10,\n        //       endDirections: [\"bottom\"],\n        //       startDirections: [\"top\"],\n        //       padding: { bottom: 20 }\n        //     }\n        //   },\n        snapLinks: {\n            radius: 75\n        },\n        linkPinning: false,\n        multiLinks: false,\n        defaultRouter: { name: 'manhattan', args: { padding: 10 }},\n        defaultConnector: { name: 'rounded' },\n        validateConnection: function(cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n            // Prevent linking from input ports.\n            if (magnetS && magnetS.getAttribute('port-group') === 'in') return false;\n            // Prevent linking from output ports to input ports within one element.\n            if (cellViewS === cellViewT) return false;\n            // Prevent linking to input ports.\n            return (magnetT && magnetT.getAttribute('port-group') === 'in') || (cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer');\n        },\n        // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n        //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n        //     return view1 !== view2;\n        // },\n        interactive: {\n            linkMove: true,\n            labelMove: true,\n            arrowheadMove: true,\n            vertexMove: false,\n            vertexAdd: false,\n            vertexRemove: false,\n            useLinkTools: false,\n        },\n        defaultLink: function () {\n            return new joint.shapes.standard.Link({\n                attrs: {\n                    line: {\n                        connection: true,\n                        stroke: '#707070',\n                        strokeLinejoin: 'round',\n                    },\n                    wrapper: {\n                        connection: true,\n                        strokeWidth: 10,\n                        strokeLinejoin: 'round'\n                    },\n                    \n                },\n                \n                markup: [{\n                    tagName: 'path',\n                    selector: 'wrapper',\n                    attributes: {\n                        'fill': 'none',\n                        \n                        'stroke': 'transparent'\n                    }\n                }, {\n                    tagName: 'path',\n                    selector: 'line',\n                    attributes: {\n                        'fill': 'none',\n                        \n                    }\n                }]\n            });\n        }\n    });\n    //paperScroller\n    var paperScroller = new joint.ui.PaperScroller({\n        paper: paper,\n        autoResizePaper: true,\n        scrollWhileDragging: true,\n        cursor: 'grab'\n        \n    });\n    // cấu hình snaplines\n    var snaplines = new joint.ui.Snaplines({ paper: paper })\n    snaplines.startListening()\n    // cấu hình Stencil \n    var stencil = new joint.ui.Stencil({\n        paper: paperScroller,\n        width: 900,\n        height: 60,\n        dropAnimation: { duration: 200, easing: 'swing' },\n        \n    });\n    // cấu hình Selection\n    var selection = new joint.ui.Selection({\n        theme: 'material',\n        paper: paper,\n        useModelGeometry: true,\n        allowTranslate: true,\n    });\n    //hàm viết hoa chữ đầu\n    function jsUcfirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    //hàm render stencil\n    function stencilRenderHandler(positionX,positionY,arr,elNoInPorts =\"\",spaceBetweenElToX=0,spaceBetweenElToY=0){\n        arr.forEach(element => {\n            //chuyển thành hoa chữ đầu cho đúng định dạng file ảnh lưu\n            let elementName = jsUcfirst(element)\n            if (elementName === jsUcfirst(elNoInPorts)) {\n                element = new customElNoInPorts();\n            }\n            else {\n                element = new customEl();\n            }\n            element.prop('attrs/image/xlinkHref', `./assets/${elementName}.svg`)\n            stencilShapes.push(element.position(positionX, positionY))\n            if(spaceBetweenElToX>0){\n                positionX += element.attributes.size.width+spaceBetweenElToX;\n            }\n            if(spaceBetweenElToY>0){\n                positionY += element.attributes.size.height+spaceBetweenElToY;\n            }\n        });\n    }\n    var arr = ['filter', 'formula', 'join', 'load', 'pivot', 'sample', 'script', 'select', 'sort', 'summarize', 'transposeTable', 'union', 'weightAvg'];\n    //mảng chứa các vị trí của stencil Shape để sau đó render\n    var stencilShapes = []\n  }\n\n  \n}\n</script>\n\n<style >\n@import \"@/../public/vendor/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}