{"ast":null,"code":"import { View } from '../mvc/index.mjs';\nimport { addClassNamePrefix } from '../util/util.mjs';\nexport const LayersNames = {\n  CELLS: 'cells',\n  BACK: 'back',\n  FRONT: 'front',\n  TOOLS: 'tools',\n  LABELS: 'labels'\n};\nexport const PaperLayer = View.extend({\n  tagName: 'g',\n  svgElement: true,\n  pivotNodes: null,\n  defaultTheme: null,\n  options: {\n    name: ''\n  },\n  className: function () {\n    return addClassNamePrefix(`${this.options.name}-layer`);\n  },\n  init: function () {\n    this.pivotNodes = {};\n  },\n  insertSortedNode: function (node, z) {\n    this.el.insertBefore(node, this.insertPivot(z));\n  },\n  insertNode: function (node) {\n    const {\n      el\n    } = this;\n\n    if (node.parentNode !== el) {\n      el.appendChild(node);\n    }\n  },\n  insertPivot: function (z) {\n    const {\n      el,\n      pivotNodes\n    } = this;\n    z = +z;\n    z || (z = 0);\n    let pivotNode = pivotNodes[z];\n    if (pivotNode) return pivotNode;\n    pivotNode = pivotNodes[z] = document.createComment('z-index:' + (z + 1));\n    let neighborZ = -Infinity;\n\n    for (let currentZ in pivotNodes) {\n      currentZ = +currentZ;\n\n      if (currentZ < z && currentZ > neighborZ) {\n        neighborZ = currentZ;\n        if (neighborZ === z - 1) continue;\n      }\n    }\n\n    if (neighborZ !== -Infinity) {\n      const neighborPivot = pivotNodes[neighborZ]; // Insert After\n\n      el.insertBefore(pivotNode, neighborPivot.nextSibling);\n    } else {\n      // First Child\n      el.insertBefore(pivotNode, el.firstChild);\n    }\n\n    return pivotNode;\n  },\n  removePivots: function () {\n    const {\n      el,\n      pivotNodes\n    } = this;\n\n    for (let z in pivotNodes) el.removeChild(pivotNodes[z]);\n\n    this.pivotNodes = {};\n  }\n});","map":{"version":3,"names":["View","addClassNamePrefix","LayersNames","CELLS","BACK","FRONT","TOOLS","LABELS","PaperLayer","extend","tagName","svgElement","pivotNodes","defaultTheme","options","name","className","init","insertSortedNode","node","z","el","insertBefore","insertPivot","insertNode","parentNode","appendChild","pivotNode","document","createComment","neighborZ","Infinity","currentZ","neighborPivot","nextSibling","firstChild","removePivots","removeChild"],"sources":["C:/Users/Admin/dataflow-test/node_modules/jointjs/src/dia/PaperLayer.mjs"],"sourcesContent":["import { View } from '../mvc/index.mjs';\nimport { addClassNamePrefix } from '../util/util.mjs';\n\nexport const LayersNames = {\n    CELLS: 'cells',\n    BACK: 'back',\n    FRONT: 'front',\n    TOOLS: 'tools',\n    LABELS: 'labels'\n};\n\nexport const PaperLayer = View.extend({\n\n    tagName: 'g',\n    svgElement: true,\n    pivotNodes: null,\n    defaultTheme: null,\n\n    options: {\n        name: ''\n    },\n\n    className: function() {\n        return addClassNamePrefix(`${this.options.name}-layer`);\n    },\n\n    init: function() {\n        this.pivotNodes = {};\n    },\n\n    insertSortedNode: function(node, z) {\n        this.el.insertBefore(node, this.insertPivot(z));\n    },\n\n    insertNode: function(node) {\n        const { el } = this;\n        if (node.parentNode !== el) {\n            el.appendChild(node);\n        }\n    },\n\n    insertPivot: function(z) {\n        const { el, pivotNodes } = this;\n        z = +z;\n        z || (z = 0);\n        let pivotNode = pivotNodes[z];\n        if (pivotNode) return pivotNode;\n        pivotNode = pivotNodes[z] = document.createComment('z-index:' + (z + 1));\n        let neighborZ = -Infinity;\n        for (let currentZ in pivotNodes) {\n            currentZ = +currentZ;\n            if (currentZ < z && currentZ > neighborZ) {\n                neighborZ = currentZ;\n                if (neighborZ === z - 1) continue;\n            }\n        }\n        if (neighborZ !== -Infinity) {\n            const neighborPivot = pivotNodes[neighborZ];\n            // Insert After\n            el.insertBefore(pivotNode, neighborPivot.nextSibling);\n        } else {\n            // First Child\n            el.insertBefore(pivotNode, el.firstChild);\n        }\n        return pivotNode;\n    },\n\n    removePivots: function() {\n        const { el, pivotNodes } = this;\n        for (let z in pivotNodes) el.removeChild(pivotNodes[z]);\n        this.pivotNodes = {};\n    }\n\n});\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AAEA,OAAO,MAAMC,WAAW,GAAG;EACvBC,KAAK,EAAE,OADgB;EAEvBC,IAAI,EAAE,MAFiB;EAGvBC,KAAK,EAAE,OAHgB;EAIvBC,KAAK,EAAE,OAJgB;EAKvBC,MAAM,EAAE;AALe,CAApB;AAQP,OAAO,MAAMC,UAAU,GAAGR,IAAI,CAACS,MAAL,CAAY;EAElCC,OAAO,EAAE,GAFyB;EAGlCC,UAAU,EAAE,IAHsB;EAIlCC,UAAU,EAAE,IAJsB;EAKlCC,YAAY,EAAE,IALoB;EAOlCC,OAAO,EAAE;IACLC,IAAI,EAAE;EADD,CAPyB;EAWlCC,SAAS,EAAE,YAAW;IAClB,OAAOf,kBAAkB,CAAE,GAAE,KAAKa,OAAL,CAAaC,IAAK,QAAtB,CAAzB;EACH,CAbiC;EAelCE,IAAI,EAAE,YAAW;IACb,KAAKL,UAAL,GAAkB,EAAlB;EACH,CAjBiC;EAmBlCM,gBAAgB,EAAE,UAASC,IAAT,EAAeC,CAAf,EAAkB;IAChC,KAAKC,EAAL,CAAQC,YAAR,CAAqBH,IAArB,EAA2B,KAAKI,WAAL,CAAiBH,CAAjB,CAA3B;EACH,CArBiC;EAuBlCI,UAAU,EAAE,UAASL,IAAT,EAAe;IACvB,MAAM;MAAEE;IAAF,IAAS,IAAf;;IACA,IAAIF,IAAI,CAACM,UAAL,KAAoBJ,EAAxB,EAA4B;MACxBA,EAAE,CAACK,WAAH,CAAeP,IAAf;IACH;EACJ,CA5BiC;EA8BlCI,WAAW,EAAE,UAASH,CAAT,EAAY;IACrB,MAAM;MAAEC,EAAF;MAAMT;IAAN,IAAqB,IAA3B;IACAQ,CAAC,GAAG,CAACA,CAAL;IACAA,CAAC,KAAKA,CAAC,GAAG,CAAT,CAAD;IACA,IAAIO,SAAS,GAAGf,UAAU,CAACQ,CAAD,CAA1B;IACA,IAAIO,SAAJ,EAAe,OAAOA,SAAP;IACfA,SAAS,GAAGf,UAAU,CAACQ,CAAD,CAAV,GAAgBQ,QAAQ,CAACC,aAAT,CAAuB,cAAcT,CAAC,GAAG,CAAlB,CAAvB,CAA5B;IACA,IAAIU,SAAS,GAAG,CAACC,QAAjB;;IACA,KAAK,IAAIC,QAAT,IAAqBpB,UAArB,EAAiC;MAC7BoB,QAAQ,GAAG,CAACA,QAAZ;;MACA,IAAIA,QAAQ,GAAGZ,CAAX,IAAgBY,QAAQ,GAAGF,SAA/B,EAA0C;QACtCA,SAAS,GAAGE,QAAZ;QACA,IAAIF,SAAS,KAAKV,CAAC,GAAG,CAAtB,EAAyB;MAC5B;IACJ;;IACD,IAAIU,SAAS,KAAK,CAACC,QAAnB,EAA6B;MACzB,MAAME,aAAa,GAAGrB,UAAU,CAACkB,SAAD,CAAhC,CADyB,CAEzB;;MACAT,EAAE,CAACC,YAAH,CAAgBK,SAAhB,EAA2BM,aAAa,CAACC,WAAzC;IACH,CAJD,MAIO;MACH;MACAb,EAAE,CAACC,YAAH,CAAgBK,SAAhB,EAA2BN,EAAE,CAACc,UAA9B;IACH;;IACD,OAAOR,SAAP;EACH,CAtDiC;EAwDlCS,YAAY,EAAE,YAAW;IACrB,MAAM;MAAEf,EAAF;MAAMT;IAAN,IAAqB,IAA3B;;IACA,KAAK,IAAIQ,CAAT,IAAcR,UAAd,EAA0BS,EAAE,CAACgB,WAAH,CAAezB,UAAU,CAACQ,CAAD,CAAzB;;IAC1B,KAAKR,UAAL,GAAkB,EAAlB;EACH;AA5DiC,CAAZ,CAAnB"},"metadata":{},"sourceType":"module"}