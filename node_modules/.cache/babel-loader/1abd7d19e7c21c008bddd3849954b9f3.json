{"ast":null,"code":"// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js'); // import { Options, Vue } from 'vue-class-component';\n\n\nexport default {\n  mounted() {\n    var highlighters = joint.highlighters;\n    var mask = joint.highlighters.mask;\n    let selectionNode = null;\n    let selectedElement = null;\n    let selectedLink = null;\n    var customEl = joint.dia.Element.define('standard.Rectangle', {\n      z: 1,\n      size: {\n        width: 44,\n        height: 35\n      },\n      removable: false,\n      attrs: {\n        image: {\n          x: 5,\n          y: 5,\n          width: 'calc(w-10)',\n          height: 'calc(h-10 )'\n        },\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0',\n          width: 'calc(w)',\n          height: 'calc(h)',\n          strokeWidth: 2,\n          rx: 5,\n          ry: 5\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }, {\n          id: 'in-port',\n          group: 'in'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          },\n          in: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'left'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'passive',\n                fill: '#FFFFFF',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      },\n      markup: [{\n        tagName: 'rect',\n        selector: 'body'\n      }, {\n        tagName: 'image',\n        selector: 'image'\n      }, {\n        tagName: 'ports',\n        selector: 'ports'\n      }]\n    });\n    var customElNoInPorts = joint.dia.Element.define('standard.Rectangle', {\n      z: 1,\n      theme: 'material',\n      size: {\n        width: 44,\n        height: 35\n      },\n      removable: false,\n      attrs: {\n        image: {\n          x: 5,\n          y: 5,\n          width: 'calc(w-10)',\n          height: 'calc(h-10 )'\n        },\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0',\n          width: 'calc(w)',\n          height: 'calc(h)',\n          strokeWidth: 2\n        },\n        line: {\n          connection: true,\n          stroke: '#333333',\n          strokeWidth: 2,\n          strokeLinejoin: 'round',\n          targetMarker: {\n            'type': 'path',\n            'd': 'M 10 -5 0 0 10 5 z'\n          }\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 5,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      },\n      markup: [{\n        tagName: 'rect',\n        selector: 'body'\n      }, {\n        tagName: 'image',\n        selector: 'image'\n      }, {\n        tagName: 'ports',\n        selector: 'ports'\n      }]\n    }); //create link tool\n    //     var verticesTool = new joint.linkTools.Vertices();\n    // var segmentsTool = new joint.linkTools.Segments();\n    // var sourceArrowheadTool = new joint.linkTools.SourceArrowhead();\n\n    var targetArrowheadTool = new joint.linkTools.TargetArrowhead(); // var sourceAnchorTool = new joint.linkTools.SourceAnchor();\n    // var targetAnchorTool = new joint.linkTools.TargetAnchor();\n    // var boundaryTool = new joint.linkTools.Boundary();\n    // var removeButton = new joint.linkTools.Remove();\n\n    var toolsView = new joint.dia.ToolsView({\n      tools: [// verticesTool, segmentsTool,\n      // sourceArrowheadTool, \n      targetArrowheadTool // sourceAnchorTool, targetAnchorTool,\n      // boundaryTool, removeButton\n      ]\n    }); //hàm viết hoa chữ đầu\n\n    function jsUcfirst(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    } //hàm render stencil\n\n\n    function stencilRenderHandler(positionX, positionY, arr, elNoInPorts = \"\", spaceBetweenElToX = 0, spaceBetweenElToY = 0) {\n      arr.forEach(element => {\n        //chuyển thành hoa chữ đầu cho đúng định dạng file ảnh lưu\n        let elementName = jsUcfirst(element);\n\n        if (elementName === jsUcfirst(elNoInPorts)) {\n          element = new customElNoInPorts();\n        } else {\n          element = new customEl();\n        }\n\n        console.log(`@/assets/${elementName}.svg`);\n        element.prop('attrs/image/xlinkHref', require(`./assets/${elementName}.svg`));\n        stencilShapes.push(element.position(positionX, positionY));\n\n        if (spaceBetweenElToX > 0) {\n          positionX += element.attributes.size.width + spaceBetweenElToX;\n        }\n\n        if (spaceBetweenElToY > 0) {\n          positionY += element.attributes.size.height + spaceBetweenElToY;\n        }\n      });\n    }\n\n    var arr = ['filter', 'formula', 'join', 'load', 'pivot', 'sample', 'script', 'select', 'sort', 'summarize', 'transposeTable', 'union', 'weightAvg'];\n    var stencilShapes = [];\n    stencilRenderHandler(20, 20, arr, \"load\", 16);\n    let graph = new joint.dia.Graph();\n    var paper = new joint.dia.Paper({\n      el: document.getElementById('paper'),\n      width: 800,\n      height: 600,\n      model: graph,\n      async: true,\n      sorting: joint.dia.Paper.sorting.APPROX,\n      gridSize: 10,\n      drawGrid: true,\n      restrictTranslate: true,\n      stopDelegation: false,\n      interactive: {\n        vertexAdd: false\n      },\n      // background: { color: '#F3F7F6' },\n      // defaultConnectionPoint: { name: 'boundary' },\n      // defaultConnector: {\n      //     name: \"rounded\"\n      //   },\n      //   defaultRouter: {\n      //     name: \"manhattan\",\n      //     args: {\n      //       step: 10,\n      //       endDirections: [\"bottom\"],\n      //       startDirections: [\"top\"],\n      //       padding: { bottom: 20 }\n      //     }\n      //   },\n      snapLinks: {\n        radius: 75\n      },\n      linkPinning: false,\n      multiLinks: false,\n      defaultRouter: {\n        name: 'manhattan',\n        args: {\n          padding: 10\n        }\n      },\n      defaultConnector: {\n        name: 'rounded'\n      },\n      validateConnection: function (cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n        // Prevent linking from input ports.\n        if (magnetS && magnetS.getAttribute('port-group') === 'in') return false; // Prevent linking from output ports to input ports within one element.\n\n        if (cellViewS === cellViewT) return false; // Prevent linking to input ports.\n\n        return magnetT && magnetT.getAttribute('port-group') === 'in' || cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer';\n      },\n      // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n      //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n      //     return view1 !== view2;\n      // },\n      interactive: {\n        linkMove: true,\n        labelMove: true,\n        arrowheadMove: true,\n        vertexMove: false,\n        vertexAdd: false,\n        vertexRemove: false,\n        useLinkTools: false\n      },\n      defaultLink: function () {\n        return new joint.shapes.standard.Link({\n          attrs: {\n            z: 1,\n            line: {\n              connection: true,\n              stroke: '#707070',\n              strokeLinejoin: 'round'\n            },\n            wrapper: {\n              connection: true,\n              strokeWidth: 10,\n              strokeLinejoin: 'round'\n            }\n          },\n          markup: [{\n            tagName: 'path',\n            selector: 'wrapper',\n            attributes: {\n              'fill': 'none',\n              'stroke': 'transparent'\n            }\n          }, {\n            tagName: 'path',\n            selector: 'line',\n            attributes: {\n              'fill': 'none'\n            }\n          }]\n        });\n      }\n    });\n    var stencil = new joint.ui.Stencil({\n      paper: paper,\n      width: 200,\n      height: 100,\n      dropAnimation: {\n        duration: 200,\n        easing: 'swing'\n      }\n    });\n    document.getElementById('stencil').appendChild(stencil.render().el);\n    stencil.load(stencilShapes);\n    var selection = new joint.ui.Selection({\n      theme: 'material',\n      paper: paper,\n      useModelGeometry: true\n    }); //halo cấu hình\n\n    paper.on('cell:pointerup', function (cellView) {\n      var halo = new joint.ui.Halo({\n        cellView: cellView,\n        type: 'toolbar',\n        boxContent: false // bang phia duoi cell cho biet tọa độ height width và angle\n\n      });\n      halo.removeHandle('resize');\n      halo.removeHandle('rotate');\n      halo.removeHandle('direction');\n      halo.render(); //cho cell đang chọn lên trc và gán cho selectedEl để chạy những chức năng tiếp theo\n\n      selectedElement = cellView.model;\n      selectedElement.toFront({\n        ignoreCommandManager: true\n      }); // cellView.$el[0].parentElement.appendChild(cellView.$el[0])\n      // console.log(graph.getLinks())\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["require","mounted","highlighters","joint","mask","selectionNode","selectedElement","selectedLink","customEl","dia","Element","define","z","size","width","height","removable","attrs","image","x","y","root","magnet","body","fill","stroke","strokeWidth","rx","ry","ports","items","id","group","groups","out","markup","tagName","selector","position","name","portBody","r","in","customElNoInPorts","theme","line","connection","strokeLinejoin","targetMarker","targetArrowheadTool","linkTools","TargetArrowhead","toolsView","ToolsView","tools","jsUcfirst","string","charAt","toUpperCase","slice","stencilRenderHandler","positionX","positionY","arr","elNoInPorts","spaceBetweenElToX","spaceBetweenElToY","forEach","element","elementName","console","log","prop","stencilShapes","push","attributes","graph","Graph","paper","Paper","el","document","getElementById","model","async","sorting","APPROX","gridSize","drawGrid","restrictTranslate","stopDelegation","interactive","vertexAdd","snapLinks","radius","linkPinning","multiLinks","defaultRouter","args","padding","defaultConnector","validateConnection","cellViewS","magnetS","cellViewT","magnetT","end","linkView","getAttribute","get","linkMove","labelMove","arrowheadMove","vertexMove","vertexRemove","useLinkTools","defaultLink","shapes","standard","Link","wrapper","stencil","ui","Stencil","dropAnimation","duration","easing","appendChild","render","load","selection","Selection","useModelGeometry","on","cellView","halo","Halo","type","boxContent","removeHandle","toFront","ignoreCommandManager"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["\n<template>\n<h1>Home</h1>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  \n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\n\n// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\n\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js');\n\n\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n      var highlighters=joint.highlighters;\n    var mask = joint.highlighters.mask;\n    let selectionNode = null;\n    let selectedElement = null;\n    let selectedLink = null\n    \n      var customEl = joint.dia.Element.define('standard.Rectangle', {\n        z: 1,\n        size: {\n            width: 44,\n            height: 35\n        },\n        removable: false,\n        attrs: {\n            image: {\n                x: 5,\n                y: 5,\n                width: 'calc(w-10)',\n                height: 'calc(h-10 )'\n            },\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                width: 'calc(w)',\n                height: 'calc(h)',\n                strokeWidth: 2,\n                rx: 5,\n                ry: 5,\n\n            }\n        },\n        ports: {\n            items: [{\n                id: 'out-port',\n                group: 'out',\n\n            },\n            {\n                id: 'in-port',\n                group: 'in'\n            }\n            ],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n\n                        }\n                    }\n                },\n                in: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'left'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'passive',\n                            fill: '#FFFFFF',\n                            stroke: '#187BD3',\n\n                        }\n                    }\n                }\n            }\n        },\n        markup: [\n            {\n                tagName: 'rect',\n                selector: 'body',\n            },\n            {\n                tagName: 'image',\n                selector: 'image'\n            }, {\n                tagName: 'ports',\n                selector: 'ports'\n            }]\n    })\n    var customElNoInPorts = joint.dia.Element.define('standard.Rectangle', {\n        z: 1,\n        theme: 'material',\n        size: {\n            width: 44,\n            height: 35\n        },\n        removable: false,\n        attrs: {\n            image: {\n                x: 5,\n                y: 5,\n                width: 'calc(w-10)',\n                height: 'calc(h-10 )'\n            },\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0',\n                width: 'calc(w)',\n                height: 'calc(h)',\n                strokeWidth: 2,\n            },\n            line: {\n                connection: true,\n                stroke: '#333333',\n                strokeWidth: 2,\n                strokeLinejoin: 'round',\n                targetMarker: {\n                    'type': 'path',\n                    'd': 'M 10 -5 0 0 10 5 z'\n                }\n            },\n        },\n        ports: {\n            items: [\n                {\n                    id: 'out-port',\n                    group: 'out'\n                }\n            ],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 5,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n                        }\n                    }\n                },\n\n            }\n        },\n        markup: [\n            {\n                tagName: 'rect',\n                selector: 'body',\n            }, {\n                tagName: 'image',\n                selector: 'image'\n            }, {\n                tagName: 'ports',\n                selector: 'ports'\n            }]\n    })\n    //create link tool\n//     var verticesTool = new joint.linkTools.Vertices();\n// var segmentsTool = new joint.linkTools.Segments();\n// var sourceArrowheadTool = new joint.linkTools.SourceArrowhead();\nvar targetArrowheadTool = new joint.linkTools.TargetArrowhead();\n// var sourceAnchorTool = new joint.linkTools.SourceAnchor();\n// var targetAnchorTool = new joint.linkTools.TargetAnchor();\n// var boundaryTool = new joint.linkTools.Boundary();\n// var removeButton = new joint.linkTools.Remove();\n\nvar toolsView = new joint.dia.ToolsView({\n    tools: [\n        // verticesTool, segmentsTool,\n        // sourceArrowheadTool, \n        targetArrowheadTool,\n        // sourceAnchorTool, targetAnchorTool,\n        // boundaryTool, removeButton\n    ]\n});\n      \n    //hàm viết hoa chữ đầu\n    function jsUcfirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    //hàm render stencil\n    function stencilRenderHandler(positionX,positionY,arr,elNoInPorts =\"\",spaceBetweenElToX=0,spaceBetweenElToY=0){\n        arr.forEach(element => {\n            //chuyển thành hoa chữ đầu cho đúng định dạng file ảnh lưu\n            let elementName = jsUcfirst(element)\n            if (elementName === jsUcfirst(elNoInPorts)) {\n                element = new customElNoInPorts();\n            }\n            else {\n                element = new customEl();\n            }\n            console.log(`@/assets/${elementName}.svg`)\n            element.prop('attrs/image/xlinkHref', require(`./assets/${elementName}.svg`))\n            stencilShapes.push(element.position(positionX, positionY))\n            if(spaceBetweenElToX>0){\n                positionX += element.attributes.size.width+spaceBetweenElToX;\n            }\n            if(spaceBetweenElToY>0){\n                positionY += element.attributes.size.height+spaceBetweenElToY;\n            }\n        });\n    }\n    var arr = ['filter', 'formula', 'join', 'load', 'pivot', 'sample', 'script', 'select', 'sort', 'summarize', 'transposeTable', 'union', 'weightAvg'];\n\n    var stencilShapes = [\n        \n        \n    ];\n    stencilRenderHandler(20,20,arr,\"load\",16)\n            let graph = new joint.dia.Graph;\n\n             var paper = new joint.dia.Paper({  \n        el: document.getElementById('paper'),\n        width: 800,\n        height: 600,\n        model: graph,\n        async: true,\n        sorting: joint.dia.Paper.sorting.APPROX,\n        gridSize: 10,\n        drawGrid: true,\n        restrictTranslate: true,\n        stopDelegation: false,\n        \n        interactive: { vertexAdd: false } ,\n        // background: { color: '#F3F7F6' },\n        // defaultConnectionPoint: { name: 'boundary' },\n        // defaultConnector: {\n        //     name: \"rounded\"\n        //   },\n        //   defaultRouter: {\n        //     name: \"manhattan\",\n        //     args: {\n        //       step: 10,\n        //       endDirections: [\"bottom\"],\n        //       startDirections: [\"top\"],\n        //       padding: { bottom: 20 }\n        //     }\n        //   },\n        snapLinks: {\n            radius: 75\n        },\n        linkPinning: false,\n        multiLinks: false,\n        defaultRouter: { name: 'manhattan', args: { padding: 10 }},\n        defaultConnector: { name: 'rounded' },\n        validateConnection: function(cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n            // Prevent linking from input ports.\n            if (magnetS && magnetS.getAttribute('port-group') === 'in') return false;\n            // Prevent linking from output ports to input ports within one element.\n            if (cellViewS === cellViewT) return false;\n            // Prevent linking to input ports.\n            return (magnetT && magnetT.getAttribute('port-group') === 'in') || (cellViewS.model.get('type') === 'qad.Question' && cellViewT.model.get('type') === 'qad.Answer');\n        },\n        // validateConnection: function (view1, _magnet1, view2, _magnet2) {\n        //     // Do not allow loop links (Element to Link, Element A to Element B is valid).\n        //     return view1 !== view2;\n        // },\n        interactive: {\n            linkMove: true,\n            labelMove: true,\n            arrowheadMove: true,\n            vertexMove: false,\n            vertexAdd: false,\n            vertexRemove: false,\n            useLinkTools: false,\n        },\n        defaultLink: function () {\n            return new joint.shapes.standard.Link({\n                attrs: {\n                    z:1,\n                    line: {\n                        connection: true,\n                        stroke: '#707070',\n                        strokeLinejoin: 'round',\n                    },\n                    wrapper: {\n                        connection: true,\n                        strokeWidth: 10,\n                        strokeLinejoin: 'round'\n                    },\n                    \n                },\n                \n                markup: [{\n                    tagName: 'path',\n                    selector: 'wrapper',\n                    attributes: {\n                        'fill': 'none',\n                        \n                        'stroke': 'transparent'\n                    }\n                }, {\n                    tagName: 'path',\n                    selector: 'line',\n                    attributes: {\n                        'fill': 'none',\n                        \n                    }\n                }]\n            });\n        }\n    });\nvar stencil = new joint.ui.Stencil({\n        paper: paper,\n        width: 200,\n        height: 100,\n        dropAnimation: { duration: 200, easing: 'swing' },\n        \n    });document.getElementById('stencil').appendChild(stencil.render().el);\n    stencil.load(stencilShapes);\n    var selection = new joint.ui.Selection({\n        theme: 'material',\n        paper: paper,\n        useModelGeometry: true,\n       \n    });\n     //halo cấu hình\n       paper.on('cell:pointerup',function (cellView) {\n        var halo = new joint.ui.Halo({\n            cellView: cellView,\n            type: 'toolbar',\n            boxContent:false // bang phia duoi cell cho biet tọa độ height width và angle\n        });\n        halo.removeHandle('resize');\n        halo.removeHandle('rotate');\n        halo.removeHandle('direction');\n        halo.render();\n        //cho cell đang chọn lên trc và gán cho selectedEl để chạy những chức năng tiếp theo\n        selectedElement = cellView.model;\n        selectedElement.toFront({ ignoreCommandManager: true })\n        // cellView.$el[0].parentElement.appendChild(cellView.$el[0])\n        // console.log(graph.getLinks())\n    })    \n    }\n  }\n\n  \n\n</script>\n\n<style >\n@import \"@/../public/vendor/jointJS/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.elements.joint-paper.joint-theme-default{\n    width:100% !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}