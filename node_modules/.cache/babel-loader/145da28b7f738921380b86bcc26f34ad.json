{"ast":null,"code":"// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js'); // import { Options, Vue } from 'vue-class-component';\n\n\nexport default {\n  mounted() {\n    var rectangle = new joint.shapes.standard.Rectangle({\n      z: 1,\n      size: {\n        width: 60,\n        height: 60\n      },\n      removable: false,\n      attrs: {\n        root: {\n          magnet: false\n        },\n        body: {\n          fill: '#FFFFFF',\n          stroke: '#A0A0A0'\n        }\n      },\n      ports: {\n        items: [{\n          id: 'out-port',\n          group: 'out'\n        }],\n        groups: {\n          out: {\n            markup: [{\n              tagName: 'circle',\n              selector: 'portBody'\n            }],\n            position: {\n              name: 'right'\n            },\n            attrs: {\n              portBody: {\n                r: 10,\n                magnet: 'active',\n                fill: '#187BD3',\n                stroke: '#187BD3'\n              }\n            }\n          }\n        }\n      }\n    });\n    let graph = new joint.dia.Graph();\n    let paper = new joint.dia.Paper({\n      el: $('#paper'),\n      width: 600,\n      height: 200,\n      model: graph,\n      gridSize: 1\n    });\n    let rect = new joint.shapes.basic.Rect({\n      position: {\n        x: 100,\n        y: 30\n      },\n      size: {\n        width: 100,\n        height: 30\n      },\n      attrs: {\n        rect: {\n          fill: 'blue'\n        },\n        text: {\n          text: 'my box',\n          fill: 'white'\n        }\n      }\n    });\n    let rect2 = rect.clone();\n    rect2.translate(300);\n    let link = new joint.dia.Link({\n      source: {\n        id: rect.id\n      },\n      target: {\n        id: rect2.id\n      }\n    });\n    graph.addCells([rect, rect2, link]);\n  }\n\n};","map":{"version":3,"mappings":"AAuBA;AACA;AACA;AACA;AACA;AAEAA,OAAO,CAAC,6CAAD,CAAP,C,CAGA;;;AACA,eAAe;EACbC,OAAO,GAAG;IACN,IAAIC,SAAQ,GAAI,IAAIC,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBC,SAA1B,CAAoC;MAClDC,CAAC,EAAE,CAD+C;MAElDC,IAAI,EAAE;QACFC,KAAK,EAAE,EADL;QAEFC,MAAM,EAAE;MAFN,CAF4C;MAMlDC,SAAS,EAAE,KANuC;MAOlDC,KAAK,EAAE;QACHC,IAAI,EAAE;UACFC,MAAM,EAAE;QADN,CADH;QAIHC,IAAI,EAAE;UACFC,IAAI,EAAE,SADJ;UAEFC,MAAM,EAAE;QAFN;MAJH,CAP2C;MAgBlDC,KAAK,EAAE;QACHC,KAAK,EAAE,CAAC;UACJC,EAAE,EAAE,UADA;UAEJC,KAAK,EAAE;QAFH,CAAD,CADJ;QAKHC,MAAM,EAAE;UACJC,GAAG,EAAE;YACDC,MAAM,EAAE,CAAC;cACLC,OAAO,EAAE,QADJ;cAELC,QAAQ,EAAE;YAFL,CAAD,CADP;YAKDC,QAAQ,EAAE;cACNC,IAAI,EAAE;YADA,CALT;YAQDhB,KAAK,EAAE;cACHiB,QAAQ,EAAE;gBACNC,CAAC,EAAE,EADG;gBAENhB,MAAM,EAAE,QAFF;gBAGNE,IAAI,EAAE,SAHA;gBAINC,MAAM,EAAE;cAJF;YADP;UARN;QADD;MALL;IAhB2C,CAApC,CAAhB;IA0CM,IAAIc,KAAI,GAAI,IAAI5B,KAAK,CAAC6B,GAAN,CAAUC,KAAd,EAAZ;IAEA,IAAIC,KAAI,GAAI,IAAI/B,KAAK,CAAC6B,GAAN,CAAUG,KAAd,CAAoB;MAC5BC,EAAE,EAAEC,CAAC,CAAC,QAAD,CADuB;MAE5B5B,KAAK,EAAE,GAFqB;MAG5BC,MAAM,EAAE,GAHoB;MAI5B4B,KAAK,EAAEP,KAJqB;MAK5BQ,QAAQ,EAAE;IALkB,CAApB,CAAZ;IAQA,IAAIC,IAAG,GAAI,IAAIrC,KAAK,CAACC,MAAN,CAAaqC,KAAb,CAAmBC,IAAvB,CAA4B;MACnCf,QAAQ,EAAE;QAAEgB,CAAC,EAAE,GAAL;QAAUC,CAAC,EAAE;MAAb,CADyB;MAEnCpC,IAAI,EAAE;QAAEC,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE;MAAtB,CAF6B;MAGnCE,KAAK,EAAE;QAAE4B,IAAI,EAAE;UAAExB,IAAI,EAAE;QAAR,CAAR;QAA0B6B,IAAI,EAAE;UAAEA,IAAI,EAAE,QAAR;UAAkB7B,IAAI,EAAE;QAAxB;MAAhC;IAH4B,CAA5B,CAAX;IAMA,IAAI8B,KAAI,GAAIN,IAAI,CAACO,KAAL,EAAZ;IACAD,KAAK,CAACE,SAAN,CAAgB,GAAhB;IAEA,IAAIC,IAAG,GAAI,IAAI9C,KAAK,CAAC6B,GAAN,CAAUkB,IAAd,CAAmB;MAC1BC,MAAM,EAAE;QAAE/B,EAAE,EAAEoB,IAAI,CAACpB;MAAX,CADkB;MAE1BgC,MAAM,EAAE;QAAEhC,EAAE,EAAE0B,KAAK,CAAC1B;MAAZ;IAFkB,CAAnB,CAAX;IAKAW,KAAK,CAACsB,QAAN,CAAe,CAACb,IAAD,EAAOM,KAAP,EAAcG,IAAd,CAAf;EACJ;;AArEO,CAAf","names":["require","mounted","rectangle","joint","shapes","standard","Rectangle","z","size","width","height","removable","attrs","root","magnet","body","fill","stroke","ports","items","id","group","groups","out","markup","tagName","selector","position","name","portBody","r","graph","dia","Graph","paper","Paper","el","$","model","gridSize","rect","basic","Rect","x","y","text","rect2","clone","translate","link","Link","source","target","addCells"],"sourceRoot":"","sources":["C:\\Users\\Admin\\dataflow-test\\src\\App.vue"],"sourcesContent":["\n<template>\n<h1>Home</h1>\n  <div class=\"canvas\" ref=\"canvas\"></div>\n  \n  <div id=\"app\">\n    <div class=\"btn_contain\">\n        <button id=\"btn-zoomout\" class=\"btn\">zoom out</button>\n        <button id=\"btn-zoomin\" class=\"btn\">zoom in</button>\n        <button id=\"btn-center\" class=\"btn\">center</button>\n        <button id=\"btn-center-content\" class=\"btn\">center content</button>\n    </div>\n    <div id=\"stencil\"></div>\n    \n    <div id=\"paper\"></div>\n    <div id=\"navigator\"></div>\n    \n    \n        </div>\n</template>\n\n<script>\n\n// import '@/../public/vendor/jointJS/js/lib/backbone.js'\n// import '@/../public/vendor/jointJS/js/lib/jquery.min.js'\n// import '@/../public/vendor/jointJS/js/lib/lodash.min.js'\n// import '@/../public/vendor/jointJS/js/lib/rappid.js'\n// import '@/../public/vendor/jointJS/js/lib/backbone.min.js'\n\nrequire('@/../public/vendor/jointJS/js/lib/rappid.js');\n\n\n// import { Options, Vue } from 'vue-class-component';\nexport default {\n  mounted() {\n      var rectangle = new joint.shapes.standard.Rectangle({\n        z: 1,\n        size: {\n            width: 60,\n            height: 60\n        },\n        removable: false,\n        attrs: {\n            root: {\n                magnet: false\n            },\n            body: {\n                fill: '#FFFFFF',\n                stroke: '#A0A0A0'\n            }\n        },\n        ports: {\n            items: [{\n                id: 'out-port',\n                group: 'out'\n            }],\n            groups: {\n                out: {\n                    markup: [{\n                        tagName: 'circle',\n                        selector: 'portBody'\n                    }],\n                    position: {\n                        name: 'right'\n                    },\n                    attrs: {\n                        portBody: {\n                            r: 10,\n                            magnet: 'active',\n                            fill: '#187BD3',\n                            stroke: '#187BD3'\n                        }\n                    }\n                }\n            }\n        }\n    });\n            let graph = new joint.dia.Graph;\n\n            let paper = new joint.dia.Paper({\n                el: $('#paper'),\n                width: 600,\n                height: 200,\n                model: graph,\n                gridSize: 1\n            });\n\n            let rect = new joint.shapes.basic.Rect({\n                position: { x: 100, y: 30 },\n                size: { width: 100, height: 30 },\n                attrs: { rect: { fill: 'blue' }, text: { text: 'my box', fill: 'white' } }\n            });\n\n            let rect2 = rect.clone();\n            rect2.translate(300);\n\n            let link = new joint.dia.Link({\n                source: { id: rect.id },\n                target: { id: rect2.id }\n            });\n\n            graph.addCells([rect, rect2, link]);\n        }\n  }\n\n  \n\n</script>\n\n<style >\n@import \"@/../public/vendor/jointJS/build/package/rappid.css\";\n@import \"@/css/data_flow.css\";\n@import \"@/css/lib/rappid.min.css\";\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}